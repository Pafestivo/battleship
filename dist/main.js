(()=>{"use strict";var n={806:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'@media only screen and (max-width: 1000px) {\n  #page-title {\n    margin-top: 30px;\n    font-size: 75px;\n  }\n\n  #game-container {\n    flex-direction: column;\n    margin-top: 10px;\n  }\n  \n  .player h1 {\n    font-size: 30px\n  }\n\n  .player h2 {\n    font-size: 20px;\n  }\n\n  .rotate {\n    font-size: 15px;\n    padding: 3px 15px;\n  }\n\n  #length-indicator {\n    font-size: 20px;\n  }\n\n  .board {\n    margin: 0 auto;\n    width: 350px;\n    height: 350px;\n  }\n\n  .mobile-hidden {\n    display: none;\n  }\n\n  .ship-hit::after {\n    position: absolute;\n    content: "\\274c";\n    font-size: 27px; \n    color: #FFF;\n  }\n}',"",{version:3,sources:["webpack://./src/styles/media-queries.css"],names:[],mappings:"AAAA;EACE;IACE,gBAAgB;IAChB,eAAe;EACjB;;EAEA;IACE,sBAAsB;IACtB,gBAAgB;EAClB;;EAEA;IACE;EACF;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,iBAAiB;EACnB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,cAAc;IACd,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,WAAW;EACb;AACF",sourcesContent:['@media only screen and (max-width: 1000px) {\n  #page-title {\n    margin-top: 30px;\n    font-size: 75px;\n  }\n\n  #game-container {\n    flex-direction: column;\n    margin-top: 10px;\n  }\n  \n  .player h1 {\n    font-size: 30px\n  }\n\n  .player h2 {\n    font-size: 20px;\n  }\n\n  .rotate {\n    font-size: 15px;\n    padding: 3px 15px;\n  }\n\n  #length-indicator {\n    font-size: 20px;\n  }\n\n  .board {\n    margin: 0 auto;\n    width: 350px;\n    height: 350px;\n  }\n\n  .mobile-hidden {\n    display: none;\n  }\n\n  .ship-hit::after {\n    position: absolute;\n    content: "\\274c";\n    font-size: 27px; \n    color: #FFF;\n  }\n}'],sourceRoot:""}]);const A=i},884:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".player h1 {\n  text-align: center;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.direction {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.player h2 {\n  font-size: 30px;\n}\n\n.rotate {\n  background-color: white;\n  color: black;\n  margin: 0 0 10px 10px;\n  width: max-content;\n  text-align: center;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 5px 15px;\n  cursor: pointer;\n}\n\n.rotate:hover {\n  background-color: rgb(199, 199, 199);\n}\n\n#length-indicator {\n  text-align: center;\n  font-size: 25px;\n}\n\n.pre-game {\n  cursor: pointer;\n}\n\n.hidden {\n  display: none\n}","",{version:3,sources:["webpack://./src/styles/prepare-game.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,qBAAqB;EACrB,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE;AACF",sourcesContent:[".player h1 {\n  text-align: center;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.direction {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.player h2 {\n  font-size: 30px;\n}\n\n.rotate {\n  background-color: white;\n  color: black;\n  margin: 0 0 10px 10px;\n  width: max-content;\n  text-align: center;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 5px 15px;\n  cursor: pointer;\n}\n\n.rotate:hover {\n  background-color: rgb(199, 199, 199);\n}\n\n#length-indicator {\n  text-align: center;\n  font-size: 25px;\n}\n\n.pre-game {\n  cursor: pointer;\n}\n\n.hidden {\n  display: none\n}"],sourceRoot:""}]);const A=i},262:(n,e,t)=>{t.d(e,{Z:()=>A});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".ship-list {\n  display: flex;\n  flex-direction: column;\n  background-color: #2389da;\n  width: 400px;\n  height: 500px;\n  row-gap: 15px;\n}\n\n.ships-container-vertical {\n  display: flex;\n  column-gap: 40px;\n  row-gap: 10px;\n  flex-wrap: wrap;\n  padding: 0 40px;\n}\n\n.ships-container-horizontal {\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  padding-left: 40px;\n}\n\n.ship-list h1 {\n  text-align: center;\n}\n\n.ship {\n  display: flex;\n  width: max-content;\n  height: max-content;\n  cursor: move;\n}\n\n.square {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  background-color: azure;\n}","",{version:3,sources:["webpack://./src/styles/ship-list.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,sBAAsB;EACtB,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,aAAa;AACf;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,aAAa;EACb,eAAe;EACf,eAAe;AACjB;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,aAAa;EACb,kBAAkB;AACpB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,mBAAmB;EACnB,YAAY;AACd;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,uBAAuB;EACvB,uBAAuB;AACzB",sourcesContent:[".ship-list {\n  display: flex;\n  flex-direction: column;\n  background-color: #2389da;\n  width: 400px;\n  height: 500px;\n  row-gap: 15px;\n}\n\n.ships-container-vertical {\n  display: flex;\n  column-gap: 40px;\n  row-gap: 10px;\n  flex-wrap: wrap;\n  padding: 0 40px;\n}\n\n.ships-container-horizontal {\n  display: flex;\n  flex-direction: column;\n  row-gap: 15px;\n  padding-left: 40px;\n}\n\n.ship-list h1 {\n  text-align: center;\n}\n\n.ship {\n  display: flex;\n  width: max-content;\n  height: max-content;\n  cursor: move;\n}\n\n.square {\n  width: 50px;\n  height: 50px;\n  border: 1px solid black;\n  background-color: azure;\n}"],sourceRoot:""}]);const A=i},772:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(265),t.b),l=i()(r()),p=s()(c);l.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url("+p+');\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n  margin-top: 50px;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.highlight {\n  background-color: #6200ff;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mDAAgD;EAChD,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE;AACF;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;AAC3B",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url(../assets/images/background.jpg);\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n  margin-top: 50px;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.highlight {\n  background-color: #6200ff;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n'],sourceRoot:""}]);const d=l},561:(n,e,t)=>{t.d(e,{Z:()=>d});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),A=t(667),s=t.n(A),c=new URL(t(265),t.b),l=i()(r()),p=s()(c);l.push([n.id,".overlay {\n  position: fixed;\n  display: none;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.winner-overlay {\n  position: fixed;\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 30px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: url("+p+");\n  width: 600px;\n  height: 300px;\n  box-shadow: 2px 0px 10px #242424;\n}\n\n.winner-overlay h1 {\n  font-size: 60px\n}\n\n.winner-overlay p {\n  background-color: #2389da;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 10px 25px;\n  cursor: pointer;\n}\n\n.winner-overlay p:hover {\n  background-color: #6200ff;\n}\n\n","",{version:3,sources:["webpack://./src/styles/winner-overlay.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,aAAa;EACb,MAAM;EACN,OAAO;EACP,YAAY;EACZ,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,mDAAgD;EAChD,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE;AACF;;AAEA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:[".overlay {\n  position: fixed;\n  display: none;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.winner-overlay {\n  position: fixed;\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 30px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: url(../assets/images/background.jpg);\n  width: 600px;\n  height: 300px;\n  box-shadow: 2px 0px 10px #242424;\n}\n\n.winner-overlay h1 {\n  font-size: 60px\n}\n\n.winner-overlay p {\n  background-color: #2389da;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 10px 25px;\n  cursor: pointer;\n}\n\n.winner-overlay p:hover {\n  background-color: #6200ff;\n}\n\n"],sourceRoot:""}]);const d=l},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var A=0;A<this.length;A++){var s=this[A][0];null!=s&&(i[s]=!0)}for(var c=0;c<n.length;c++){var l=[].concat(n[c]);o&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),r&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=r):l[4]="".concat(r)),e.push(l))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],A=0;A<n.length;A++){var s=n[A],c=o.base?s[0]+o.base:s[0],l=a[c]||0,p="".concat(c," ").concat(l);a[c]=l+1;var d=t(p),u={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==d)e[d].references++,e[d].updater(u);else{var h=r(u,o);o.byIndex=A,e.splice(A,0,{identifier:p,updater:h,references:1})}i.push(p)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var A=t(a[i]);e[A].references--}for(var s=o(n,r),c=0;c<a.length;c++){var l=t(a[c]);0===e[l].references&&(e[l].updater(),e.splice(l,1))}a=s}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},265:(n,e,t)=>{n.exports=t.p+"assets/images/background.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function n(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const t=n,o=[];let r=0,a=!1;return{get length(){return t},get shipCoordinates(){return o},get id(){return e},get hits(){return r},get isSunk(){return a},addCoordinates(n){o.push(n)},hit(){r++,r===t&&(a=!0)}}}function e(){let e=[],t=[],o=[],r=0,a=1,i=1;for(let n=0;n<100;n++){let n={coordinates:[a,i],ship:null,attacked:!1,available:!0};e.push(n),a++,a>10&&(a=1,i++)}return{get board(){return e},get sunkShips(){return o},get totalHits(){return r},get ships(){return t},placeShip(o,r,a){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if("right"===r&&o[0]+a>11)return"ship exceeding boundaries";if("down"===r&&o[1]+a>11)return"ship exceeding boundaries";let A=[...o];for(let n=0;n<a;n++){0!==n&&("right"===r?A[0]++:A[1]++);let t=e.find((n=>n.coordinates.every(((n,e)=>n===A[e]))));if(!t)return"No such coordinates";if(!t.available)return`${t.coordinates} is unavailable`}const s=new n(a,i);t.push(s);let c=[...o];for(let n=0;n<a;n++){let n=[...c];"right"===r?c[0]++:c[1]++,s.addCoordinates(n)}for(let n=0;n<a;n++){0!==n&&("right"===r?o[0]++:o[1]++);let[t,a]=o,i=[[t-1,a],[t+1,a],[t-1,a+1],[t-1,a-1],[t+1,a+1],[t+1,a-1],[t,a+1],[t,a-1]],A=e.find((n=>n.coordinates.every(((n,e)=>n===o[e]))));A.ship=s,A.ship.coordinates=A.coordinates,A.available=!1,i.forEach((n=>{let t=e.find((e=>e.coordinates.every(((e,t)=>e===n[t]))));t&&(t.available=!1)}))}},receiveAttack(n){const t=e.find((e=>e.coordinates.every(((e,t)=>e===n[t]))));void 0===t||t.attacked||(t.attacked=!0,r++,t.ship&&(t.ship.hit(),t.ship.isSunk&&o.push(t.ship)))},getAdjacentBoxes(n){const[e,t]=n;return[[e-1,t],[e+1,t],[e-1,t+1],[e-1,t-1],[e+1,t+1],[e+1,t-1],[e,t+1],[e,t-1]].map((n=>this.board.find((e=>e.coordinates.every(((e,t)=>e===n[t])))))).filter((n=>void 0!==n))},hasArmedShips(){let n=!1;return t.forEach((e=>{e.isSunk||(n=!0)})),n}}}var o=t(379),r=t.n(o),a=t(795),i=t.n(a),A=t(569),s=t.n(A),c=t(565),l=t.n(c),p=t(216),d=t.n(p),u=t(589),h=t.n(u),g=t(772),E={};E.styleTagTransform=h(),E.setAttributes=l(),E.insert=s().bind(null,"head"),E.domAPI=i(),E.insertStyleElement=d(),r()(g.Z,E),g.Z&&g.Z.locals&&g.Z.locals;var f=t(561),C={};C.styleTagTransform=h(),C.setAttributes=l(),C.insert=s().bind(null,"head"),C.domAPI=i(),C.insertStyleElement=d(),r()(f.Z,C),f.Z&&f.Z.locals&&f.Z.locals;var x=t(884),B={};B.styleTagTransform=h(),B.setAttributes=l(),B.insert=s().bind(null,"head"),B.domAPI=i(),B.insertStyleElement=d(),r()(x.Z,B),x.Z&&x.Z.locals&&x.Z.locals;var m=t(262),b={};b.styleTagTransform=h(),b.setAttributes=l(),b.insert=s().bind(null,"head"),b.domAPI=i(),b.insertStyleElement=d(),r()(m.Z,b),m.Z&&m.Z.locals&&m.Z.locals;var v=t(806),y={};y.styleTagTransform=h(),y.setAttributes=l(),y.insert=s().bind(null,"head"),y.domAPI=i(),y.insertStyleElement=d(),r()(v.Z,y),v.Z&&v.Z.locals&&v.Z.locals;const k=function(n){const t=new e;return{name:"player",gameBoard:t,get board(){return t.board},placeShip:(n,e,o)=>t.placeShip(n,e,o),shoot(n,e){n.gameBoard.receiveAttack(e)}}}();new e,function(n,e){const t=document.getElementById("player-board");for(let e=0;e<n.board.length;e++){const o=document.createElement("div");o.id=n.board[e].coordinates,o.classList.add("box"),t.append(o)}let o="right",r=0;const a=document.getElementById("rotate"),i=document.getElementById("ship-container"),A=document.querySelectorAll(".ship"),s=document.querySelectorAll(".box"),c=document.querySelectorAll(".square");let l,p;function d(n){l=n.target}function u(n){n.preventDefault()}function h(e){if(!l)return;let t=0,a=0;const A=e.target.id.split(",");"right"===o?(t=A[0]-(p.id-1),a=+A[0]+(l.id-p.id)):(t=A[1]-(p.id-1),a=+A[1]+(l.id-p.id)),"right"===o?n.placeShip([t,+A[1]],o,+l.id):n.placeShip([+A[0],t],o,+l.id),n.gameBoard.ships.length>r&&(r++,s.forEach((n=>{if(a>10)return;const e=n.id.split(",");"right"===o?e[0]>=t&&e[0]<=a&&e[1]===A[1]&&(n.classList.add("contain-ship"),i.contains(l)&&(i.removeChild(l),l=null)):e[1]>=t&&e[1]<=a&&e[0]===A[0]&&(n.classList.add("contain-ship"),i.contains(l)&&(i.removeChild(l),l=null))})))}a.addEventListener("click",(()=>{"right"===o?(o="down",i.classList.remove("ships-container-horizontal"),i.classList.add("ships-container-vertical"),A.forEach((n=>{n.style.flexDirection="column"}))):(o="right",i.classList.remove("ships-container-vertical"),i.classList.add("ships-container-horizontal"),A.forEach((n=>{n.style.flexDirection="row"})))})),s.forEach((n=>{n.addEventListener("dragover",u),n.addEventListener("drop",h)})),A.forEach((n=>{n.addEventListener("dragstart",d)})),c.forEach((n=>{n.addEventListener("mouseover",(()=>{p=n}))}))}(k),document.querySelector(".winner-overlay > p").addEventListener("click",(()=>{window.location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,