(()=>{"use strict";var e={772:(e,n,t)=>{t.d(n,{Z:()=>u});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),c=t(667),s=t.n(c),d=new URL(t(265),t.b),l=i()(o()),p=s()(d);l.push([e.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url("+p+");\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  margin-top: 50px;\n  width: 500px;\n  height: 500px;\n}\n\n.box {\n  border: 1px solid black;\n  cursor: crosshair;\n}\n\n.box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n","",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mDAAgD;EAChD,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,yBAAyB;EACzB,gBAAgB;EAChB,YAAY;EACZ,aAAa;AACf;;AAEA;EACE,uBAAuB;EACvB,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE;AACF;;AAEA;EACE,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:["* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url(../assets/images/background.jpg);\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  margin-top: 50px;\n  width: 500px;\n  height: 500px;\n}\n\n.box {\n  border: 1px solid black;\n  cursor: crosshair;\n}\n\n.box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n"],sourceRoot:""}]);const u=l},645:e=>{e.exports=function(e){var n=[];return n.toString=function(){return this.map((function(n){var t="",r=void 0!==n[5];return n[4]&&(t+="@supports (".concat(n[4],") {")),n[2]&&(t+="@media ".concat(n[2]," {")),r&&(t+="@layer".concat(n[5].length>0?" ".concat(n[5]):""," {")),t+=e(n),r&&(t+="}"),n[2]&&(t+="}"),n[4]&&(t+="}"),t})).join("")},n.i=function(e,t,r,o,a){"string"==typeof e&&(e=[[null,e,void 0]]);var i={};if(r)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<e.length;d++){var l=[].concat(e[d]);r&&i[l[0]]||(void 0!==a&&(void 0===l[5]||(l[1]="@layer".concat(l[5].length>0?" ".concat(l[5]):""," {").concat(l[1],"}")),l[5]=a),t&&(l[2]?(l[1]="@media ".concat(l[2]," {").concat(l[1],"}"),l[2]=t):l[2]=t),o&&(l[4]?(l[1]="@supports (".concat(l[4],") {").concat(l[1],"}"),l[4]=o):l[4]="".concat(o)),n.push(l))}},n}},667:e=>{e.exports=function(e,n){return n||(n={}),e?(e=String(e.__esModule?e.default:e),/^['"].*['"]$/.test(e)&&(e=e.slice(1,-1)),n.hash&&(e+=n.hash),/["'() \t\n]|(%20)/.test(e)||n.needQuotes?'"'.concat(e.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):e):e}},537:e=>{e.exports=function(e){var n=e[1],t=e[3];if(!t)return n;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[n].concat([a]).join("\n")}return[n].join("\n")}},379:e=>{var n=[];function t(e){for(var t=-1,r=0;r<n.length;r++)if(n[r].identifier===e){t=r;break}return t}function r(e,r){for(var a={},i=[],c=0;c<e.length;c++){var s=e[c],d=r.base?s[0]+r.base:s[0],l=a[d]||0,p="".concat(d," ").concat(l);a[d]=l+1;var u=t(p),h={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==u)n[u].references++,n[u].updater(h);else{var A=o(h,r);r.byIndex=c,n.splice(c,0,{identifier:p,updater:A,references:1})}i.push(p)}return i}function o(e,n){var t=n.domAPI(n);return t.update(e),function(n){if(n){if(n.css===e.css&&n.media===e.media&&n.sourceMap===e.sourceMap&&n.supports===e.supports&&n.layer===e.layer)return;t.update(e=n)}else t.remove()}}e.exports=function(e,o){var a=r(e=e||[],o=o||{});return function(e){e=e||[];for(var i=0;i<a.length;i++){var c=t(a[i]);n[c].references--}for(var s=r(e,o),d=0;d<a.length;d++){var l=t(a[d]);0===n[l].references&&(n[l].updater(),n.splice(l,1))}a=s}}},569:e=>{var n={};e.exports=function(e,t){var r=function(e){if(void 0===n[e]){var t=document.querySelector(e);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(e){t=null}n[e]=t}return n[e]}(e);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:e=>{e.exports=function(e){var n=document.createElement("style");return e.setAttributes(n,e.attributes),e.insert(n,e.options),n}},565:(e,n,t)=>{e.exports=function(e){var n=t.nc;n&&e.setAttribute("nonce",n)}},795:e=>{e.exports=function(e){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var n=e.insertStyleElement(e);return{update:function(t){!function(e,n,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),n.styleTagTransform(r,e,n.options)}(n,e,t)},remove:function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)}}}},589:e=>{e.exports=function(e,n){if(n.styleSheet)n.styleSheet.cssText=e;else{for(;n.firstChild;)n.removeChild(n.firstChild);n.appendChild(document.createTextNode(e))}}},265:(e,n,t)=>{e.exports=t.p+"assets/images/background.jpg"}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var a=n[r]={id:r,exports:{}};return e[r](a,a.exports,t),a.exports}t.m=e,t.n=e=>{var n=e&&e.__esModule?()=>e.default:()=>e;return t.d(n,{a:n}),n},t.d=(e,n)=>{for(var r in n)t.o(n,r)&&!t.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:n[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),t.o=(e,n)=>Object.prototype.hasOwnProperty.call(e,n),(()=>{var e;t.g.importScripts&&(e=t.g.location+"");var n=t.g.document;if(!e&&n&&(n.currentScript&&(e=n.currentScript.src),!e)){var r=n.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=e})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function e(e){let n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const t=e;let r=0,o=!1;return{get length(){return t},get id(){return n},get hits(){return r},get isSunk(){return o},hit(){r++,r===t&&(o=!0)}}}function n(){let n=[],t=[],r=[],o=0,a=1,i=1;for(let e=0;e<100;e++){let e={coordinates:[a,i],ship:null,attacked:!1,available:!0};n.push(e),a++,a>10&&(a=1,i++)}return{get board(){return n},get sunkShips(){return r},get totalHits(){return o},get ships(){return t},placeShip(r,o,a){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if("right"===o&&r[0]+a>10)return"ship exceeding boundaries";if("up"===o&&r[1]-a<1)return"ship exceeding boundaries";let c=[...r];for(let e=0;e<a;e++){0!==e&&("right"===o?c[0]++:c[1]--);let t=n.find((e=>e.coordinates.every(((e,n)=>e===c[n]))));if(!t)return"No such coordinates";if(!t.available)return"Some of the space is unavailable"}const s=new e(a,i);t.push(s);for(let e=0;e<a;e++){0!==e&&("right"===o?r[0]++:r[1]--);let t=[[r[0]-1,r[1]],[r[0]+1,r[1]],[r[0]-1,r[1]+1],[r[0]-1,r[1]-1],[r[0]+1,r[1]-1],[r[0]+1,r[1]+1],[r[0],r[1]+1],[r[0],r[1]-1]],a=n.find((e=>e.coordinates.every(((e,n)=>e===r[n]))));a.ship=s,a.available=!1,t.forEach((e=>{let t=n.find((n=>n.coordinates.every(((n,t)=>n===e[t]))));t&&(t.available=!1)}))}},receiveAttack(e){const t=n.find((n=>n.coordinates.every(((n,t)=>n===e[t]))));void 0===t||t.attacked||(t.attacked=!0,o++,t.ship&&(t.ship.hit(),t.ship.isSunk&&r.push(t.ship)))},hasArmedShips(){let e=!1;return t.forEach((n=>{n.isSunk||(e=!0)})),e}}}var r=t(379),o=t.n(r),a=t(795),i=t.n(a),c=t(569),s=t.n(c),d=t(565),l=t.n(d),p=t(216),u=t.n(p),h=t(589),A=t.n(h),g=t(772),f={};f.styleTagTransform=A(),f.setAttributes=l(),f.insert=s().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=u(),o()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals,function(){const e=function(e){const t=new n;return{name:"player",gameBoard:t,get board(){return t.board},placeShip(e,n,r){t.placeShip(e,n,r)},shoot(e,n){e.gameBoard.receiveAttack(n)}}}(),t=function(){const e=new n;return{name:"AI",gameBoard:e,get board(){return e.board},placeShip(n){const t=crypto.randomUUID();for(;;){let r=[];const o=Math.ceil(10*Math.random()),a=Math.ceil(10*Math.random());r.push(o),r.push(a);const i=["right","up"],c=i[Math.floor(Math.random()*i.length)];e.placeShip(r,c,n,t);let s=e.board.find((e=>e.coordinates.every(((e,n)=>e===r[n]))));if(null!=s.ship&&s.ship.id===t)return}},shoot(e){for(;;){let n=[];const t=Math.ceil(10*Math.random()),r=Math.ceil(10*Math.random());n.push(t),n.push(r);let o=e.gameBoard.board.find((e=>e.coordinates.every(((e,t)=>e===n[t]))));if(!o.attacked)return e.gameBoard.receiveAttack(o.coordinates),o}}}}();e.placeShip([1,1],"right",1),e.placeShip([1,3],"right",2),e.placeShip([1,5],"right",3),e.placeShip([1,7],"right",4),e.placeShip([1,9],"right",5),e.placeShip([10,10],"up",6),t.placeShip(1),t.placeShip(2),t.placeShip(5),t.placeShip(5);const r=document.getElementById("player-board"),o=document.getElementById("AI-board");for(let n=0;n<e.board.length;n++){const t=document.createElement("div");t.id=`num${n}`,t.classList.add("box"),e.board[n].ship&&t.classList.add("contain-ship"),r.append(t)}for(let n=0;n<t.board.length;n++){const r=document.createElement("div");r.classList.add("box"),t.board[n].ship&&r.classList.add("contain-ship"),r.addEventListener("click",(()=>{if(t.board[n].attacked)return;e.shoot(t,t.board[n].coordinates),r.classList.add("attacked");const o=e.board.indexOf(t.shoot(e));document.querySelector(`#player-board > #num${o}`).classList.add("attacked"),d()})),o.append(r)}const a=document.querySelector("#player-details h1"),i=document.querySelector("#AI-details h1"),c=document.querySelector("#player-details p"),s=document.querySelector("#AI-details p");function d(){c.textContent="Ships alive: "+(e.gameBoard.ships.length-e.gameBoard.sunkShips.length),s.textContent="Ships alive: "+(t.gameBoard.ships.length-t.gameBoard.sunkShips.length)}a.textContent=e.name,i.textContent=t.name,d()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,