(()=>{"use strict";var n={772:(n,e,t)=>{t.d(e,{Z:()=>p});var r=t(537),o=t.n(r),a=t(645),i=t.n(a),s=t(667),c=t.n(s),l=new URL(t(265),t.b),d=i()(o()),u=c()(l);d.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url("+u+');\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  margin-top: 50px;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mDAAgD;EAChD,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,yBAAyB;EACzB,gBAAgB;EAChB,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE;AACF;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;AAC3B",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url(../assets/images/background.jpg);\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  margin-top: 50px;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n'],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",r=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),r&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),r&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,r,o,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(r)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var l=0;l<n.length;l++){var d=[].concat(n[l]);r&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),o&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=o):d[4]="".concat(o)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var r=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),o="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(r),a="/*# ".concat(o," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],l=r.base?c[0]+r.base:c[0],d=a[l]||0,u="".concat(l," ").concat(d);a[l]=d+1;var p=t(u),A={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(A);else{var h=o(A,r);r.byIndex=s,e.splice(s,0,{identifier:u,updater:h,references:1})}i.push(u)}return i}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var a=r(n=n||[],o=o||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=r(n,o),l=0;l<a.length;l++){var d=t(a[l]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var r=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!r)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");r.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r="";t.supports&&(r+="@supports (".concat(t.supports,") {")),t.media&&(r+="@media ".concat(t.media," {"));var o=void 0!==t.layer;o&&(r+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),r+=t.css,o&&(r+="}"),t.media&&(r+="}"),t.supports&&(r+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(r,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},265:(n,e,t)=>{n.exports=t.p+"assets/images/background.jpg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var a=e[r]={id:r,exports:{}};return n[r](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function n(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const t=n;let r=0,o=!1;return{get length(){return t},get id(){return e},get hits(){return r},get isSunk(){return o},hit(){r++,r===t&&(o=!0)}}}function e(){let e=[],t=[],r=[],o=0,a=1,i=1;for(let n=0;n<100;n++){let n={coordinates:[a,i],ship:null,attacked:!1,available:!0};e.push(n),a++,a>10&&(a=1,i++)}return{get board(){return e},get sunkShips(){return r},get totalHits(){return o},get ships(){return t},placeShip(r,o,a){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if("right"===o&&r[0]+a>10)return"ship exceeding boundaries";if("up"===o&&r[1]-a<1)return"ship exceeding boundaries";let s=[...r];for(let n=0;n<a;n++){0!==n&&("right"===o?s[0]++:s[1]--);let t=e.find((n=>n.coordinates.every(((n,e)=>n===s[e]))));if(!t)return"No such coordinates";if(!t.available)return"Some of the space is unavailable"}const c=new n(a,i);t.push(c);for(let n=0;n<a;n++){0!==n&&("right"===o?r[0]++:r[1]--);let t=[[r[0]-1,r[1]],[r[0]+1,r[1]],[r[0]-1,r[1]+1],[r[0]-1,r[1]-1],[r[0]+1,r[1]-1],[r[0]+1,r[1]+1],[r[0],r[1]+1],[r[0],r[1]-1]],a=e.find((n=>n.coordinates.every(((n,e)=>n===r[e]))));a.ship=c,a.available=!1,t.forEach((n=>{let t=e.find((e=>e.coordinates.every(((e,t)=>e===n[t]))));t&&(t.available=!1)}))}},receiveAttack(n){const t=e.find((e=>e.coordinates.every(((e,t)=>e===n[t]))));void 0===t||t.attacked||(t.attacked=!0,o++,t.ship&&(t.ship.hit(),t.ship.isSunk&&r.push(t.ship)))},hasArmedShips(){let n=!1;return t.forEach((e=>{e.isSunk||(n=!0)})),n}}}var r=t(379),o=t.n(r),a=t(795),i=t.n(a),s=t(569),c=t.n(s),l=t(565),d=t.n(l),u=t(216),p=t.n(u),A=t(589),h=t.n(A),g=t(772),f={};f.styleTagTransform=h(),f.setAttributes=d(),f.insert=c().bind(null,"head"),f.domAPI=i(),f.insertStyleElement=p(),o()(g.Z,f),g.Z&&g.Z.locals&&g.Z.locals,function(){const n=function(n){const t=new e;return{name:"player",gameBoard:t,get board(){return t.board},placeShip(n,e,r){t.placeShip(n,e,r)},shoot(n,e){n.gameBoard.receiveAttack(e)}}}(),t=function(){const n=new e;return{name:"AI",gameBoard:n,get board(){return n.board},placeShip(e){const t=crypto.randomUUID();for(;;){let r=[];const o=Math.ceil(10*Math.random()),a=Math.ceil(10*Math.random());r.push(o),r.push(a);const i=["right","up"],s=i[Math.floor(Math.random()*i.length)];n.placeShip(r,s,e,t);let c=n.board.find((n=>n.coordinates.every(((n,e)=>n===r[e]))));if(null!=c.ship&&c.ship.id===t)return}},shoot(n){for(;;){let e=[];const t=Math.ceil(10*Math.random()),r=Math.ceil(10*Math.random());e.push(t),e.push(r);let o=n.gameBoard.board.find((n=>n.coordinates.every(((n,t)=>n===e[t]))));if(!o.attacked)return n.gameBoard.receiveAttack(o.coordinates),o}}}}();n.placeShip([1,1],"right",1),n.placeShip([1,3],"right",2),n.placeShip([1,5],"right",3),n.placeShip([1,7],"right",4),n.placeShip([1,9],"right",5),n.placeShip([10,10],"up",6),t.placeShip(1),t.placeShip(2),t.placeShip(5),t.placeShip(5);const r=document.getElementById("player-board"),o=document.getElementById("AI-board");for(let e=0;e<n.board.length;e++){const t=document.createElement("div");t.id=`p${e}`,t.classList.add("box"),n.board[e].ship&&t.classList.add("contain-ship"),r.append(t)}for(let e=0;e<t.board.length;e++){const a=document.createElement("div");a.id=`A${e}`,a.classList.add("AI-box","box"),a.addEventListener("click",(()=>{if(t.board[e].attacked)return;n.shoot(t,t.board[e].coordinates),t.board[e].ship?t.board[e].ship.isSunk?(a.classList.add("ship-hit"),o.style.backgroundColor="red",c.style.color="red",setTimeout((()=>{o.style.backgroundColor="#2389da",c.style.color="#fff"}),100)):a.classList.add("ship-hit"):a.classList.add("attacked");const i=n.board.indexOf(t.shoot(n)),d=document.querySelector(`#player-board > #p${i}`);n.board[i].ship?n.board[i].ship.isSunk?(r.style.backgroundColor="red",s.style.color="red",setTimeout((()=>{r.style.backgroundColor="#2389da",s.style.color="#fff"}),100)):d.classList.add("ship-hit"):d.classList.add("attacked"),l()})),o.append(a)}const a=document.querySelector("#player-details h1"),i=document.querySelector("#AI-details h1"),s=document.querySelector("#player-details p"),c=document.querySelector("#AI-details p");function l(){s.textContent="Ships alive: "+(n.gameBoard.ships.length-n.gameBoard.sunkShips.length),c.textContent="Ships alive: "+(t.gameBoard.ships.length-t.gameBoard.sunkShips.length)}a.textContent=n.name,i.textContent=t.name,l()}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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LFFBRXJHMEwsRUFBUVMsWUFBZSxpQkFBZTNCLEVBQUdKLFVBQVUzQixNQUFNekksT0FBU3dLLEVBQUdKLFVBQVUxQixVQUFVMUksT0FDM0YsQ0FUQW1LLEVBQVdnQyxZQUFjakMsRUFBT0csS0FDaEM2QixFQUFPQyxZQUFjM0IsRUFBR0gsS0FDeEI0QixHQVFGLENHaEdBRyxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jb25zdHJ1Y3RvcnMvU2hpcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2NvbnN0cnVjdG9ycy9HYW1lQm9hcmQuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzcz9lNDViIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvTW9kdWxlcy9nYW1lTG9vcC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2NvbnN0cnVjdG9ycy9QbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jb25zdHJ1Y3RvcnMvQUlwbGF5ZXIuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi4vYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuI3BhZ2UtdGl0bGUge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogNjVweDtcXG4gIGZvbnQtc2l6ZTogMTAwcHg7XFxufVxcblxcbiNnYW1lLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgY29sdW1uLWdhcDogNzBweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogbWF4LWNvbnRlbnQ7XFxufVxcblxcbi5ib2FyZCB7XFxuICBkaXNwbGF5OiBncmlkO1xcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoMTAsIDFmcik7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM4OWRhO1xcbiAgbWFyZ2luLXRvcDogNTBweDtcXG4gIHdpZHRoOiA1MDBweDtcXG4gIGhlaWdodDogNTAwcHg7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmJveCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XFxuXFxuLkFJLWJveCB7XFxuICBjdXJzb3I6IGNyb3NzaGFpcjtcXG59XFxuXFxuLkFJLWJveDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjIwMGZmO1xcbn1cXG5cXG4uZGV0YWlscyBoMSB7XFxuICBmb250LXNpemU6IDYwcHhcXG59XFxuXFxuLmRldGFpbHMgcCB7XFxuICBmb250LXNpemU6IDMwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmNvbnRhaW4tc2hpcCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhenVyZTtcXG59XFxuXFxuLmF0dGFja2VkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNkYTIzMjM7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG5cXG4uYXR0YWNrZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhMjMyMztcXG59XFxuXFxuLnNoaXAtaGl0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMzU0ZGE7XFxufVxcblxcbi5zaGlwLWhpdDo6YWZ0ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgY29udGVudDogXFxcIlxcXFwyNzRjXFxcIjtcXG4gIGZvbnQtc2l6ZTogNDBweDsgXFxuICBjb2xvcjogI0ZGRjtcXG59XFxuXFxuLnNoaXAtaGl0OmhvdmVyIHtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM1NGRhO1xcbn1cXG5cXG5cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3N0eWxlcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRSxVQUFVO0VBQ1YsU0FBUztFQUNULHNCQUFzQjtBQUN4Qjs7QUFFQTtFQUNFLG1EQUFnRDtFQUNoRCxZQUFZO0FBQ2Q7O0FBRUE7RUFDRSxrQkFBa0I7RUFDbEIsZ0JBQWdCO0VBQ2hCLGdCQUFnQjtBQUNsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixnQkFBZ0I7RUFDaEIsdUJBQXVCO0VBQ3ZCLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNDQUFzQztFQUN0Qyx5QkFBeUI7RUFDekIsZ0JBQWdCO0VBQ2hCLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoLi4vYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZyk7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcblxcbiNwYWdlLXRpdGxlIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDY1cHg7XFxuICBmb250LXNpemU6IDEwMHB4O1xcbn1cXG5cXG4jZ2FtZS1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGNvbHVtbi1nYXA6IDcwcHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IG1heC1jb250ZW50O1xcbn1cXG5cXG4uYm9hcmQge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzODlkYTtcXG4gIG1hcmdpbi10b3A6IDUwcHg7XFxuICB3aWR0aDogNTAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5ib3gge1xcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcblxcbi5BSS1ib3gge1xcbiAgY3Vyc29yOiBjcm9zc2hhaXI7XFxufVxcblxcbi5BSS1ib3g6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyMDBmZjtcXG59XFxuXFxuLmRldGFpbHMgaDEge1xcbiAgZm9udC1zaXplOiA2MHB4XFxufVxcblxcbi5kZXRhaWxzIHAge1xcbiAgZm9udC1zaXplOiAzMHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5jb250YWluLXNoaXAge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogYXp1cmU7XFxufVxcblxcbi5hdHRhY2tlZCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGEyMzIzO1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG59XFxuXFxuLmF0dGFja2VkOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNkYTIzMjM7XFxufVxcblxcbi5zaGlwLWhpdCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM1NGRhO1xcbn1cXG5cXG4uc2hpcC1oaXQ6OmFmdGVyIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGNvbnRlbnQ6IFxcXCJcXFxcMjc0Y1xcXCI7XFxuICBmb250LXNpemU6IDQwcHg7IFxcbiAgY29sb3I6ICNGRkY7XFxufVxcblxcbi5zaGlwLWhpdDpob3ZlciB7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzNTRkYTtcXG59XFxuXFxuXFxuXFxuXCJdLFwic291cmNlUm9vdFwiOlwiXCJ9XSk7XG4vLyBFeHBvcnRzXG5leHBvcnQgZGVmYXVsdCBfX19DU1NfTE9BREVSX0VYUE9SVF9fXztcbiIsIlwidXNlIHN0cmljdFwiO1xuXG4vKlxuICBNSVQgTGljZW5zZSBodHRwOi8vd3d3Lm9wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL21pdC1saWNlbnNlLnBocFxuICBBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXG4qL1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoY3NzV2l0aE1hcHBpbmdUb1N0cmluZykge1xuICB2YXIgbGlzdCA9IFtdO1xuXG4gIC8vIHJldHVybiB0aGUgbGlzdCBvZiBtb2R1bGVzIGFzIGNzcyBzdHJpbmdcbiAgbGlzdC50b1N0cmluZyA9IGZ1bmN0aW9uIHRvU3RyaW5nKCkge1xuICAgIHJldHVybiB0aGlzLm1hcChmdW5jdGlvbiAoaXRlbSkge1xuICAgICAgdmFyIGNvbnRlbnQgPSBcIlwiO1xuICAgICAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBpdGVtWzVdICE9PSBcInVuZGVmaW5lZFwiO1xuICAgICAgaWYgKGl0ZW1bNF0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIkBtZWRpYSBcIi5jb25jYXQoaXRlbVsyXSwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIkBsYXllclwiLmNvbmNhdChpdGVtWzVdLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQoaXRlbVs1XSkgOiBcIlwiLCBcIiB7XCIpO1xuICAgICAgfVxuICAgICAgY29udGVudCArPSBjc3NXaXRoTWFwcGluZ1RvU3RyaW5nKGl0ZW0pO1xuICAgICAgaWYgKG5lZWRMYXllcikge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgaWYgKGl0ZW1bMl0pIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICByZXR1cm4gY29udGVudDtcbiAgICB9KS5qb2luKFwiXCIpO1xuICB9O1xuXG4gIC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XG4gIGxpc3QuaSA9IGZ1bmN0aW9uIGkobW9kdWxlcywgbWVkaWEsIGRlZHVwZSwgc3VwcG9ydHMsIGxheWVyKSB7XG4gICAgaWYgKHR5cGVvZiBtb2R1bGVzID09PSBcInN0cmluZ1wiKSB7XG4gICAgICBtb2R1bGVzID0gW1tudWxsLCBtb2R1bGVzLCB1bmRlZmluZWRdXTtcbiAgICB9XG4gICAgdmFyIGFscmVhZHlJbXBvcnRlZE1vZHVsZXMgPSB7fTtcbiAgICBpZiAoZGVkdXBlKSB7XG4gICAgICBmb3IgKHZhciBrID0gMDsgayA8IHRoaXMubGVuZ3RoOyBrKyspIHtcbiAgICAgICAgdmFyIGlkID0gdGhpc1trXVswXTtcbiAgICAgICAgaWYgKGlkICE9IG51bGwpIHtcbiAgICAgICAgICBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2lkXSA9IHRydWU7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICB9XG4gICAgZm9yICh2YXIgX2sgPSAwOyBfayA8IG1vZHVsZXMubGVuZ3RoOyBfaysrKSB7XG4gICAgICB2YXIgaXRlbSA9IFtdLmNvbmNhdChtb2R1bGVzW19rXSk7XG4gICAgICBpZiAoZGVkdXBlICYmIGFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcbiAgICAgICAgY29udGludWU7XG4gICAgICB9XG4gICAgICBpZiAodHlwZW9mIGxheWVyICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgICAgIGlmICh0eXBlb2YgaXRlbVs1XSA9PT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNV0gPSBsYXllcjtcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGlmICghaXRlbVsyXSkge1xuICAgICAgICAgIGl0ZW1bMl0gPSBtZWRpYTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChzdXBwb3J0cykge1xuICAgICAgICBpZiAoIWl0ZW1bNF0pIHtcbiAgICAgICAgICBpdGVtWzRdID0gXCJcIi5jb25jYXQoc3VwcG9ydHMpO1xuICAgICAgICB9IGVsc2Uge1xuICAgICAgICAgIGl0ZW1bMV0gPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KGl0ZW1bNF0sIFwiKSB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVs0XSA9IHN1cHBvcnRzO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBsaXN0LnB1c2goaXRlbSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4gbGlzdDtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKHVybCwgb3B0aW9ucykge1xuICBpZiAoIW9wdGlvbnMpIHtcbiAgICBvcHRpb25zID0ge307XG4gIH1cbiAgaWYgKCF1cmwpIHtcbiAgICByZXR1cm4gdXJsO1xuICB9XG4gIHVybCA9IFN0cmluZyh1cmwuX19lc01vZHVsZSA/IHVybC5kZWZhdWx0IDogdXJsKTtcblxuICAvLyBJZiB1cmwgaXMgYWxyZWFkeSB3cmFwcGVkIGluIHF1b3RlcywgcmVtb3ZlIHRoZW1cbiAgaWYgKC9eWydcIl0uKlsnXCJdJC8udGVzdCh1cmwpKSB7XG4gICAgdXJsID0gdXJsLnNsaWNlKDEsIC0xKTtcbiAgfVxuICBpZiAob3B0aW9ucy5oYXNoKSB7XG4gICAgdXJsICs9IG9wdGlvbnMuaGFzaDtcbiAgfVxuXG4gIC8vIFNob3VsZCB1cmwgYmUgd3JhcHBlZD9cbiAgLy8gU2VlIGh0dHBzOi8vZHJhZnRzLmNzc3dnLm9yZy9jc3MtdmFsdWVzLTMvI3VybHNcbiAgaWYgKC9bXCInKCkgXFx0XFxuXXwoJTIwKS8udGVzdCh1cmwpIHx8IG9wdGlvbnMubmVlZFF1b3Rlcykge1xuICAgIHJldHVybiBcIlxcXCJcIi5jb25jYXQodXJsLnJlcGxhY2UoL1wiL2csICdcXFxcXCInKS5yZXBsYWNlKC9cXG4vZywgXCJcXFxcblwiKSwgXCJcXFwiXCIpO1xuICB9XG4gIHJldHVybiB1cmw7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVtKSB7XG4gIHZhciBjb250ZW50ID0gaXRlbVsxXTtcbiAgdmFyIGNzc01hcHBpbmcgPSBpdGVtWzNdO1xuICBpZiAoIWNzc01hcHBpbmcpIHtcbiAgICByZXR1cm4gY29udGVudDtcbiAgfVxuICBpZiAodHlwZW9mIGJ0b2EgPT09IFwiZnVuY3Rpb25cIikge1xuICAgIHZhciBiYXNlNjQgPSBidG9hKHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChKU09OLnN0cmluZ2lmeShjc3NNYXBwaW5nKSkpKTtcbiAgICB2YXIgZGF0YSA9IFwic291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247Y2hhcnNldD11dGYtODtiYXNlNjQsXCIuY29uY2F0KGJhc2U2NCk7XG4gICAgdmFyIHNvdXJjZU1hcHBpbmcgPSBcIi8qIyBcIi5jb25jYXQoZGF0YSwgXCIgKi9cIik7XG4gICAgcmV0dXJuIFtjb250ZW50XS5jb25jYXQoW3NvdXJjZU1hcHBpbmddKS5qb2luKFwiXFxuXCIpO1xuICB9XG4gIHJldHVybiBbY29udGVudF0uam9pbihcIlxcblwiKTtcbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbnZhciBzdHlsZXNJbkRPTSA9IFtdO1xuZnVuY3Rpb24gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcikge1xuICB2YXIgcmVzdWx0ID0gLTE7XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgc3R5bGVzSW5ET00ubGVuZ3RoOyBpKyspIHtcbiAgICBpZiAoc3R5bGVzSW5ET01baV0uaWRlbnRpZmllciA9PT0gaWRlbnRpZmllcikge1xuICAgICAgcmVzdWx0ID0gaTtcbiAgICAgIGJyZWFrO1xuICAgIH1cbiAgfVxuICByZXR1cm4gcmVzdWx0O1xufVxuZnVuY3Rpb24gbW9kdWxlc1RvRG9tKGxpc3QsIG9wdGlvbnMpIHtcbiAgdmFyIGlkQ291bnRNYXAgPSB7fTtcbiAgdmFyIGlkZW50aWZpZXJzID0gW107XG4gIGZvciAodmFyIGkgPSAwOyBpIDwgbGlzdC5sZW5ndGg7IGkrKykge1xuICAgIHZhciBpdGVtID0gbGlzdFtpXTtcbiAgICB2YXIgaWQgPSBvcHRpb25zLmJhc2UgPyBpdGVtWzBdICsgb3B0aW9ucy5iYXNlIDogaXRlbVswXTtcbiAgICB2YXIgY291bnQgPSBpZENvdW50TWFwW2lkXSB8fCAwO1xuICAgIHZhciBpZGVudGlmaWVyID0gXCJcIi5jb25jYXQoaWQsIFwiIFwiKS5jb25jYXQoY291bnQpO1xuICAgIGlkQ291bnRNYXBbaWRdID0gY291bnQgKyAxO1xuICAgIHZhciBpbmRleEJ5SWRlbnRpZmllciA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgIHZhciBvYmogPSB7XG4gICAgICBjc3M6IGl0ZW1bMV0sXG4gICAgICBtZWRpYTogaXRlbVsyXSxcbiAgICAgIHNvdXJjZU1hcDogaXRlbVszXSxcbiAgICAgIHN1cHBvcnRzOiBpdGVtWzRdLFxuICAgICAgbGF5ZXI6IGl0ZW1bNV1cbiAgICB9O1xuICAgIGlmIChpbmRleEJ5SWRlbnRpZmllciAhPT0gLTEpIHtcbiAgICAgIHN0eWxlc0luRE9NW2luZGV4QnlJZGVudGlmaWVyXS5yZWZlcmVuY2VzKys7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0udXBkYXRlcihvYmopO1xuICAgIH0gZWxzZSB7XG4gICAgICB2YXIgdXBkYXRlciA9IGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpO1xuICAgICAgb3B0aW9ucy5ieUluZGV4ID0gaTtcbiAgICAgIHN0eWxlc0luRE9NLnNwbGljZShpLCAwLCB7XG4gICAgICAgIGlkZW50aWZpZXI6IGlkZW50aWZpZXIsXG4gICAgICAgIHVwZGF0ZXI6IHVwZGF0ZXIsXG4gICAgICAgIHJlZmVyZW5jZXM6IDFcbiAgICAgIH0pO1xuICAgIH1cbiAgICBpZGVudGlmaWVycy5wdXNoKGlkZW50aWZpZXIpO1xuICB9XG4gIHJldHVybiBpZGVudGlmaWVycztcbn1cbmZ1bmN0aW9uIGFkZEVsZW1lbnRTdHlsZShvYmosIG9wdGlvbnMpIHtcbiAgdmFyIGFwaSA9IG9wdGlvbnMuZG9tQVBJKG9wdGlvbnMpO1xuICBhcGkudXBkYXRlKG9iaik7XG4gIHZhciB1cGRhdGVyID0gZnVuY3Rpb24gdXBkYXRlcihuZXdPYmopIHtcbiAgICBpZiAobmV3T2JqKSB7XG4gICAgICBpZiAobmV3T2JqLmNzcyA9PT0gb2JqLmNzcyAmJiBuZXdPYmoubWVkaWEgPT09IG9iai5tZWRpYSAmJiBuZXdPYmouc291cmNlTWFwID09PSBvYmouc291cmNlTWFwICYmIG5ld09iai5zdXBwb3J0cyA9PT0gb2JqLnN1cHBvcnRzICYmIG5ld09iai5sYXllciA9PT0gb2JqLmxheWVyKSB7XG4gICAgICAgIHJldHVybjtcbiAgICAgIH1cbiAgICAgIGFwaS51cGRhdGUob2JqID0gbmV3T2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgYXBpLnJlbW92ZSgpO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIHVwZGF0ZXI7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChsaXN0LCBvcHRpb25zKSB7XG4gIG9wdGlvbnMgPSBvcHRpb25zIHx8IHt9O1xuICBsaXN0ID0gbGlzdCB8fCBbXTtcbiAgdmFyIGxhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKTtcbiAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZShuZXdMaXN0KSB7XG4gICAgbmV3TGlzdCA9IG5ld0xpc3QgfHwgW107XG4gICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBpKyspIHtcbiAgICAgIHZhciBpZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW2ldO1xuICAgICAgdmFyIGluZGV4ID0gZ2V0SW5kZXhCeUlkZW50aWZpZXIoaWRlbnRpZmllcik7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleF0ucmVmZXJlbmNlcy0tO1xuICAgIH1cbiAgICB2YXIgbmV3TGFzdElkZW50aWZpZXJzID0gbW9kdWxlc1RvRG9tKG5ld0xpc3QsIG9wdGlvbnMpO1xuICAgIGZvciAodmFyIF9pID0gMDsgX2kgPCBsYXN0SWRlbnRpZmllcnMubGVuZ3RoOyBfaSsrKSB7XG4gICAgICB2YXIgX2lkZW50aWZpZXIgPSBsYXN0SWRlbnRpZmllcnNbX2ldO1xuICAgICAgdmFyIF9pbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKF9pZGVudGlmaWVyKTtcbiAgICAgIGlmIChzdHlsZXNJbkRPTVtfaW5kZXhdLnJlZmVyZW5jZXMgPT09IDApIHtcbiAgICAgICAgc3R5bGVzSW5ET01bX2luZGV4XS51cGRhdGVyKCk7XG4gICAgICAgIHN0eWxlc0luRE9NLnNwbGljZShfaW5kZXgsIDEpO1xuICAgICAgfVxuICAgIH1cbiAgICBsYXN0SWRlbnRpZmllcnMgPSBuZXdMYXN0SWRlbnRpZmllcnM7XG4gIH07XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgbWVtbyA9IHt9O1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGdldFRhcmdldCh0YXJnZXQpIHtcbiAgaWYgKHR5cGVvZiBtZW1vW3RhcmdldF0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICB2YXIgc3R5bGVUYXJnZXQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKHRhcmdldCk7XG5cbiAgICAvLyBTcGVjaWFsIGNhc2UgdG8gcmV0dXJuIGhlYWQgb2YgaWZyYW1lIGluc3RlYWQgb2YgaWZyYW1lIGl0c2VsZlxuICAgIGlmICh3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQgJiYgc3R5bGVUYXJnZXQgaW5zdGFuY2VvZiB3aW5kb3cuSFRNTElGcmFtZUVsZW1lbnQpIHtcbiAgICAgIHRyeSB7XG4gICAgICAgIC8vIFRoaXMgd2lsbCB0aHJvdyBhbiBleGNlcHRpb24gaWYgYWNjZXNzIHRvIGlmcmFtZSBpcyBibG9ja2VkXG4gICAgICAgIC8vIGR1ZSB0byBjcm9zcy1vcmlnaW4gcmVzdHJpY3Rpb25zXG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gc3R5bGVUYXJnZXQuY29udGVudERvY3VtZW50LmhlYWQ7XG4gICAgICB9IGNhdGNoIChlKSB7XG4gICAgICAgIC8vIGlzdGFuYnVsIGlnbm9yZSBuZXh0XG4gICAgICAgIHN0eWxlVGFyZ2V0ID0gbnVsbDtcbiAgICAgIH1cbiAgICB9XG4gICAgbWVtb1t0YXJnZXRdID0gc3R5bGVUYXJnZXQ7XG4gIH1cbiAgcmV0dXJuIG1lbW9bdGFyZ2V0XTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRCeVNlbGVjdG9yKGluc2VydCwgc3R5bGUpIHtcbiAgdmFyIHRhcmdldCA9IGdldFRhcmdldChpbnNlcnQpO1xuICBpZiAoIXRhcmdldCkge1xuICAgIHRocm93IG5ldyBFcnJvcihcIkNvdWxkbid0IGZpbmQgYSBzdHlsZSB0YXJnZXQuIFRoaXMgcHJvYmFibHkgbWVhbnMgdGhhdCB0aGUgdmFsdWUgZm9yIHRoZSAnaW5zZXJ0JyBwYXJhbWV0ZXIgaXMgaW52YWxpZC5cIik7XG4gIH1cbiAgdGFyZ2V0LmFwcGVuZENoaWxkKHN0eWxlKTtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0QnlTZWxlY3RvcjsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBpbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucykge1xuICB2YXIgZWxlbWVudCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoXCJzdHlsZVwiKTtcbiAgb3B0aW9ucy5zZXRBdHRyaWJ1dGVzKGVsZW1lbnQsIG9wdGlvbnMuYXR0cmlidXRlcyk7XG4gIG9wdGlvbnMuaW5zZXJ0KGVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG4gIHJldHVybiBlbGVtZW50O1xufVxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzKHN0eWxlRWxlbWVudCkge1xuICB2YXIgbm9uY2UgPSB0eXBlb2YgX193ZWJwYWNrX25vbmNlX18gIT09IFwidW5kZWZpbmVkXCIgPyBfX3dlYnBhY2tfbm9uY2VfXyA6IG51bGw7XG4gIGlmIChub25jZSkge1xuICAgIHN0eWxlRWxlbWVudC5zZXRBdHRyaWJ1dGUoXCJub25jZVwiLCBub25jZSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKSB7XG4gIHZhciBjc3MgPSBcIlwiO1xuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwiQHN1cHBvcnRzIChcIi5jb25jYXQob2JqLnN1cHBvcnRzLCBcIikge1wiKTtcbiAgfVxuICBpZiAob2JqLm1lZGlhKSB7XG4gICAgY3NzICs9IFwiQG1lZGlhIFwiLmNvbmNhdChvYmoubWVkaWEsIFwiIHtcIik7XG4gIH1cbiAgdmFyIG5lZWRMYXllciA9IHR5cGVvZiBvYmoubGF5ZXIgIT09IFwidW5kZWZpbmVkXCI7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJAbGF5ZXJcIi5jb25jYXQob2JqLmxheWVyLmxlbmd0aCA+IDAgPyBcIiBcIi5jb25jYXQob2JqLmxheWVyKSA6IFwiXCIsIFwiIHtcIik7XG4gIH1cbiAgY3NzICs9IG9iai5jc3M7XG4gIGlmIChuZWVkTGF5ZXIpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICBpZiAob2JqLnN1cHBvcnRzKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIHZhciBzb3VyY2VNYXAgPSBvYmouc291cmNlTWFwO1xuICBpZiAoc291cmNlTWFwICYmIHR5cGVvZiBidG9hICE9PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgY3NzICs9IFwiXFxuLyojIHNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2Jhc2U2NCxcIi5jb25jYXQoYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoc291cmNlTWFwKSkpKSwgXCIgKi9cIik7XG4gIH1cblxuICAvLyBGb3Igb2xkIElFXG4gIC8qIGlzdGFuYnVsIGlnbm9yZSBpZiAgKi9cbiAgb3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybShjc3MsIHN0eWxlRWxlbWVudCwgb3B0aW9ucy5vcHRpb25zKTtcbn1cbmZ1bmN0aW9uIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpIHtcbiAgLy8gaXN0YW5idWwgaWdub3JlIGlmXG4gIGlmIChzdHlsZUVsZW1lbnQucGFyZW50Tm9kZSA9PT0gbnVsbCkge1xuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuICBzdHlsZUVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQpO1xufVxuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIGRvbUFQSShvcHRpb25zKSB7XG4gIGlmICh0eXBlb2YgZG9jdW1lbnQgPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUoKSB7fSxcbiAgICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge31cbiAgICB9O1xuICB9XG4gIHZhciBzdHlsZUVsZW1lbnQgPSBvcHRpb25zLmluc2VydFN0eWxlRWxlbWVudChvcHRpb25zKTtcbiAgcmV0dXJuIHtcbiAgICB1cGRhdGU6IGZ1bmN0aW9uIHVwZGF0ZShvYmopIHtcbiAgICAgIGFwcGx5KHN0eWxlRWxlbWVudCwgb3B0aW9ucywgb2JqKTtcbiAgICB9LFxuICAgIHJlbW92ZTogZnVuY3Rpb24gcmVtb3ZlKCkge1xuICAgICAgcmVtb3ZlU3R5bGVFbGVtZW50KHN0eWxlRWxlbWVudCk7XG4gICAgfVxuICB9O1xufVxubW9kdWxlLmV4cG9ydHMgPSBkb21BUEk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQpIHtcbiAgaWYgKHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0KSB7XG4gICAgc3R5bGVFbGVtZW50LnN0eWxlU2hlZXQuY3NzVGV4dCA9IGNzcztcbiAgfSBlbHNlIHtcbiAgICB3aGlsZSAoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpIHtcbiAgICAgIHN0eWxlRWxlbWVudC5yZW1vdmVDaGlsZChzdHlsZUVsZW1lbnQuZmlyc3RDaGlsZCk7XG4gICAgfVxuICAgIHN0eWxlRWxlbWVudC5hcHBlbmRDaGlsZChkb2N1bWVudC5jcmVhdGVUZXh0Tm9kZShjc3MpKTtcbiAgfVxufVxubW9kdWxlLmV4cG9ydHMgPSBzdHlsZVRhZ1RyYW5zZm9ybTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdGlkOiBtb2R1bGVJZCxcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGdldERlZmF1bHRFeHBvcnQgZnVuY3Rpb24gZm9yIGNvbXBhdGliaWxpdHkgd2l0aCBub24taGFybW9ueSBtb2R1bGVzXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm4gPSAobW9kdWxlKSA9PiB7XG5cdHZhciBnZXR0ZXIgPSBtb2R1bGUgJiYgbW9kdWxlLl9fZXNNb2R1bGUgP1xuXHRcdCgpID0+IChtb2R1bGVbJ2RlZmF1bHQnXSkgOlxuXHRcdCgpID0+IChtb2R1bGUpO1xuXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmQoZ2V0dGVyLCB7IGE6IGdldHRlciB9KTtcblx0cmV0dXJuIGdldHRlcjtcbn07IiwiLy8gZGVmaW5lIGdldHRlciBmdW5jdGlvbnMgZm9yIGhhcm1vbnkgZXhwb3J0c1xuX193ZWJwYWNrX3JlcXVpcmVfXy5kID0gKGV4cG9ydHMsIGRlZmluaXRpb24pID0+IHtcblx0Zm9yKHZhciBrZXkgaW4gZGVmaW5pdGlvbikge1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhkZWZpbml0aW9uLCBrZXkpICYmICFfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZXhwb3J0cywga2V5KSkge1xuXHRcdFx0T2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIGtleSwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGRlZmluaXRpb25ba2V5XSB9KTtcblx0XHR9XG5cdH1cbn07IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5nID0gKGZ1bmN0aW9uKCkge1xuXHRpZiAodHlwZW9mIGdsb2JhbFRoaXMgPT09ICdvYmplY3QnKSByZXR1cm4gZ2xvYmFsVGhpcztcblx0dHJ5IHtcblx0XHRyZXR1cm4gdGhpcyB8fCBuZXcgRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcblx0fSBjYXRjaCAoZSkge1xuXHRcdGlmICh0eXBlb2Ygd2luZG93ID09PSAnb2JqZWN0JykgcmV0dXJuIHdpbmRvdztcblx0fVxufSkoKTsiLCJfX3dlYnBhY2tfcmVxdWlyZV9fLm8gPSAob2JqLCBwcm9wKSA9PiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgcHJvcCkpIiwidmFyIHNjcmlwdFVybDtcbmlmIChfX3dlYnBhY2tfcmVxdWlyZV9fLmcuaW1wb3J0U2NyaXB0cykgc2NyaXB0VXJsID0gX193ZWJwYWNrX3JlcXVpcmVfXy5nLmxvY2F0aW9uICsgXCJcIjtcbnZhciBkb2N1bWVudCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5kb2N1bWVudDtcbmlmICghc2NyaXB0VXJsICYmIGRvY3VtZW50KSB7XG5cdGlmIChkb2N1bWVudC5jdXJyZW50U2NyaXB0KVxuXHRcdHNjcmlwdFVybCA9IGRvY3VtZW50LmN1cnJlbnRTY3JpcHQuc3JjO1xuXHRpZiAoIXNjcmlwdFVybCkge1xuXHRcdHZhciBzY3JpcHRzID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeVRhZ05hbWUoXCJzY3JpcHRcIik7XG5cdFx0aWYoc2NyaXB0cy5sZW5ndGgpIHNjcmlwdFVybCA9IHNjcmlwdHNbc2NyaXB0cy5sZW5ndGggLSAxXS5zcmNcblx0fVxufVxuLy8gV2hlbiBzdXBwb3J0aW5nIGJyb3dzZXJzIHdoZXJlIGFuIGF1dG9tYXRpYyBwdWJsaWNQYXRoIGlzIG5vdCBzdXBwb3J0ZWQgeW91IG11c3Qgc3BlY2lmeSBhbiBvdXRwdXQucHVibGljUGF0aCBtYW51YWxseSB2aWEgY29uZmlndXJhdGlvblxuLy8gb3IgcGFzcyBhbiBlbXB0eSBzdHJpbmcgKFwiXCIpIGFuZCBzZXQgdGhlIF9fd2VicGFja19wdWJsaWNfcGF0aF9fIHZhcmlhYmxlIGZyb20geW91ciBjb2RlIHRvIHVzZSB5b3VyIG93biBsb2dpYy5cbmlmICghc2NyaXB0VXJsKSB0aHJvdyBuZXcgRXJyb3IoXCJBdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIGluIHRoaXMgYnJvd3NlclwiKTtcbnNjcmlwdFVybCA9IHNjcmlwdFVybC5yZXBsYWNlKC8jLiokLywgXCJcIikucmVwbGFjZSgvXFw/LiokLywgXCJcIikucmVwbGFjZSgvXFwvW15cXC9dKyQvLCBcIi9cIik7XG5fX3dlYnBhY2tfcmVxdWlyZV9fLnAgPSBzY3JpcHRVcmw7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5iID0gZG9jdW1lbnQuYmFzZVVSSSB8fCBzZWxmLmxvY2F0aW9uLmhyZWY7XG5cbi8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgYW5kIGxvYWRpbmcgY2h1bmtzXG4vLyB1bmRlZmluZWQgPSBjaHVuayBub3QgbG9hZGVkLCBudWxsID0gY2h1bmsgcHJlbG9hZGVkL3ByZWZldGNoZWRcbi8vIFtyZXNvbHZlLCByZWplY3QsIFByb21pc2VdID0gY2h1bmsgbG9hZGluZywgMCA9IGNodW5rIGxvYWRlZFxudmFyIGluc3RhbGxlZENodW5rcyA9IHtcblx0MTc5OiAwXG59O1xuXG4vLyBubyBjaHVuayBvbiBkZW1hbmQgbG9hZGluZ1xuXG4vLyBubyBwcmVmZXRjaGluZ1xuXG4vLyBubyBwcmVsb2FkZWRcblxuLy8gbm8gSE1SXG5cbi8vIG5vIEhNUiBtYW5pZmVzdFxuXG4vLyBubyBvbiBjaHVua3MgbG9hZGVkXG5cbi8vIG5vIGpzb25wIGZ1bmN0aW9uIiwiX193ZWJwYWNrX3JlcXVpcmVfXy5uYyA9IHVuZGVmaW5lZDsiLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBTaGlwKGxlbiwgaWQgPSBudWxsKSB7XG4gIGNvbnN0IGxlbmd0aCA9IGxlblxuICBsZXQgaGl0cyA9IDBcbiAgbGV0IGlzU3VuayA9IGZhbHNlXG4gIHJldHVybiB7XG4gICAgZ2V0IGxlbmd0aCgpIHtcbiAgICAgIHJldHVybiBsZW5ndGhcbiAgICB9LFxuICAgIFxuICAgIGdldCBpZCgpIHtcbiAgICAgIHJldHVybiBpZFxuICAgIH0sXG5cbiAgICBnZXQgaGl0cygpIHtcbiAgICAgIHJldHVybiBoaXRzXG4gICAgfSxcblxuICAgIGdldCBpc1N1bmsoKSB7XG4gICAgICByZXR1cm4gaXNTdW5rXG4gICAgfSxcblxuICAgIGhpdCgpIHtcbiAgICAgIGhpdHMrK1xuICAgICAgaWYoaGl0cyA9PT0gbGVuZ3RoKSBpc1N1bmsgPSB0cnVlXG4gICAgfVxuICB9XG59IiwiaW1wb3J0IFNoaXAgZnJvbSBcIi4vU2hpcFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdhbWVCb2FyZCgpIHtcbiAgbGV0IGJvYXJkID0gW11cbiAgbGV0IHNoaXBzID0gW11cbiAgbGV0IHN1bmtTaGlwcyA9IFtdXG4gIGxldCB0b3RhbEhpdHMgPSAwXG4gIGxldCBncmlkU2l6ZSA9IDEwMFxuICAvLyBpbml0aWFsaXplIGNvb3JkaW5hdGVzIGF0IDEsMVxuICBsZXQgeCA9IDFcbiAgbGV0IHkgPSAxXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBncmlkU2l6ZTsgaSsrKSB7XG4gICAgLy8gbWFrZSBlYWNoIGJveCBhbiBvYmplY3QgY29udGFpbmluZyBkYXRhXG4gICAgbGV0IGJveCA9IHtcbiAgICAgIFwiY29vcmRpbmF0ZXNcIjogW3gseV0sXG4gICAgICBcInNoaXBcIjogbnVsbCxcbiAgICAgIFwiYXR0YWNrZWRcIjogZmFsc2UsXG4gICAgICBcImF2YWlsYWJsZVwiOiB0cnVlXG4gICAgfVxuICAgIC8vIGFkZCBvYmplY3QgdG8gZ2FtZUJvYXJkIGFycmF5XG4gICAgYm9hcmQucHVzaChib3gpXG4gICAgXG4gICAgLy8gaW5jcmVtZW50IHggYW5kIHkgY29vcmRpbmF0ZXNcbiAgICB4KytcbiAgICBpZih4ID4gMTApIHtcbiAgICAgIHggPSAxXG4gICAgICB5KytcbiAgICB9XG5cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0IGJvYXJkKCkge1xuICAgICAgcmV0dXJuIGJvYXJkXG4gICAgfSxcblxuICAgIGdldCBzdW5rU2hpcHMoKSB7XG4gICAgICByZXR1cm4gc3Vua1NoaXBzXG4gICAgfSxcblxuICAgIGdldCB0b3RhbEhpdHMoKSB7XG4gICAgICByZXR1cm4gdG90YWxIaXRzXG4gICAgfSxcblxuICAgIGdldCBzaGlwcygpIHtcbiAgICAgIHJldHVybiBzaGlwc1xuICAgIH0sXG5cbiAgICBwbGFjZVNoaXAoY29vcmRzLCBkaXJlY3Rpb24sIGxlbiwgaWQgPSBudWxsKSB7XG4gICAgICAvLyBjaGVjayBpZiBzaGlwIHN0YXlzIHdpdGhpbiBib3VuZGFyaWVzXG4gICAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcgJiYgY29vcmRzWzBdICsgbGVuID4gMTApIHJldHVybiAnc2hpcCBleGNlZWRpbmcgYm91bmRhcmllcydcbiAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3VwJyAmJiBjb29yZHNbMV0gLSBsZW4gPCAxKSByZXR1cm4gJ3NoaXAgZXhjZWVkaW5nIGJvdW5kYXJpZXMnXG5cbiAgICAgIGxldCBjb29yZHNDb3B5ID0gWy4uLmNvb3Jkc11cblxuICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmKGkgIT09IDApIHtcbiAgICAgICAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcpIGNvb3Jkc0NvcHlbMF0rK1xuICAgICAgICAgIGVsc2UgY29vcmRzQ29weVsxXSAtLVxuICAgICAgICB9XG4gICAgICAgIGxldCBjaG9zZW5Mb2NhdGlvbiA9IGJvYXJkLmZpbmQoYm94ID0+IGJveC5jb29yZGluYXRlcy5ldmVyeSgoY29vcmQsIGluZGV4KSA9PiBjb29yZCA9PT0gY29vcmRzQ29weVtpbmRleF0pKVxuICAgICAgICBpZighY2hvc2VuTG9jYXRpb24pIHJldHVybiAnTm8gc3VjaCBjb29yZGluYXRlcydcbiAgICAgICAgaWYoIWNob3NlbkxvY2F0aW9uLmF2YWlsYWJsZSkgcmV0dXJuICdTb21lIG9mIHRoZSBzcGFjZSBpcyB1bmF2YWlsYWJsZSdcbiAgICAgIH1cblxuICAgICAgLy8gY3JlYXRlcyB0aGUgc2hpcFxuICAgICAgY29uc3QgYmF0dGxlc2hpcCA9IG5ldyBTaGlwKGxlbiwgaWQpXG4gICAgICBzaGlwcy5wdXNoKGJhdHRsZXNoaXApXG5cbiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAvLyBza2lwcyBzdGF0ZW1lbnQgb24gZmlyc3Qgcm91bmQgdG8gYWRkIHRoZSBjaG9zZW4gY29vcmRpbmF0ZXNcbiAgICAgICAgaWYoaSAhPT0gMCkge1xuICAgICAgICAgIC8vIGNvbnRpbnVlIG1vdmluZyBpbiB0aGUgY2hvc2VuIGRpcmVjdGlvblxuICAgICAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0JykgY29vcmRzWzBdKytcbiAgICAgICAgICBlbHNlIGNvb3Jkc1sxXS0tXG4gICAgICAgIH1cblxuICAgICAgICAvLyBtYWtlIGFuIGFycmF5IGNvbnRhaW5pbmcgYWxsIG9mIHRoZSBhZGphY2VudCBsb2NhdGlvbnNcbiAgICAgICAgbGV0IGFkamFjZW50TG9jYXRpb25zID0gW1xuICAgICAgICAgIFtjb29yZHNbMF0gLSAxLCBjb29yZHNbMV1dLFxuICAgICAgICAgIFtjb29yZHNbMF0gKyAxLCBjb29yZHNbMV1dLFxuICAgICAgICAgIFtjb29yZHNbMF0gLSAxLCBjb29yZHNbMV0gKyAxXSxcbiAgICAgICAgICBbY29vcmRzWzBdIC0gMSwgY29vcmRzWzFdIC0gMV0sXG4gICAgICAgICAgW2Nvb3Jkc1swXSArIDEsIGNvb3Jkc1sxXSAtIDFdLFxuICAgICAgICAgIFtjb29yZHNbMF0gKyAxLCBjb29yZHNbMV0gKyAxXSxcbiAgICAgICAgICBbY29vcmRzWzBdLCBjb29yZHNbMV0gKyAxXSxcbiAgICAgICAgICBbY29vcmRzWzBdLCBjb29yZHNbMV0gLSAxXVxuICAgICAgICBdXG5cbiAgICAgICAgbGV0IGNob3NlbkxvY2F0aW9uID0gYm9hcmQuZmluZChib3ggPT4gYm94LmNvb3JkaW5hdGVzLmV2ZXJ5KChjb29yZCwgaW5kZXgpID0+IGNvb3JkID09PSBjb29yZHNbaW5kZXhdKSlcbiAgICAgICAgY2hvc2VuTG9jYXRpb24uc2hpcCA9IGJhdHRsZXNoaXBcblxuICAgICAgICAvLyBzZXQgc2hpcCBib3hlcyBhbmQgYWRqYWNlbnQgYm94ZXMgdW5hdmFpbGFibGVcbiAgICAgICAgY2hvc2VuTG9jYXRpb24uYXZhaWxhYmxlID0gZmFsc2VcbiAgICAgICAgYWRqYWNlbnRMb2NhdGlvbnMuZm9yRWFjaChsb2NhdGlvbiA9PiB7XG4gICAgICAgICAgbGV0IGN1cnJlbnQgPSBib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGxvY2F0aW9uW2luZGV4XSkpXG4gICAgICAgICAgaWYoY3VycmVudCkgY3VycmVudC5hdmFpbGFibGUgPSBmYWxzZVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0sXG5cbiAgICByZWNlaXZlQXR0YWNrKGNvb3Jkcykge1xuICAgICAgY29uc3QgY2hvc2VuTG9jYXRpb24gPSBib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuICAgICAgLy8gaWYgdGhlIGxvY2F0aW9uIGlzIG91dCBvZiBib3VuZGFyaWVzIG9yIHdhcyBhbHJlYWR5IGF0dGFja2VkXG4gICAgICBpZihjaG9zZW5Mb2NhdGlvbiA9PT0gdW5kZWZpbmVkIHx8IGNob3NlbkxvY2F0aW9uLmF0dGFja2VkKSByZXR1cm5cbiAgICBcbiAgICAgIC8vIG1hcmsgbG9jYXRpb24gYXMgYXR0YWNrZWRcbiAgICAgIGNob3NlbkxvY2F0aW9uLmF0dGFja2VkID0gdHJ1ZVxuICAgICAgdG90YWxIaXRzKytcbiAgICAgIC8vIGhpdCBzaGlwIGlmIHByZXNlbnRcbiAgICAgIGlmKGNob3NlbkxvY2F0aW9uLnNoaXApIHtcbiAgICAgICAgY2hvc2VuTG9jYXRpb24uc2hpcC5oaXQoKVxuICAgICAgICAvLyBpZiBzaGlwIHN1bmssIGFkZCB0byBzdW5rU2hpcHNcbiAgICAgICAgaWYoY2hvc2VuTG9jYXRpb24uc2hpcC5pc1N1bmspIHtcbiAgICAgICAgICBzdW5rU2hpcHMucHVzaChjaG9zZW5Mb2NhdGlvbi5zaGlwKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIGhhc0FybWVkU2hpcHMoKSB7XG4gICAgICBsZXQgYXJtZWRTaGlwcyA9IGZhbHNlXG4gICAgICBzaGlwcy5mb3JFYWNoKHNoaXAgPT4ge1xuICAgICAgICBpZighc2hpcC5pc1N1bmspIGFybWVkU2hpcHMgPSB0cnVlXG4gICAgICB9KVxuICAgICAgcmV0dXJuIGFybWVkU2hpcHNcbiAgICB9XG4gIH1cbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBBSXBsYXllciBmcm9tIFwiLi4vY29uc3RydWN0b3JzL0FJcGxheWVyXCI7XG5pbXBvcnQgUGxheWVyIGZyb20gXCIuLi9jb25zdHJ1Y3RvcnMvUGxheWVyXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGdhbWVMb29wKCkge1xuICAvLyBjcmVhdGUgdGhlIHBsYXllcnNcbiAgY29uc3QgcGxheWVyID0gUGxheWVyKCdwbGF5ZXInKVxuICBjb25zdCBBSSA9IEFJcGxheWVyKClcblxuICAvLyBjcmVhdGUgdGhlIHNoaXBzIG1hbnVhbGx5IGZvciB0ZXN0aW5nXG4gIHBsYXllci5wbGFjZVNoaXAoWzEsMV0sICdyaWdodCcsIDEpXG4gIHBsYXllci5wbGFjZVNoaXAoWzEsM10sICdyaWdodCcsIDIpXG4gIHBsYXllci5wbGFjZVNoaXAoWzEsNV0sICdyaWdodCcsIDMpXG4gIHBsYXllci5wbGFjZVNoaXAoWzEsN10sICdyaWdodCcsIDQpXG4gIHBsYXllci5wbGFjZVNoaXAoWzEsOV0sICdyaWdodCcsIDUpXG4gIHBsYXllci5wbGFjZVNoaXAoWzEwLDEwXSwgJ3VwJywgNilcbiAgQUkucGxhY2VTaGlwKDEpIFxuICBBSS5wbGFjZVNoaXAoMikgXG4gIEFJLnBsYWNlU2hpcCg1KSBcbiAgQUkucGxhY2VTaGlwKDUpIFxuXG4gIC8vIHNlbGVjdCB0aGUgY29udGFpbmVycyBvZiBlYWNoIGJvYXJkXG4gIGNvbnN0IHBsYXllckJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BsYXllci1ib2FyZCcpXG4gIGNvbnN0IEFJQm9hcmQgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnQUktYm9hcmQnKVxuXG4gIC8vIHJlbmRlciB0aGUgcGxheWVyIGJvYXJkXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBwbGF5ZXIuYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIGJveC5pZCA9IGBwJHtpfWBcbiAgICBib3guY2xhc3NMaXN0LmFkZCgnYm94JylcbiAgICAvLyBzaG93cyBzaGlwcyBvbiB0aGUgYm9hcmRcbiAgICBpZihwbGF5ZXIuYm9hcmRbaV0uc2hpcCkgYm94LmNsYXNzTGlzdC5hZGQoJ2NvbnRhaW4tc2hpcCcpXG4gICAgcGxheWVyQm9hcmQuYXBwZW5kKGJveClcbiAgfVxuXG4gIC8vIHJlbmRlciB0aGUgQUkgYm9hcmRcbiAgZm9yKGxldCBpID0gMDsgaSA8IEFJLmJvYXJkLmxlbmd0aDsgaSsrKSB7XG4gICAgY29uc3QgYm94ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JylcbiAgICBib3guaWQgPSBgQSR7aX1gXG4gICAgYm94LmNsYXNzTGlzdC5hZGQoJ0FJLWJveCcsICdib3gnKVxuICAgIC8vIC8vIHNob3dzIHNoaXBzIG9uIHRoZSBib2FyZFxuICAgIC8vIGlmKEFJLmJvYXJkW2ldLnNoaXApIGJveC5jbGFzc0xpc3QuYWRkKCdjb250YWluLXNoaXAnKVxuXG4gICAgLy8gd2hlbiBib3ggaXMgY2xpY2tlZFxuICAgIGJveC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIC8vIGRvIG5vdGhpbmcgaWYgaXQncyBhbHJlYWR5IGF0dGFja2VkXG4gICAgICBpZihBSS5ib2FyZFtpXS5hdHRhY2tlZCkgcmV0dXJuXG4gICAgICAvLyBpZiBub3QsIHNob290IEFJIGF0IGxvY2F0aW9uXG4gICAgICBwbGF5ZXIuc2hvb3QoQUksIEFJLmJvYXJkW2ldLmNvb3JkaW5hdGVzKVxuICAgICAgaWYoQUkuYm9hcmRbaV0uc2hpcCkge1xuICAgICAgICBpZihBSS5ib2FyZFtpXS5zaGlwLmlzU3Vuaykge1xuICAgICAgICAgIGJveC5jbGFzc0xpc3QuYWRkKCdzaGlwLWhpdCcpXG4gICAgICAgICAgQUlCb2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmVkJ1xuICAgICAgICAgIEFJU3RhdGUuc3R5bGUuY29sb3IgPSAncmVkJ1xuICAgICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xuICAgICAgICAgICAgQUlCb2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAnIzIzODlkYSdcbiAgICAgICAgICAgIEFJU3RhdGUuc3R5bGUuY29sb3IgPSAnI2ZmZidcbiAgICAgICAgICB9LCAxMDApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgYm94LmNsYXNzTGlzdC5hZGQoJ3NoaXAtaGl0JylcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgZWxzZSBib3guY2xhc3NMaXN0LmFkZCgnYXR0YWNrZWQnKVxuXG4gICAgICAvLyB0aGVuIEFJIHNob290cyBiYWNrIGF0IHJhbmRvbSBsb2NhdGlvblxuICAgICAgY29uc3QgQUlIaXQgPSBwbGF5ZXIuYm9hcmQuaW5kZXhPZihBSS5zaG9vdChwbGF5ZXIpKVxuICAgICAgY29uc3QgdGFyZ2V0Qm94ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihgI3BsYXllci1ib2FyZCA+ICNwJHtBSUhpdH1gKVxuICAgICAgaWYocGxheWVyLmJvYXJkW0FJSGl0XS5zaGlwKSB7XG4gICAgICAgIGlmKHBsYXllci5ib2FyZFtBSUhpdF0uc2hpcC5pc1N1bmspIHtcbiAgICAgICAgICBwbGF5ZXJCb2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmVkJ1xuICAgICAgICAgIHBsYXllclN0YXRlLnN0eWxlLmNvbG9yID0gJ3JlZCdcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHBsYXllckJvYXJkLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMjM4OWRhJ1xuICAgICAgICAgICAgcGxheWVyU3RhdGUuc3R5bGUuY29sb3IgPSAnI2ZmZidcbiAgICAgICAgICB9LCAxMDApXG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgdGFyZ2V0Qm94LmNsYXNzTGlzdC5hZGQoJ3NoaXAtaGl0JykgXG4gICAgICAgIH1cbiAgICAgIH0gXG4gICAgICBlbHNlIHRhcmdldEJveC5jbGFzc0xpc3QuYWRkKCdhdHRhY2tlZCcpXG4gICAgICB1cGRhdGVTaGlwc0RldGFpbHMoKVxuICAgIH0pXG4gICAgQUlCb2FyZC5hcHBlbmQoYm94KVxuICB9XG5cbiAgLy8gYWRkIHBsYXllciBkZXRhaWxzOlxuICBjb25zdCBwbGF5ZXJOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI3BsYXllci1kZXRhaWxzIGgxJylcbiAgY29uc3QgQUlOYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignI0FJLWRldGFpbHMgaDEnKVxuICBjb25zdCBwbGF5ZXJTdGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwbGF5ZXItZGV0YWlscyBwJylcbiAgY29uc3QgQUlTdGF0ZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNBSS1kZXRhaWxzIHAnKVxuICBwbGF5ZXJOYW1lLnRleHRDb250ZW50ID0gcGxheWVyLm5hbWVcbiAgQUlOYW1lLnRleHRDb250ZW50ID0gQUkubmFtZVxuICB1cGRhdGVTaGlwc0RldGFpbHMoKVxuXG5cbiAgZnVuY3Rpb24gdXBkYXRlU2hpcHNEZXRhaWxzKCkge1xuICAgIHBsYXllclN0YXRlLnRleHRDb250ZW50ID0gYFNoaXBzIGFsaXZlOiAke3BsYXllci5nYW1lQm9hcmQuc2hpcHMubGVuZ3RoIC0gcGxheWVyLmdhbWVCb2FyZC5zdW5rU2hpcHMubGVuZ3RofWBcblxuICAgIEFJU3RhdGUudGV4dENvbnRlbnQgPSBgU2hpcHMgYWxpdmU6ICR7QUkuZ2FtZUJvYXJkLnNoaXBzLmxlbmd0aCAtIEFJLmdhbWVCb2FyZC5zdW5rU2hpcHMubGVuZ3RofWBcbiAgfVxufSIsImltcG9ydCBHYW1lQm9hcmQgZnJvbSBcIi4vR2FtZUJvYXJkXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gUGxheWVyKHBsYXllck5hbWUpIHtcbiAgY29uc3QgbmFtZSA9IHBsYXllck5hbWVcbiAgY29uc3QgZ2FtZUJvYXJkID0gbmV3IEdhbWVCb2FyZCgpXG5cbiAgcmV0dXJuIHtcbiAgICBuYW1lLFxuICAgIGdhbWVCb2FyZCxcbiAgICBnZXQgYm9hcmQoKSB7XG4gICAgICByZXR1cm4gZ2FtZUJvYXJkLmJvYXJkXG4gICAgfSxcblxuICAgIHBsYWNlU2hpcChjb29yZCwgZGlyZWN0aW9uLCBsZW4pIHtcbiAgICAgIGdhbWVCb2FyZC5wbGFjZVNoaXAoY29vcmQsIGRpcmVjdGlvbiwgbGVuKVxuICAgIH0sXG5cbiAgICBzaG9vdCh0YXJnZXQsIGNvb3JkKSB7XG4gICAgICB0YXJnZXQuZ2FtZUJvYXJkLnJlY2VpdmVBdHRhY2soY29vcmQpXG4gICAgfVxuICB9XG59IiwiaW1wb3J0IEdhbWVCb2FyZCBmcm9tIFwiLi9HYW1lQm9hcmRcIjtcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQUlwbGF5ZXIoKSB7XG4gIGNvbnN0IG5hbWUgPSAnQUknXG4gIGNvbnN0IGdhbWVCb2FyZCA9IG5ldyBHYW1lQm9hcmQoKVxuICAvLyBtYWtlIGEgY29weSBvZiB0aGUgYm9hcmQgYXJyYXlcbiAgLy8gY29uc3QgYm9hcmRBcnJheUNvcHkgPSBbLi4uZ2FtZUJvYXJkLmJvYXJkXVxuXG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBnYW1lQm9hcmQsXG4gICAgZ2V0IGJvYXJkKCkge1xuICAgICAgcmV0dXJuIGdhbWVCb2FyZC5ib2FyZFxuICAgIH0sXG5cbiAgICBwbGFjZVNoaXAobGVuKSB7XG4gICAgICBjb25zdCBpZCA9IGNyeXB0by5yYW5kb21VVUlEKClcbiAgICAgIHdoaWxlKHRydWUpIHtcbiAgICAgICAgLy8gZGVjbGFyZSBlbXB0eSBjb29yZHMgYXJyYXlcbiAgICAgICAgbGV0IGNvb3JkcyA9IFtdXG5cbiAgICAgICAgLy8gZ2VuZXJhdGUgcmFuZG9tIGNvb3JkaW5hdGVzXG4gICAgICAgIGNvbnN0IHggPSBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwKVxuICAgICAgICBjb25zdCB5ID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMClcblxuICAgICAgICAvLyBwdXNoIHRoZW0gdG8gdGhlIGFycmF5XG4gICAgICAgIGNvb3Jkcy5wdXNoKHgpXG4gICAgICAgIGNvb3Jkcy5wdXNoKHkpXG5cbiAgICAgICAgLy8gcGljayByYW5kb20gZGlyZWN0aW9uXG4gICAgICAgIGNvbnN0IHBvc3NpYmxlRGlyZWN0aW9ucyA9IFsncmlnaHQnLCAndXAnXVxuICAgICAgICBjb25zdCByYW5kb21EaXJlY3Rpb24gPSBwb3NzaWJsZURpcmVjdGlvbnNbTWF0aC5mbG9vcihNYXRoLnJhbmRvbSgpICogcG9zc2libGVEaXJlY3Rpb25zLmxlbmd0aCldXG5cbiAgICAgICAgLy8gdHJ5IHRvIHBsYWNlIHNoaXBcbiAgICAgICAgZ2FtZUJvYXJkLnBsYWNlU2hpcChjb29yZHMsIHJhbmRvbURpcmVjdGlvbiwgbGVuLCBpZClcblxuICAgICAgICAvLyBnZXQgdGhlIHNoaXAgbG9jYXRpb24gb24gdGhlIGJvYXJkXG4gICAgICAgIGxldCBsb2NhdGlvbiA9IGdhbWVCb2FyZC5ib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuXG4gICAgICAgIC8vIGNoZWNrIGlmIHNoaXAgaXMgcHJlc2VudCBhdCB0aGUgbG9jYXRpb25cbiAgICAgICAgaWYobG9jYXRpb24uc2hpcCAhPSBudWxsKSB7XG4gICAgICAgICAgLy8gY2hlY2sgaWYgaXRzIHRoZSBzaGlwIHdlIGp1c3QgY3JlYXRlZFxuICAgICAgICAgIGlmKGxvY2F0aW9uLnNoaXAuaWQgPT09IGlkKSByZXR1cm5cbiAgICAgICAgfVxuXG4gICAgICAgIC8vIGlmIG5vdCwgcmVwZWF0XG4gICAgICB9ICBcbiAgICB9LFxuXG4gICAgc2hvb3QodGFyZ2V0KSB7XG4gICAgICB3aGlsZSh0cnVlKSB7XG4gICAgICAgIC8vIGRlY2xhcmUgZW1wdHkgY29vcmRzIGFycmF5XG4gICAgICAgIGxldCBjb29yZHMgPSBbXVxuXG4gICAgICAgIC8vIGdlbmVyYXRlIHJhbmRvbSBjb29yZGluYXRlc1xuICAgICAgICBjb25zdCB4ID0gTWF0aC5jZWlsKE1hdGgucmFuZG9tKCkgKiAxMClcbiAgICAgICAgY29uc3QgeSA9IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTApXG5cbiAgICAgICAgLy8gcHVzaCB0aGVtIHRvIHRoZSBhcnJheVxuICAgICAgICBjb29yZHMucHVzaCh4KVxuICAgICAgICBjb29yZHMucHVzaCh5KVxuXG4gICAgICAgIC8vIGZpbmQgdGhlIGNvcnJlY3QgbG9jYXRpb24gb24gdGFyZ2V0IGJvYXJkXG4gICAgICAgIGNvbnN0IHRhcmdldEJvYXJkID0gdGFyZ2V0LmdhbWVCb2FyZC5ib2FyZFxuICAgICAgICBsZXQgbG9jYXRpb24gPSB0YXJnZXRCb2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuXG4gICAgICAgIC8vIGNoZWNrIGlmIHRoZSBsb2NhdGlvbiB3YXMgYWxyZWFkeSBhdHRhY2tlZFxuICAgICAgICBpZighbG9jYXRpb24uYXR0YWNrZWQpIHtcbiAgICAgICAgICAvLyBpZiBub3QgYXR0YWNrXG4gICAgICAgICAgdGFyZ2V0LmdhbWVCb2FyZC5yZWNlaXZlQXR0YWNrKGxvY2F0aW9uLmNvb3JkaW5hdGVzKVxuICAgICAgICAgIHJldHVybiBsb2NhdGlvblxuICAgICAgICB9XG4gICAgICAgIC8vIGlmIHllcywgcmVwZWF0XG4gICAgICB9XG4gICAgfVxuICB9XG59IiwiaW1wb3J0IGdhbWVMb29wIGZyb20gXCIuL01vZHVsZXMvZ2FtZUxvb3BcIjtcbmltcG9ydCAnLi9zdHlsZXMvc3R5bGVzLmNzcydcblxuZ2FtZUxvb3AoKSJdLCJuYW1lcyI6WyJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfRVhQT1JUX19fIiwiX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyIsInB1c2giLCJtb2R1bGUiLCJpZCIsImV4cG9ydHMiLCJjc3NXaXRoTWFwcGluZ1RvU3RyaW5nIiwibGlzdCIsInRvU3RyaW5nIiwidGhpcyIsIm1hcCIsIml0ZW0iLCJjb250ZW50IiwibmVlZExheWVyIiwiY29uY2F0IiwibGVuZ3RoIiwiam9pbiIsImkiLCJtb2R1bGVzIiwibWVkaWEiLCJkZWR1cGUiLCJzdXBwb3J0cyIsImxheWVyIiwidW5kZWZpbmVkIiwiYWxyZWFkeUltcG9ydGVkTW9kdWxlcyIsImsiLCJfayIsInVybCIsIm9wdGlvbnMiLCJTdHJpbmciLCJfX2VzTW9kdWxlIiwiZGVmYXVsdCIsInRlc3QiLCJzbGljZSIsImhhc2giLCJuZWVkUXVvdGVzIiwicmVwbGFjZSIsImNzc01hcHBpbmciLCJidG9hIiwiYmFzZTY0IiwidW5lc2NhcGUiLCJlbmNvZGVVUklDb21wb25lbnQiLCJKU09OIiwic3RyaW5naWZ5IiwiZGF0YSIsInNvdXJjZU1hcHBpbmciLCJzdHlsZXNJbkRPTSIsImdldEluZGV4QnlJZGVudGlmaWVyIiwiaWRlbnRpZmllciIsInJlc3VsdCIsIm1vZHVsZXNUb0RvbSIsImlkQ291bnRNYXAiLCJpZGVudGlmaWVycyIsImJhc2UiLCJjb3VudCIsImluZGV4QnlJZGVudGlmaWVyIiwib2JqIiwiY3NzIiwic291cmNlTWFwIiwicmVmZXJlbmNlcyIsInVwZGF0ZXIiLCJhZGRFbGVtZW50U3R5bGUiLCJieUluZGV4Iiwic3BsaWNlIiwiYXBpIiwiZG9tQVBJIiwidXBkYXRlIiwibmV3T2JqIiwicmVtb3ZlIiwibGFzdElkZW50aWZpZXJzIiwibmV3TGlzdCIsImluZGV4IiwibmV3TGFzdElkZW50aWZpZXJzIiwiX2kiLCJfaW5kZXgiLCJtZW1vIiwiaW5zZXJ0Iiwic3R5bGUiLCJ0YXJnZXQiLCJzdHlsZVRhcmdldCIsImRvY3VtZW50IiwicXVlcnlTZWxlY3RvciIsIndpbmRvdyIsIkhUTUxJRnJhbWVFbGVtZW50IiwiY29udGVudERvY3VtZW50IiwiaGVhZCIsImUiLCJnZXRUYXJnZXQiLCJFcnJvciIsImFwcGVuZENoaWxkIiwiZWxlbWVudCIsImNyZWF0ZUVsZW1lbnQiLCJzZXRBdHRyaWJ1dGVzIiwiYXR0cmlidXRlcyIsInN0eWxlRWxlbWVudCIsIm5vbmNlIiwic2V0QXR0cmlidXRlIiwiaW5zZXJ0U3R5bGVFbGVtZW50Iiwic3R5bGVUYWdUcmFuc2Zvcm0iLCJhcHBseSIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInJlbW92ZVN0eWxlRWxlbWVudCIsInN0eWxlU2hlZXQiLCJjc3NUZXh0IiwiZmlyc3RDaGlsZCIsImNyZWF0ZVRleHROb2RlIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsIm0iLCJuIiwiZ2V0dGVyIiwiZCIsImEiLCJkZWZpbml0aW9uIiwia2V5IiwibyIsIk9iamVjdCIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwiRnVuY3Rpb24iLCJwcm9wIiwicHJvdG90eXBlIiwiaGFzT3duUHJvcGVydHkiLCJjYWxsIiwic2NyaXB0VXJsIiwiaW1wb3J0U2NyaXB0cyIsImxvY2F0aW9uIiwiY3VycmVudFNjcmlwdCIsInNyYyIsInNjcmlwdHMiLCJnZXRFbGVtZW50c0J5VGFnTmFtZSIsInAiLCJiIiwiYmFzZVVSSSIsInNlbGYiLCJocmVmIiwibmMiLCJTaGlwIiwibGVuIiwiYXJndW1lbnRzIiwiaGl0cyIsImlzU3VuayIsImhpdCIsIkdhbWVCb2FyZCIsImJvYXJkIiwic2hpcHMiLCJzdW5rU2hpcHMiLCJ0b3RhbEhpdHMiLCJ4IiwieSIsImJveCIsInBsYWNlU2hpcCIsImNvb3JkcyIsImRpcmVjdGlvbiIsImNvb3Jkc0NvcHkiLCJjaG9zZW5Mb2NhdGlvbiIsImZpbmQiLCJjb29yZGluYXRlcyIsImV2ZXJ5IiwiY29vcmQiLCJhdmFpbGFibGUiLCJiYXR0bGVzaGlwIiwiYWRqYWNlbnRMb2NhdGlvbnMiLCJzaGlwIiwiZm9yRWFjaCIsImN1cnJlbnQiLCJyZWNlaXZlQXR0YWNrIiwiYXR0YWNrZWQiLCJoYXNBcm1lZFNoaXBzIiwiYXJtZWRTaGlwcyIsInBsYXllciIsInBsYXllck5hbWUiLCJnYW1lQm9hcmQiLCJuYW1lIiwic2hvb3QiLCJQbGF5ZXIiLCJBSSIsImNyeXB0byIsInJhbmRvbVVVSUQiLCJNYXRoIiwiY2VpbCIsInJhbmRvbSIsInBvc3NpYmxlRGlyZWN0aW9ucyIsInJhbmRvbURpcmVjdGlvbiIsImZsb29yIiwiQUlwbGF5ZXIiLCJwbGF5ZXJCb2FyZCIsImdldEVsZW1lbnRCeUlkIiwiQUlCb2FyZCIsImNsYXNzTGlzdCIsImFkZCIsImFwcGVuZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJiYWNrZ3JvdW5kQ29sb3IiLCJBSVN0YXRlIiwiY29sb3IiLCJzZXRUaW1lb3V0IiwiQUlIaXQiLCJpbmRleE9mIiwidGFyZ2V0Qm94IiwicGxheWVyU3RhdGUiLCJ1cGRhdGVTaGlwc0RldGFpbHMiLCJBSU5hbWUiLCJ0ZXh0Q29udGVudCIsImdhbWVMb29wIl0sInNvdXJjZVJvb3QiOiIifQ==