(()=>{"use strict";var n={806:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,'@media only screen and (max-width: 1000px) {\n  #page-title {\n    margin-top: 30px;\n    font-size: 75px;\n  }\n\n  #game-container {\n    flex-direction: column;\n    margin-top: 10px;\n  }\n  \n  .player h1 {\n    font-size: 30px\n  }\n\n  .player h2 {\n    font-size: 20px;\n  }\n\n  .rotate {\n    font-size: 15px;\n    padding: 3px 15px;\n  }\n\n  #length-indicator {\n    font-size: 20px;\n  }\n\n  .board {\n    margin: 0 auto;\n    width: 350px;\n    height: 350px;\n  }\n\n  .mobile-hidden {\n    display: none;\n  }\n\n  .ship-hit::after {\n    position: absolute;\n    content: "\\274c";\n    font-size: 27px; \n    color: #FFF;\n  }\n}',"",{version:3,sources:["webpack://./src/styles/media-queries.css"],names:[],mappings:"AAAA;EACE;IACE,gBAAgB;IAChB,eAAe;EACjB;;EAEA;IACE,sBAAsB;IACtB,gBAAgB;EAClB;;EAEA;IACE;EACF;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,eAAe;IACf,iBAAiB;EACnB;;EAEA;IACE,eAAe;EACjB;;EAEA;IACE,cAAc;IACd,YAAY;IACZ,aAAa;EACf;;EAEA;IACE,aAAa;EACf;;EAEA;IACE,kBAAkB;IAClB,gBAAgB;IAChB,eAAe;IACf,WAAW;EACb;AACF",sourcesContent:['@media only screen and (max-width: 1000px) {\n  #page-title {\n    margin-top: 30px;\n    font-size: 75px;\n  }\n\n  #game-container {\n    flex-direction: column;\n    margin-top: 10px;\n  }\n  \n  .player h1 {\n    font-size: 30px\n  }\n\n  .player h2 {\n    font-size: 20px;\n  }\n\n  .rotate {\n    font-size: 15px;\n    padding: 3px 15px;\n  }\n\n  #length-indicator {\n    font-size: 20px;\n  }\n\n  .board {\n    margin: 0 auto;\n    width: 350px;\n    height: 350px;\n  }\n\n  .mobile-hidden {\n    display: none;\n  }\n\n  .ship-hit::after {\n    position: absolute;\n    content: "\\274c";\n    font-size: 27px; \n    color: #FFF;\n  }\n}'],sourceRoot:""}]);const s=i},884:(n,e,t)=>{t.d(e,{Z:()=>s});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,".player h1 {\n  text-align: center;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.direction {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.player h2 {\n  font-size: 30px;\n}\n\n.rotate {\n  background-color: white;\n  color: black;\n  margin: 0 0 10px 10px;\n  width: max-content;\n  text-align: center;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 5px 15px;\n  cursor: pointer;\n}\n\n.rotate:hover {\n  background-color: rgb(199, 199, 199);\n}\n\n#length-indicator {\n  text-align: center;\n  font-size: 25px;\n}\n\n.pre-game {\n  cursor: pointer;\n}\n\n.hidden {\n  display: none\n}","",{version:3,sources:["webpack://./src/styles/prepare-game.css"],names:[],mappings:"AAAA;EACE,kBAAkB;EAClB,eAAe;EACf,mBAAmB;AACrB;;AAEA;EACE,aAAa;EACb,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,uBAAuB;EACvB,YAAY;EACZ,qBAAqB;EACrB,kBAAkB;EAClB,kBAAkB;EAClB,kBAAkB;EAClB,eAAe;EACf,iBAAiB;EACjB,eAAe;AACjB;;AAEA;EACE,oCAAoC;AACtC;;AAEA;EACE,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE;AACF",sourcesContent:[".player h1 {\n  text-align: center;\n  font-size: 40px;\n  margin-bottom: 10px;\n}\n\n.direction {\n  display: flex;\n  justify-content: center;\n  margin-bottom: 10px;\n}\n\n.player h2 {\n  font-size: 30px;\n}\n\n.rotate {\n  background-color: white;\n  color: black;\n  margin: 0 0 10px 10px;\n  width: max-content;\n  text-align: center;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 5px 15px;\n  cursor: pointer;\n}\n\n.rotate:hover {\n  background-color: rgb(199, 199, 199);\n}\n\n#length-indicator {\n  text-align: center;\n  font-size: 25px;\n}\n\n.pre-game {\n  cursor: pointer;\n}\n\n.hidden {\n  display: none\n}"],sourceRoot:""}]);const s=i},772:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),s=t(667),c=t.n(s),A=new URL(t(265),t.b),d=i()(r()),l=c()(A);d.push([n.id,"* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url("+l+');\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n  margin-top: 50px;\n\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.highlight {\n  background-color: #6200ff;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n',"",{version:3,sources:["webpack://./src/styles/styles.css"],names:[],mappings:"AAAA;EACE,UAAU;EACV,SAAS;EACT,sBAAsB;AACxB;;AAEA;EACE,mDAAgD;EAChD,YAAY;AACd;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,gBAAgB;AAClB;;AAEA;EACE,aAAa;EACb,gBAAgB;EAChB,uBAAuB;EACvB,mBAAmB;EACnB,YAAY;EACZ,mBAAmB;EACnB,gBAAgB;;AAElB;;AAEA;EACE,aAAa;EACb,sCAAsC;EACtC,yBAAyB;EACzB,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,iBAAiB;AACnB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE;AACF;;AAEA;EACE,eAAe;EACf,kBAAkB;EAClB,gCAAgC;AAClC;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,yBAAyB;AAC3B;;AAEA;EACE,kBAAkB;EAClB,gBAAgB;EAChB,eAAe;EACf,WAAW;AACb;;AAEA;EACE,mBAAmB;EACnB,yBAAyB;AAC3B",sourcesContent:['* {\n  padding: 0;\n  margin: 0;\n  box-sizing: border-box;\n}\n\nbody {\n  background: url(../assets/images/background.jpg);\n  color: white;\n}\n\n#page-title {\n  text-align: center;\n  margin-top: 65px;\n  font-size: 100px;\n}\n\n#game-container {\n  display: flex;\n  column-gap: 70px;\n  justify-content: center;\n  align-items: center;\n  width: 100vw;\n  height: max-content;\n  margin-top: 50px;\n\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(10, 1fr);\n  background-color: #2389da;\n  width: 500px;\n  height: 500px;\n  transition: all 0.1s ease-in-out;\n}\n\n.box {\n  border: 1px solid black;\n}\n\n.AI-box {\n  cursor: crosshair;\n}\n\n.AI-box:hover {\n  background-color: #6200ff;\n}\n\n.details h1 {\n  font-size: 60px\n}\n\n.details p {\n  font-size: 30px;\n  text-align: center;\n  transition: all 0.1s ease-in-out;\n}\n\n.highlight {\n  background-color: #6200ff;\n}\n\n.contain-ship {\n  background-color: azure;\n}\n\n.attacked {\n  background-color: #da2323;\n  cursor: not-allowed;\n}\n\n.attacked:hover {\n  background-color: #da2323;\n}\n\n.ship-hit {\n  background-color: #2354da;\n}\n\n.ship-hit::after {\n  position: absolute;\n  content: "\\274c";\n  font-size: 40px; \n  color: #FFF;\n}\n\n.ship-hit:hover {\n  cursor: not-allowed;\n  background-color: #2354da;\n}\n\n\n\n'],sourceRoot:""}]);const p=d},561:(n,e,t)=>{t.d(e,{Z:()=>p});var o=t(537),r=t.n(o),a=t(645),i=t.n(a),s=t(667),c=t.n(s),A=new URL(t(265),t.b),d=i()(r()),l=c()(A);d.push([n.id,".overlay {\n  position: fixed;\n  display: none;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.winner-overlay {\n  position: fixed;\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 30px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: url("+l+");\n  width: 600px;\n  height: 300px;\n  box-shadow: 2px 0px 10px #242424;\n}\n\n.winner-overlay h1 {\n  font-size: 60px\n}\n\n.winner-overlay p {\n  background-color: #2389da;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 10px 25px;\n  cursor: pointer;\n}\n\n.winner-overlay p:hover {\n  background-color: #6200ff;\n}\n\n","",{version:3,sources:["webpack://./src/styles/winner-overlay.css"],names:[],mappings:"AAAA;EACE,eAAe;EACf,aAAa;EACb,MAAM;EACN,OAAO;EACP,YAAY;EACZ,aAAa;EACb,oCAAoC;AACtC;;AAEA;EACE,eAAe;EACf,aAAa;EACb,sBAAsB;EACtB,uBAAuB;EACvB,mBAAmB;EACnB,aAAa;EACb,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,mDAAgD;EAChD,YAAY;EACZ,aAAa;EACb,gCAAgC;AAClC;;AAEA;EACE;AACF;;AAEA;EACE,yBAAyB;EACzB,kBAAkB;EAClB,eAAe;EACf,kBAAkB;EAClB,eAAe;AACjB;;AAEA;EACE,yBAAyB;AAC3B",sourcesContent:[".overlay {\n  position: fixed;\n  display: none;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  background-color: rgba(0, 0, 0, 0.5);\n}\n\n.winner-overlay {\n  position: fixed;\n  display: none;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  row-gap: 30px;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background: url(../assets/images/background.jpg);\n  width: 600px;\n  height: 300px;\n  box-shadow: 2px 0px 10px #242424;\n}\n\n.winner-overlay h1 {\n  font-size: 60px\n}\n\n.winner-overlay p {\n  background-color: #2389da;\n  border-radius: 5px;\n  font-size: 20px;\n  padding: 10px 25px;\n  cursor: pointer;\n}\n\n.winner-overlay p:hover {\n  background-color: #6200ff;\n}\n\n"],sourceRoot:""}]);const p=d},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var s=0;s<this.length;s++){var c=this[s][0];null!=c&&(i[c]=!0)}for(var A=0;A<n.length;A++){var d=[].concat(n[A]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */");return[e].concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],s=0;s<n.length;s++){var c=n[s],A=o.base?c[0]+o.base:c[0],d=a[A]||0,l="".concat(A," ").concat(d);a[A]=d+1;var p=t(l),u={css:c[1],media:c[2],sourceMap:c[3],supports:c[4],layer:c[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var h=r(u,o);o.byIndex=s,e.splice(s,0,{identifier:l,updater:h,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var s=t(a[i]);e[s].references--}for(var c=o(n,r),A=0;A<a.length;A++){var d=t(a[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=c}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){if("undefined"==typeof document)return{update:function(){},remove:function(){}};var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},265:(n,e,t)=>{n.exports=t.p+"assets/images/background.jpg"}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var o=e.getElementsByTagName("script");o.length&&(n=o[o.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{function n(n,e){const t=document.getElementById("player-board"),o=document.getElementById("AI-board");document.getElementById("page-title").classList.add("mobile-hidden");const r=document.querySelector(".player > h1"),a=document.querySelector(".direction"),i=document.getElementById("length-indicator"),s=document.querySelector("#AI-player");r.classList.add("hidden"),a.classList.add("hidden"),i.classList.add("hidden"),s.classList.remove("hidden"),t.innerHTML="";for(let e=0;e<n.board.length;e++){const o=document.createElement("div");o.id=`p${e}`,o.classList.add("box"),n.board[e].ship&&o.classList.add("contain-ship"),t.append(o)}for(let r=0;r<e.board.length;r++){const a=document.createElement("div");a.id=e.board[r].coordinates,a.classList.add("AI-box","box"),a.addEventListener("click",(()=>{if(e.board[r].attacked)return;n.shoot(e,e.board[r].coordinates),e.board[r].ship?(a.classList.add("ship-hit"),e.board[r].ship.isSunk&&(o.style.backgroundColor="red",l.style.color="red",setTimeout((()=>{o.style.backgroundColor="#2389da",l.style.color="#fff"}),50),e.board[r].ship.shipCoordinates.forEach((n=>{e.gameBoard.getAdjacentBoxes(n).forEach((n=>{document.getElementById(n.coordinates).classList.add("attacked"),n.attacked=!0}))})),u())):a.classList.add("attacked");const i=n.board.indexOf(e.shoot(n)),s=document.querySelector(`#player-board > #p${i}`);n.board[i].ship?(s.classList.add("ship-hit"),n.board[i].ship.isSunk&&(t.style.backgroundColor="red",d.style.color="red",setTimeout((()=>{t.style.backgroundColor="#2389da",d.style.color="#fff"}),50),n.board[i].ship.shipCoordinates.forEach((e=>{n.gameBoard.getAdjacentBoxes(e).forEach((e=>{const t=n.board.find((n=>n.coordinates.every(((n,t)=>n===e.coordinates[t])))),o=n.board.indexOf(t);document.getElementById(`p${o}`).classList.add("attacked"),e.attacked=!0}))})),u())):s.classList.add("attacked"),p()})),o.append(a)}const c=document.querySelector("#player-details h1"),A=document.querySelector("#AI-details h1"),d=document.querySelector("#player-details p"),l=document.querySelector("#AI-details p");function p(){d.textContent="Ships alive: "+(n.gameBoard.ships.length-n.gameBoard.sunkShips.length),l.textContent="Ships alive: "+(e.gameBoard.ships.length-e.gameBoard.sunkShips.length)}function u(){const t=document.querySelector(".overlay"),o=document.querySelector(".winner-overlay"),r=document.querySelector(".winner-overlay > h1");n.gameBoard.ships.length===n.gameBoard.sunkShips.length?(t.style.display="block",r.textContent="Computer won!",o.style.display="flex"):e.gameBoard.ships.length===e.gameBoard.sunkShips.length&&(t.style.display="block",r.textContent="Player won!",o.style.display="flex")}c.textContent=n.name,c.classList.add("mobile-hidden"),A.textContent=e.name,A.classList.add("mobile-hidden"),p()}function e(n){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:null;const t=n,o=[];let r=0,a=!1;return{get length(){return t},get shipCoordinates(){return o},get id(){return e},get hits(){return r},get isSunk(){return a},addCoordinates(n){o.push(n)},hit(){r++,r===t&&(a=!0)}}}function o(){let n=[],t=[],o=[],r=0,a=1,i=1;for(let e=0;e<100;e++){let e={coordinates:[a,i],ship:null,attacked:!1,available:!0};n.push(e),a++,a>10&&(a=1,i++)}return{get board(){return n},get sunkShips(){return o},get totalHits(){return r},get ships(){return t},placeShip(o,r,a){let i=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;if("right"===r&&o[0]+a>11)return"ship exceeding boundaries";if("down"===r&&o[1]+a>11)return"ship exceeding boundaries";let s=[...o];for(let e=0;e<a;e++){0!==e&&("right"===r?s[0]++:s[1]++);let t=n.find((n=>n.coordinates.every(((n,e)=>n===s[e]))));if(!t)return"No such coordinates";if(!t.available)return"Some of the space is unavailable"}const c=new e(a,i);t.push(c);let A=[...o];for(let n=0;n<a;n++){let n=[...A];"right"===r?A[0]++:A[1]++,c.addCoordinates(n)}for(let e=0;e<a;e++){0!==e&&("right"===r?o[0]++:o[1]++);let[t,a]=o,i=[[t-1,a],[t+1,a],[t-1,a+1],[t-1,a-1],[t+1,a+1],[t+1,a-1],[t,a+1],[t,a-1]],s=n.find((n=>n.coordinates.every(((n,e)=>n===o[e]))));s.ship=c,s.ship.coordinates=s.coordinates,s.available=!1,i.forEach((e=>{let t=n.find((n=>n.coordinates.every(((n,t)=>n===e[t]))));t&&(t.available=!1)}))}},receiveAttack(e){const t=n.find((n=>n.coordinates.every(((n,t)=>n===e[t]))));void 0===t||t.attacked||(t.attacked=!0,r++,t.ship&&(t.ship.hit(),t.ship.isSunk&&o.push(t.ship)))},getAdjacentBoxes(n){const[e,t]=n;return[[e-1,t],[e+1,t],[e-1,t+1],[e-1,t-1],[e+1,t+1],[e+1,t-1],[e,t+1],[e,t-1]].map((n=>this.board.find((e=>e.coordinates.every(((e,t)=>e===n[t])))))).filter((n=>void 0!==n))},hasArmedShips(){let n=!1;return t.forEach((e=>{e.isSunk||(n=!0)})),n}}}var r=t(379),a=t.n(r),i=t(795),s=t.n(i),c=t(569),A=t.n(c),d=t(565),l=t.n(d),p=t(216),u=t.n(p),h=t(589),g=t.n(h),f=t(772),E={};E.styleTagTransform=g(),E.setAttributes=l(),E.insert=A().bind(null,"head"),E.domAPI=s(),E.insertStyleElement=u(),a()(f.Z,E),f.Z&&f.Z.locals&&f.Z.locals;var m=t(561),C={};C.styleTagTransform=g(),C.setAttributes=l(),C.insert=A().bind(null,"head"),C.domAPI=s(),C.insertStyleElement=u(),a()(m.Z,C),m.Z&&m.Z.locals&&m.Z.locals;var B=t(884),b={};b.styleTagTransform=g(),b.setAttributes=l(),b.insert=A().bind(null,"head"),b.domAPI=s(),b.insertStyleElement=u(),a()(B.Z,b),B.Z&&B.Z.locals&&B.Z.locals;var y=t(806),x={};x.styleTagTransform=g(),x.setAttributes=l(),x.insert=A().bind(null,"head"),x.domAPI=s(),x.insertStyleElement=u(),a()(y.Z,x),y.Z&&y.Z.locals&&y.Z.locals,function(e,t){const o=document.getElementById("player-board"),r=document.getElementById("ship-length"),a=[5,5,3,2,2,2,1];let i="right",s=0;const c=document.getElementById("direction-text");document.querySelector(".rotate").addEventListener("click",(()=>{"right"===i?i="down":"down"===i&&(i="right"),c.textContent=i}));for(let c=0;c<e.board.length;c++){const d=document.createElement("div");d.id=e.board[c].coordinates,d.classList.add("box","pre-game"),d.addEventListener("mouseover",(()=>{A.forEach((n=>{n.classList.remove("highlight");const e=d.id.split(","),t=+e[0],o=+e[1],r=n.id.split(","),c=+r[0],A=+r[1];if("right"===i){if(t<=c&&c<t+a[s]&&A===o){if(t+a[s]>11)return;n.classList.add("highlight")}}else if("down"===i&&o<=A&&A<o+a[s]&&c===t){if(o+a[s]>11)return;n.classList.add("highlight")}}))})),d.addEventListener("click",(()=>{const o=d.id.split(","),c=[];c.push(+o[0]),c.push(+o[1]),e.placeShip(c,i,a[s]),e.gameBoard.ships.length>s&&(s++,r.textContent=a[s],document.querySelectorAll(".highlight").forEach((n=>{n.classList.add("contain-ship")}))),a[s]||(t.placeShip(1),t.placeShip(2),t.placeShip(2),t.placeShip(2),t.placeShip(3),t.placeShip(5),t.placeShip(5),n(e,t))})),o.append(d)}const A=document.querySelectorAll(".pre-game")}(function(n){const e=new o;return{name:"player",gameBoard:e,get board(){return e.board},placeShip:(n,t,o)=>e.placeShip(n,t,o),shoot(n,e){n.gameBoard.receiveAttack(e)}}}(),function(){const n=new o;let e=!1,t="",r=[],a=[];function i(n){let e=[];return"right"===n&&(e=[a[0]+1,a[1]]),"left"===n&&(e=[a[0]-1,a[1]]),"up"===n&&(e=[a[0],a[1]-1]),"down"===n&&(e=[a[0],a[1]+1]),e}return{name:"AI",gameBoard:n,get board(){return n.board},placeShip(e){const t=crypto.randomUUID();let o=0;for(;o<1e3;){o++;let r=[];const a=Math.ceil(10*Math.random()),i=Math.ceil(10*Math.random());r.push(a),r.push(i);const s=["right","down"],c=s[Math.floor(Math.random()*s.length)];n.placeShip(r,c,e,t);let A=n.board.find((n=>n.coordinates.every(((n,e)=>n===r[e]))));if(null!=A.ship&&A.ship.id===t)return}},shoot(n){const o=n.gameBoard.board;if(e){if(""===t){let i,s=r[0],c=r[1],A=[[s+1,c],[s,c+1],[s-1,c],[s,c-1]];for(let n=0;n<A.length&&(i=o.find((e=>e.coordinates.every(((e,t)=>e===A[n][t])))),!i||i.attacked);n++);if(n.gameBoard.receiveAttack(i.coordinates),i.ship)if(i.ship.isSunk)e=!1;else{a=i.coordinates;let n=a[0],e=a[1];n>s?t="right":n<s?t="left":e<c?t="up":e>c&&(t="down")}return i}{let s=!1,c=i(t),A=o.find((n=>n.coordinates.every(((n,e)=>n===c[e]))));if(A&&!A.attacked&&(n.gameBoard.receiveAttack(A.coordinates),a=A.coordinates,s=!0,A.ship))return A.ship.isSunk&&(e=!1,t=""),A;if("right"===t?t="left":"left"===t?t="right":"up"===t?t="down":"down"===t&&(t="up"),a=r,A&&!A.ship)return A;if(!s)return c=i(t),A=o.find((n=>n.coordinates.every(((n,e)=>n===c[e])))),n.gameBoard.receiveAttack(A.coordinates),a=A.coordinates,A}}for(;;){let t=[];const a=Math.ceil(10*Math.random()),i=Math.ceil(10*Math.random());t.push(a),t.push(i);let s=o.find((n=>n.coordinates.every(((n,e)=>n===t[e]))));if(!s.attacked){if(n.gameBoard.receiveAttack(s.coordinates),s.ship){if(s.ship.isSunk)return s;e=!0,r=s.coordinates}return s}}}}}()),document.querySelector(".winner-overlay > p").addEventListener("click",(()=>{window.location.reload()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QU9BLEVBQUlHLFlBQVlzQixPQUFNLENBQUNDLEVBQU9qSCxJQUFVaUgsSUFBVTBELEVBQVczSyxPQUVoR08sRUFBTytGLFVBQVU0QyxjQUFjcEYsRUFBUzRCLGFBQ3hDK0UsRUFBVTNHLEVBQVM0QixZQUNaNUIsQ0FNWCxDQXdDRixDQUdBLE9BQVksQ0FFVixJQUFJdUMsRUFBUyxHQUdiLE1BQU1pQyxFQUFJeUMsS0FBS0MsS0FBcUIsR0FBaEJELEtBQUtFLFVBQ25CMUMsRUFBSXdDLEtBQUtDLEtBQXFCLEdBQWhCRCxLQUFLRSxVQUd6QjVFLEVBQU83SyxLQUFLOE0sR0FDWmpDLEVBQU83SyxLQUFLK00sR0FHWixJQUFJekUsRUFBV3VILEVBQVl0RSxNQUFLeEIsR0FBT0EsRUFBSUcsWUFBWXNCLE9BQU0sQ0FBQ0MsRUFBT2pILElBQVVpSCxJQUFVWixFQUFPckcsT0FHaEcsSUFBSThELEVBQVM4QixTQUFVLENBSXJCLEdBRkFyRixFQUFPK0YsVUFBVTRDLGNBQWNwRixFQUFTNEIsYUFFckM1QixFQUFTMEIsS0FBTSxDQUVoQixHQUFHMUIsRUFBUzBCLEtBQUtNLE9BQVEsT0FBT2hDLEVBSWhDd0csR0FBYyxFQUVkRSxFQUFXMUcsRUFBUzRCLFdBQ3RCLENBQ0EsT0FBTzVCLENBQ1QsQ0FFRixDQUNGLEVBRUosQ0ZoTVc2SCxJQUlPbEwsU0FBU0MsY0FBYyx1QkFFL0JpRixpQkFBaUIsU0FBUyxLQUNsQ2hGLE9BQU9tRCxTQUFTOEgsUUFBUSxHIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvbWVkaWEtcXVlcmllcy5jc3MiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvcHJlcGFyZS1nYW1lLmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGVzL3dpbm5lci1vdmVybGF5LmNzcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2NvbXBhdCBnZXQgZGVmYXVsdCBleHBvcnQiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZGVmaW5lIHByb3BlcnR5IGdldHRlcnMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvZ2xvYmFsIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2hhc093blByb3BlcnR5IHNob3J0aGFuZCIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwL3dlYnBhY2svcnVudGltZS9wdWJsaWNQYXRoIiwid2VicGFjazovL2JhdHRsZXNoaXAvd2VicGFjay9ydW50aW1lL2pzb25wIGNodW5rIGxvYWRpbmciLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC93ZWJwYWNrL3J1bnRpbWUvbm9uY2UiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9Nb2R1bGVzL3N0YXJ0R2FtZS5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL2NvbnN0cnVjdG9ycy9TaGlwLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY29uc3RydWN0b3JzL0dhbWVCb2FyZC5qcyIsIndlYnBhY2s6Ly9iYXR0bGVzaGlwLy4vc3JjL3N0eWxlcy9zdHlsZXMuY3NzP2U0NWIiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvd2lubmVyLW92ZXJsYXkuY3NzP2Q1YzkiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9zdHlsZXMvcHJlcGFyZS1nYW1lLmNzcz9hZmUxIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvc3R5bGVzL21lZGlhLXF1ZXJpZXMuY3NzP2M2MGEiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9Nb2R1bGVzL3ByZXBhcmVHYW1lLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvaW5kZXguanMiLCJ3ZWJwYWNrOi8vYmF0dGxlc2hpcC8uL3NyYy9jb25zdHJ1Y3RvcnMvUGxheWVyLmpzIiwid2VicGFjazovL2JhdHRsZXNoaXAvLi9zcmMvY29uc3RydWN0b3JzL0FJcGxheWVyLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIEltcG9ydHNcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvc291cmNlTWFwcy5qc1wiO1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2FwaS5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xuLy8gTW9kdWxlXG5fX19DU1NfTE9BREVSX0VYUE9SVF9fXy5wdXNoKFttb2R1bGUuaWQsIFwiQG1lZGlhIG9ubHkgc2NyZWVuIGFuZCAobWF4LXdpZHRoOiAxMDAwcHgpIHtcXG4gICNwYWdlLXRpdGxlIHtcXG4gICAgbWFyZ2luLXRvcDogMzBweDtcXG4gICAgZm9udC1zaXplOiA3NXB4O1xcbiAgfVxcblxcbiAgI2dhbWUtY29udGFpbmVyIHtcXG4gICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gICAgbWFyZ2luLXRvcDogMTBweDtcXG4gIH1cXG4gIFxcbiAgLnBsYXllciBoMSB7XFxuICAgIGZvbnQtc2l6ZTogMzBweFxcbiAgfVxcblxcbiAgLnBsYXllciBoMiB7XFxuICAgIGZvbnQtc2l6ZTogMjBweDtcXG4gIH1cXG5cXG4gIC5yb3RhdGUge1xcbiAgICBmb250LXNpemU6IDE1cHg7XFxuICAgIHBhZGRpbmc6IDNweCAxNXB4O1xcbiAgfVxcblxcbiAgI2xlbmd0aC1pbmRpY2F0b3Ige1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICB9XFxuXFxuICAuYm9hcmQge1xcbiAgICBtYXJnaW46IDAgYXV0bztcXG4gICAgd2lkdGg6IDM1MHB4O1xcbiAgICBoZWlnaHQ6IDM1MHB4O1xcbiAgfVxcblxcbiAgLm1vYmlsZS1oaWRkZW4ge1xcbiAgICBkaXNwbGF5OiBub25lO1xcbiAgfVxcblxcbiAgLnNoaXAtaGl0OjphZnRlciB7XFxuICAgIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gICAgY29udGVudDogXFxcIlxcXFwyNzRjXFxcIjtcXG4gICAgZm9udC1zaXplOiAyN3B4OyBcXG4gICAgY29sb3I6ICNGRkY7XFxuICB9XFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvbWVkaWEtcXVlcmllcy5jc3NcIl0sXCJuYW1lc1wiOltdLFwibWFwcGluZ3NcIjpcIkFBQUE7RUFDRTtJQUNFLGdCQUFnQjtJQUNoQixlQUFlO0VBQ2pCOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGdCQUFnQjtFQUNsQjs7RUFFQTtJQUNFO0VBQ0Y7O0VBRUE7SUFDRSxlQUFlO0VBQ2pCOztFQUVBO0lBQ0UsZUFBZTtJQUNmLGlCQUFpQjtFQUNuQjs7RUFFQTtJQUNFLGVBQWU7RUFDakI7O0VBRUE7SUFDRSxjQUFjO0lBQ2QsWUFBWTtJQUNaLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGFBQWE7RUFDZjs7RUFFQTtJQUNFLGtCQUFrQjtJQUNsQixnQkFBZ0I7SUFDaEIsZUFBZTtJQUNmLFdBQVc7RUFDYjtBQUNGXCIsXCJzb3VyY2VzQ29udGVudFwiOltcIkBtZWRpYSBvbmx5IHNjcmVlbiBhbmQgKG1heC13aWR0aDogMTAwMHB4KSB7XFxuICAjcGFnZS10aXRsZSB7XFxuICAgIG1hcmdpbi10b3A6IDMwcHg7XFxuICAgIGZvbnQtc2l6ZTogNzVweDtcXG4gIH1cXG5cXG4gICNnYW1lLWNvbnRhaW5lciB7XFxuICAgIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XFxuICAgIG1hcmdpbi10b3A6IDEwcHg7XFxuICB9XFxuICBcXG4gIC5wbGF5ZXIgaDEge1xcbiAgICBmb250LXNpemU6IDMwcHhcXG4gIH1cXG5cXG4gIC5wbGF5ZXIgaDIge1xcbiAgICBmb250LXNpemU6IDIwcHg7XFxuICB9XFxuXFxuICAucm90YXRlIHtcXG4gICAgZm9udC1zaXplOiAxNXB4O1xcbiAgICBwYWRkaW5nOiAzcHggMTVweDtcXG4gIH1cXG5cXG4gICNsZW5ndGgtaW5kaWNhdG9yIHtcXG4gICAgZm9udC1zaXplOiAyMHB4O1xcbiAgfVxcblxcbiAgLmJvYXJkIHtcXG4gICAgbWFyZ2luOiAwIGF1dG87XFxuICAgIHdpZHRoOiAzNTBweDtcXG4gICAgaGVpZ2h0OiAzNTBweDtcXG4gIH1cXG5cXG4gIC5tb2JpbGUtaGlkZGVuIHtcXG4gICAgZGlzcGxheTogbm9uZTtcXG4gIH1cXG5cXG4gIC5zaGlwLWhpdDo6YWZ0ZXIge1xcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICAgIGNvbnRlbnQ6IFxcXCJcXFxcMjc0Y1xcXCI7XFxuICAgIGZvbnQtc2l6ZTogMjdweDsgXFxuICAgIGNvbG9yOiAjRkZGO1xcbiAgfVxcbn1cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9FWFBPUlRfX18gPSBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18oX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIucGxheWVyIGgxIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogNDBweDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5kaXJlY3Rpb24ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLnBsYXllciBoMiB7XFxuICBmb250LXNpemU6IDMwcHg7XFxufVxcblxcbi5yb3RhdGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBjb2xvcjogYmxhY2s7XFxuICBtYXJnaW46IDAgMCAxMHB4IDEwcHg7XFxuICB3aWR0aDogbWF4LWNvbnRlbnQ7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBwYWRkaW5nOiA1cHggMTVweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnJvdGF0ZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTk5LCAxOTksIDE5OSk7XFxufVxcblxcbiNsZW5ndGgtaW5kaWNhdG9yIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMjVweDtcXG59XFxuXFxuLnByZS1nYW1lIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmhpZGRlbiB7XFxuICBkaXNwbGF5OiBub25lXFxufVwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvcHJlcGFyZS1nYW1lLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGtCQUFrQjtFQUNsQixlQUFlO0VBQ2YsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLHVCQUF1QjtFQUN2QixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0UsdUJBQXVCO0VBQ3ZCLFlBQVk7RUFDWixxQkFBcUI7RUFDckIsa0JBQWtCO0VBQ2xCLGtCQUFrQjtFQUNsQixrQkFBa0I7RUFDbEIsZUFBZTtFQUNmLGlCQUFpQjtFQUNqQixlQUFlO0FBQ2pCOztBQUVBO0VBQ0Usb0NBQW9DO0FBQ3RDOztBQUVBO0VBQ0Usa0JBQWtCO0VBQ2xCLGVBQWU7QUFDakI7O0FBRUE7RUFDRSxlQUFlO0FBQ2pCOztBQUVBO0VBQ0U7QUFDRlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIucGxheWVyIGgxIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogNDBweDtcXG4gIG1hcmdpbi1ib3R0b206IDEwcHg7XFxufVxcblxcbi5kaXJlY3Rpb24ge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgbWFyZ2luLWJvdHRvbTogMTBweDtcXG59XFxuXFxuLnBsYXllciBoMiB7XFxuICBmb250LXNpemU6IDMwcHg7XFxufVxcblxcbi5yb3RhdGUge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XFxuICBjb2xvcjogYmxhY2s7XFxuICBtYXJnaW46IDAgMCAxMHB4IDEwcHg7XFxuICB3aWR0aDogbWF4LWNvbnRlbnQ7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBwYWRkaW5nOiA1cHggMTVweDtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLnJvdGF0ZTpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTk5LCAxOTksIDE5OSk7XFxufVxcblxcbiNsZW5ndGgtaW5kaWNhdG9yIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIGZvbnQtc2l6ZTogMjVweDtcXG59XFxuXFxuLnByZS1nYW1lIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG59XFxuXFxuLmhpZGRlbiB7XFxuICBkaXNwbGF5OiBub25lXFxufVwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCIvLyBJbXBvcnRzXG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfU09VUkNFTUFQX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL3NvdXJjZU1hcHMuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0FQSV9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9hcGkuanNcIjtcbmltcG9ydCBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvZ2V0VXJsLmpzXCI7XG52YXIgX19fQ1NTX0xPQURFUl9VUkxfSU1QT1JUXzBfX18gPSBuZXcgVVJMKFwiLi4vYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZ1wiLCBpbXBvcnQubWV0YS51cmwpO1xudmFyIF9fX0NTU19MT0FERVJfRVhQT1JUX19fID0gX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18pO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18gPSBfX19DU1NfTE9BREVSX0dFVF9VUkxfSU1QT1JUX19fKF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fKTtcbi8vIE1vZHVsZVxuX19fQ1NTX0xPQURFUl9FWFBPUlRfX18ucHVzaChbbW9kdWxlLmlkLCBcIioge1xcbiAgcGFkZGluZzogMDtcXG4gIG1hcmdpbjogMDtcXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XFxufVxcblxcbmJvZHkge1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIGNvbG9yOiB3aGl0ZTtcXG59XFxuXFxuI3BhZ2UtdGl0bGUge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgbWFyZ2luLXRvcDogNjVweDtcXG4gIGZvbnQtc2l6ZTogMTAwcHg7XFxufVxcblxcbiNnYW1lLWNvbnRhaW5lciB7XFxuICBkaXNwbGF5OiBmbGV4O1xcbiAgY29sdW1uLWdhcDogNzBweDtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogbWF4LWNvbnRlbnQ7XFxuICBtYXJnaW4tdG9wOiA1MHB4O1xcblxcbn1cXG5cXG4uYm9hcmQge1xcbiAgZGlzcGxheTogZ3JpZDtcXG4gIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDEwLCAxZnIpO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzODlkYTtcXG4gIHdpZHRoOiA1MDBweDtcXG4gIGhlaWdodDogNTAwcHg7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmJveCB7XFxuICBib3JkZXI6IDFweCBzb2xpZCBibGFjaztcXG59XFxuXFxuLkFJLWJveCB7XFxuICBjdXJzb3I6IGNyb3NzaGFpcjtcXG59XFxuXFxuLkFJLWJveDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjIwMGZmO1xcbn1cXG5cXG4uZGV0YWlscyBoMSB7XFxuICBmb250LXNpemU6IDYwcHhcXG59XFxuXFxuLmRldGFpbHMgcCB7XFxuICBmb250LXNpemU6IDMwcHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB0cmFuc2l0aW9uOiBhbGwgMC4xcyBlYXNlLWluLW91dDtcXG59XFxuXFxuLmhpZ2hsaWdodCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjIwMGZmO1xcbn1cXG5cXG4uY29udGFpbi1zaGlwIHtcXG4gIGJhY2tncm91bmQtY29sb3I6IGF6dXJlO1xcbn1cXG5cXG4uYXR0YWNrZWQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhMjMyMztcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxufVxcblxcbi5hdHRhY2tlZDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGEyMzIzO1xcbn1cXG5cXG4uc2hpcC1oaXQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzIzNTRkYTtcXG59XFxuXFxuLnNoaXAtaGl0OjphZnRlciB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBjb250ZW50OiBcXFwiXFxcXDI3NGNcXFwiO1xcbiAgZm9udC1zaXplOiA0MHB4OyBcXG4gIGNvbG9yOiAjRkZGO1xcbn1cXG5cXG4uc2hpcC1oaXQ6aG92ZXIge1xcbiAgY3Vyc29yOiBub3QtYWxsb3dlZDtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMzU0ZGE7XFxufVxcblxcblxcblxcblwiLCBcIlwiLHtcInZlcnNpb25cIjozLFwic291cmNlc1wiOltcIndlYnBhY2s6Ly8uL3NyYy9zdHlsZXMvc3R5bGVzLmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLFVBQVU7RUFDVixTQUFTO0VBQ1Qsc0JBQXNCO0FBQ3hCOztBQUVBO0VBQ0UsbURBQWdEO0VBQ2hELFlBQVk7QUFDZDs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZ0JBQWdCO0FBQ2xCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQix1QkFBdUI7RUFDdkIsbUJBQW1CO0VBQ25CLFlBQVk7RUFDWixtQkFBbUI7RUFDbkIsZ0JBQWdCOztBQUVsQjs7QUFFQTtFQUNFLGFBQWE7RUFDYixzQ0FBc0M7RUFDdEMseUJBQXlCO0VBQ3pCLFlBQVk7RUFDWixhQUFhO0VBQ2IsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0U7QUFDRjs7QUFFQTtFQUNFLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFLGtCQUFrQjtFQUNsQixnQkFBZ0I7RUFDaEIsZUFBZTtFQUNmLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQix5QkFBeUI7QUFDM0JcIixcInNvdXJjZXNDb250ZW50XCI6W1wiKiB7XFxuICBwYWRkaW5nOiAwO1xcbiAgbWFyZ2luOiAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG59XFxuXFxuYm9keSB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoLi4vYXNzZXRzL2ltYWdlcy9iYWNrZ3JvdW5kLmpwZyk7XFxuICBjb2xvcjogd2hpdGU7XFxufVxcblxcbiNwYWdlLXRpdGxlIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcXG4gIG1hcmdpbi10b3A6IDY1cHg7XFxuICBmb250LXNpemU6IDEwMHB4O1xcbn1cXG5cXG4jZ2FtZS1jb250YWluZXIge1xcbiAgZGlzcGxheTogZmxleDtcXG4gIGNvbHVtbi1nYXA6IDcwcHg7XFxuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcXG4gIGFsaWduLWl0ZW1zOiBjZW50ZXI7XFxuICB3aWR0aDogMTAwdnc7XFxuICBoZWlnaHQ6IG1heC1jb250ZW50O1xcbiAgbWFyZ2luLXRvcDogNTBweDtcXG5cXG59XFxuXFxuLmJvYXJkIHtcXG4gIGRpc3BsYXk6IGdyaWQ7XFxuICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgMWZyKTtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMzg5ZGE7XFxuICB3aWR0aDogNTAwcHg7XFxuICBoZWlnaHQ6IDUwMHB4O1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5ib3gge1xcbiAgYm9yZGVyOiAxcHggc29saWQgYmxhY2s7XFxufVxcblxcbi5BSS1ib3gge1xcbiAgY3Vyc29yOiBjcm9zc2hhaXI7XFxufVxcblxcbi5BSS1ib3g6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyMDBmZjtcXG59XFxuXFxuLmRldGFpbHMgaDEge1xcbiAgZm9udC1zaXplOiA2MHB4XFxufVxcblxcbi5kZXRhaWxzIHAge1xcbiAgZm9udC1zaXplOiAzMHB4O1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgdHJhbnNpdGlvbjogYWxsIDAuMXMgZWFzZS1pbi1vdXQ7XFxufVxcblxcbi5oaWdobGlnaHQge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogIzYyMDBmZjtcXG59XFxuXFxuLmNvbnRhaW4tc2hpcCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiBhenVyZTtcXG59XFxuXFxuLmF0dGFja2VkIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICNkYTIzMjM7XFxuICBjdXJzb3I6IG5vdC1hbGxvd2VkO1xcbn1cXG5cXG4uYXR0YWNrZWQ6aG92ZXIge1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2RhMjMyMztcXG59XFxuXFxuLnNoaXAtaGl0IHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMzU0ZGE7XFxufVxcblxcbi5zaGlwLWhpdDo6YWZ0ZXIge1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgY29udGVudDogXFxcIlxcXFwyNzRjXFxcIjtcXG4gIGZvbnQtc2l6ZTogNDBweDsgXFxuICBjb2xvcjogI0ZGRjtcXG59XFxuXFxuLnNoaXAtaGl0OmhvdmVyIHtcXG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM1NGRhO1xcbn1cXG5cXG5cXG5cXG5cIl0sXCJzb3VyY2VSb290XCI6XCJcIn1dKTtcbi8vIEV4cG9ydHNcbmV4cG9ydCBkZWZhdWx0IF9fX0NTU19MT0FERVJfRVhQT1JUX19fO1xuIiwiLy8gSW1wb3J0c1xuaW1wb3J0IF9fX0NTU19MT0FERVJfQVBJX1NPVVJDRU1BUF9JTVBPUlRfX18gZnJvbSBcIi4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvcnVudGltZS9zb3VyY2VNYXBzLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9BUElfSU1QT1JUX19fIGZyb20gXCIuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L3J1bnRpbWUvYXBpLmpzXCI7XG5pbXBvcnQgX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyBmcm9tIFwiLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9ydW50aW1lL2dldFVybC5qc1wiO1xudmFyIF9fX0NTU19MT0FERVJfVVJMX0lNUE9SVF8wX19fID0gbmV3IFVSTChcIi4uL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZC5qcGdcIiwgaW1wb3J0Lm1ldGEudXJsKTtcbnZhciBfX19DU1NfTE9BREVSX0VYUE9SVF9fXyA9IF9fX0NTU19MT0FERVJfQVBJX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX0FQSV9TT1VSQ0VNQVBfSU1QT1JUX19fKTtcbnZhciBfX19DU1NfTE9BREVSX1VSTF9SRVBMQUNFTUVOVF8wX19fID0gX19fQ1NTX0xPQURFUl9HRVRfVVJMX0lNUE9SVF9fXyhfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyk7XG4vLyBNb2R1bGVcbl9fX0NTU19MT0FERVJfRVhQT1JUX19fLnB1c2goW21vZHVsZS5pZCwgXCIub3ZlcmxheSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxufVxcblxcbi53aW5uZXItb3ZlcmxheSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHJvdy1nYXA6IDMwcHg7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZDogdXJsKFwiICsgX19fQ1NTX0xPQURFUl9VUkxfUkVQTEFDRU1FTlRfMF9fXyArIFwiKTtcXG4gIHdpZHRoOiA2MDBweDtcXG4gIGhlaWdodDogMzAwcHg7XFxuICBib3gtc2hhZG93OiAycHggMHB4IDEwcHggIzI0MjQyNDtcXG59XFxuXFxuLndpbm5lci1vdmVybGF5IGgxIHtcXG4gIGZvbnQtc2l6ZTogNjBweFxcbn1cXG5cXG4ud2lubmVyLW92ZXJsYXkgcCB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMjM4OWRhO1xcbiAgYm9yZGVyLXJhZGl1czogNXB4O1xcbiAgZm9udC1zaXplOiAyMHB4O1xcbiAgcGFkZGluZzogMTBweCAyNXB4O1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbn1cXG5cXG4ud2lubmVyLW92ZXJsYXkgcDpob3ZlciB7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjNjIwMGZmO1xcbn1cXG5cXG5cIiwgXCJcIix7XCJ2ZXJzaW9uXCI6MyxcInNvdXJjZXNcIjpbXCJ3ZWJwYWNrOi8vLi9zcmMvc3R5bGVzL3dpbm5lci1vdmVybGF5LmNzc1wiXSxcIm5hbWVzXCI6W10sXCJtYXBwaW5nc1wiOlwiQUFBQTtFQUNFLGVBQWU7RUFDZixhQUFhO0VBQ2IsTUFBTTtFQUNOLE9BQU87RUFDUCxZQUFZO0VBQ1osYUFBYTtFQUNiLG9DQUFvQztBQUN0Qzs7QUFFQTtFQUNFLGVBQWU7RUFDZixhQUFhO0VBQ2Isc0JBQXNCO0VBQ3RCLHVCQUF1QjtFQUN2QixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLFFBQVE7RUFDUixTQUFTO0VBQ1QsZ0NBQWdDO0VBQ2hDLG1EQUFnRDtFQUNoRCxZQUFZO0VBQ1osYUFBYTtFQUNiLGdDQUFnQztBQUNsQzs7QUFFQTtFQUNFO0FBQ0Y7O0FBRUE7RUFDRSx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLGVBQWU7RUFDZixrQkFBa0I7RUFDbEIsZUFBZTtBQUNqQjs7QUFFQTtFQUNFLHlCQUF5QjtBQUMzQlwiLFwic291cmNlc0NvbnRlbnRcIjpbXCIub3ZlcmxheSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDB2dztcXG4gIGhlaWdodDogMTAwdmg7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDAsIDAsIDAsIDAuNSk7XFxufVxcblxcbi53aW5uZXItb3ZlcmxheSB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBkaXNwbGF5OiBub25lO1xcbiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcXG4gIGp1c3RpZnktY29udGVudDogY2VudGVyO1xcbiAgYWxpZ24taXRlbXM6IGNlbnRlcjtcXG4gIHJvdy1nYXA6IDMwcHg7XFxuICB0b3A6IDUwJTtcXG4gIGxlZnQ6IDUwJTtcXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlKC01MCUsIC01MCUpO1xcbiAgYmFja2dyb3VuZDogdXJsKC4uL2Fzc2V0cy9pbWFnZXMvYmFja2dyb3VuZC5qcGcpO1xcbiAgd2lkdGg6IDYwMHB4O1xcbiAgaGVpZ2h0OiAzMDBweDtcXG4gIGJveC1zaGFkb3c6IDJweCAwcHggMTBweCAjMjQyNDI0O1xcbn1cXG5cXG4ud2lubmVyLW92ZXJsYXkgaDEge1xcbiAgZm9udC1zaXplOiA2MHB4XFxufVxcblxcbi53aW5uZXItb3ZlcmxheSBwIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMyMzg5ZGE7XFxuICBib3JkZXItcmFkaXVzOiA1cHg7XFxuICBmb250LXNpemU6IDIwcHg7XFxuICBwYWRkaW5nOiAxMHB4IDI1cHg7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxufVxcblxcbi53aW5uZXItb3ZlcmxheSBwOmhvdmVyIHtcXG4gIGJhY2tncm91bmQtY29sb3I6ICM2MjAwZmY7XFxufVxcblxcblwiXSxcInNvdXJjZVJvb3RcIjpcIlwifV0pO1xuLy8gRXhwb3J0c1xuZXhwb3J0IGRlZmF1bHQgX19fQ1NTX0xPQURFUl9FWFBPUlRfX187XG4iLCJcInVzZSBzdHJpY3RcIjtcblxuLypcbiAgTUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcbiAgQXV0aG9yIFRvYmlhcyBLb3BwZXJzIEBzb2tyYVxuKi9cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGNzc1dpdGhNYXBwaW5nVG9TdHJpbmcpIHtcbiAgdmFyIGxpc3QgPSBbXTtcblxuICAvLyByZXR1cm4gdGhlIGxpc3Qgb2YgbW9kdWxlcyBhcyBjc3Mgc3RyaW5nXG4gIGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcbiAgICByZXR1cm4gdGhpcy5tYXAoZnVuY3Rpb24gKGl0ZW0pIHtcbiAgICAgIHZhciBjb250ZW50ID0gXCJcIjtcbiAgICAgIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2YgaXRlbVs1XSAhPT0gXCJ1bmRlZmluZWRcIjtcbiAgICAgIGlmIChpdGVtWzRdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKTtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbWVkaWEgXCIuY29uY2F0KGl0ZW1bMl0sIFwiIHtcIik7XG4gICAgICB9XG4gICAgICBpZiAobmVlZExheWVyKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJAbGF5ZXJcIi5jb25jYXQoaXRlbVs1XS5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KGl0ZW1bNV0pIDogXCJcIiwgXCIge1wiKTtcbiAgICAgIH1cbiAgICAgIGNvbnRlbnQgKz0gY3NzV2l0aE1hcHBpbmdUb1N0cmluZyhpdGVtKTtcbiAgICAgIGlmIChuZWVkTGF5ZXIpIHtcbiAgICAgICAgY29udGVudCArPSBcIn1cIjtcbiAgICAgIH1cbiAgICAgIGlmIChpdGVtWzJdKSB7XG4gICAgICAgIGNvbnRlbnQgKz0gXCJ9XCI7XG4gICAgICB9XG4gICAgICBpZiAoaXRlbVs0XSkge1xuICAgICAgICBjb250ZW50ICs9IFwifVwiO1xuICAgICAgfVxuICAgICAgcmV0dXJuIGNvbnRlbnQ7XG4gICAgfSkuam9pbihcIlwiKTtcbiAgfTtcblxuICAvLyBpbXBvcnQgYSBsaXN0IG9mIG1vZHVsZXMgaW50byB0aGUgbGlzdFxuICBsaXN0LmkgPSBmdW5jdGlvbiBpKG1vZHVsZXMsIG1lZGlhLCBkZWR1cGUsIHN1cHBvcnRzLCBsYXllcikge1xuICAgIGlmICh0eXBlb2YgbW9kdWxlcyA9PT0gXCJzdHJpbmdcIikge1xuICAgICAgbW9kdWxlcyA9IFtbbnVsbCwgbW9kdWxlcywgdW5kZWZpbmVkXV07XG4gICAgfVxuICAgIHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XG4gICAgaWYgKGRlZHVwZSkge1xuICAgICAgZm9yICh2YXIgayA9IDA7IGsgPCB0aGlzLmxlbmd0aDsgaysrKSB7XG4gICAgICAgIHZhciBpZCA9IHRoaXNba11bMF07XG4gICAgICAgIGlmIChpZCAhPSBudWxsKSB7XG4gICAgICAgICAgYWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgfVxuICAgIGZvciAodmFyIF9rID0gMDsgX2sgPCBtb2R1bGVzLmxlbmd0aDsgX2srKykge1xuICAgICAgdmFyIGl0ZW0gPSBbXS5jb25jYXQobW9kdWxlc1tfa10pO1xuICAgICAgaWYgKGRlZHVwZSAmJiBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzW2l0ZW1bMF1dKSB7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgICAgaWYgKHR5cGVvZiBsYXllciAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgICAgICBpZiAodHlwZW9mIGl0ZW1bNV0gPT09IFwidW5kZWZpbmVkXCIpIHtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQGxheWVyXCIuY29uY2F0KGl0ZW1bNV0ubGVuZ3RoID4gMCA/IFwiIFwiLmNvbmNhdChpdGVtWzVdKSA6IFwiXCIsIFwiIHtcIikuY29uY2F0KGl0ZW1bMV0sIFwifVwiKTtcbiAgICAgICAgICBpdGVtWzVdID0gbGF5ZXI7XG4gICAgICAgIH1cbiAgICAgIH1cbiAgICAgIGlmIChtZWRpYSkge1xuICAgICAgICBpZiAoIWl0ZW1bMl0pIHtcbiAgICAgICAgICBpdGVtWzJdID0gbWVkaWE7XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgaXRlbVsxXSA9IFwiQG1lZGlhIFwiLmNvbmNhdChpdGVtWzJdLCBcIiB7XCIpLmNvbmNhdChpdGVtWzFdLCBcIn1cIik7XG4gICAgICAgICAgaXRlbVsyXSA9IG1lZGlhO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICBpZiAoc3VwcG9ydHMpIHtcbiAgICAgICAgaWYgKCFpdGVtWzRdKSB7XG4gICAgICAgICAgaXRlbVs0XSA9IFwiXCIuY29uY2F0KHN1cHBvcnRzKTtcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBpdGVtWzFdID0gXCJAc3VwcG9ydHMgKFwiLmNvbmNhdChpdGVtWzRdLCBcIikge1wiKS5jb25jYXQoaXRlbVsxXSwgXCJ9XCIpO1xuICAgICAgICAgIGl0ZW1bNF0gPSBzdXBwb3J0cztcbiAgICAgICAgfVxuICAgICAgfVxuICAgICAgbGlzdC5wdXNoKGl0ZW0pO1xuICAgIH1cbiAgfTtcbiAgcmV0dXJuIGxpc3Q7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uICh1cmwsIG9wdGlvbnMpIHtcbiAgaWYgKCFvcHRpb25zKSB7XG4gICAgb3B0aW9ucyA9IHt9O1xuICB9XG4gIGlmICghdXJsKSB7XG4gICAgcmV0dXJuIHVybDtcbiAgfVxuICB1cmwgPSBTdHJpbmcodXJsLl9fZXNNb2R1bGUgPyB1cmwuZGVmYXVsdCA6IHVybCk7XG5cbiAgLy8gSWYgdXJsIGlzIGFscmVhZHkgd3JhcHBlZCBpbiBxdW90ZXMsIHJlbW92ZSB0aGVtXG4gIGlmICgvXlsnXCJdLipbJ1wiXSQvLnRlc3QodXJsKSkge1xuICAgIHVybCA9IHVybC5zbGljZSgxLCAtMSk7XG4gIH1cbiAgaWYgKG9wdGlvbnMuaGFzaCkge1xuICAgIHVybCArPSBvcHRpb25zLmhhc2g7XG4gIH1cblxuICAvLyBTaG91bGQgdXJsIGJlIHdyYXBwZWQ/XG4gIC8vIFNlZSBodHRwczovL2RyYWZ0cy5jc3N3Zy5vcmcvY3NzLXZhbHVlcy0zLyN1cmxzXG4gIGlmICgvW1wiJygpIFxcdFxcbl18KCUyMCkvLnRlc3QodXJsKSB8fCBvcHRpb25zLm5lZWRRdW90ZXMpIHtcbiAgICByZXR1cm4gXCJcXFwiXCIuY29uY2F0KHVybC5yZXBsYWNlKC9cIi9nLCAnXFxcXFwiJykucmVwbGFjZSgvXFxuL2csIFwiXFxcXG5cIiksIFwiXFxcIlwiKTtcbiAgfVxuICByZXR1cm4gdXJsO1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXRlbSkge1xuICB2YXIgY29udGVudCA9IGl0ZW1bMV07XG4gIHZhciBjc3NNYXBwaW5nID0gaXRlbVszXTtcbiAgaWYgKCFjc3NNYXBwaW5nKSB7XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG4gIH1cbiAgaWYgKHR5cGVvZiBidG9hID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICB2YXIgYmFzZTY0ID0gYnRvYSh1bmVzY2FwZShlbmNvZGVVUklDb21wb25lbnQoSlNPTi5zdHJpbmdpZnkoY3NzTWFwcGluZykpKSk7XG4gICAgdmFyIGRhdGEgPSBcInNvdXJjZU1hcHBpbmdVUkw9ZGF0YTphcHBsaWNhdGlvbi9qc29uO2NoYXJzZXQ9dXRmLTg7YmFzZTY0LFwiLmNvbmNhdChiYXNlNjQpO1xuICAgIHZhciBzb3VyY2VNYXBwaW5nID0gXCIvKiMgXCIuY29uY2F0KGRhdGEsIFwiICovXCIpO1xuICAgIHJldHVybiBbY29udGVudF0uY29uY2F0KFtzb3VyY2VNYXBwaW5nXSkuam9pbihcIlxcblwiKTtcbiAgfVxuICByZXR1cm4gW2NvbnRlbnRdLmpvaW4oXCJcXG5cIik7XG59OyIsIlwidXNlIHN0cmljdFwiO1xuXG52YXIgc3R5bGVzSW5ET00gPSBbXTtcbmZ1bmN0aW9uIGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpIHtcbiAgdmFyIHJlc3VsdCA9IC0xO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IHN0eWxlc0luRE9NLmxlbmd0aDsgaSsrKSB7XG4gICAgaWYgKHN0eWxlc0luRE9NW2ldLmlkZW50aWZpZXIgPT09IGlkZW50aWZpZXIpIHtcbiAgICAgIHJlc3VsdCA9IGk7XG4gICAgICBicmVhaztcbiAgICB9XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn1cbmZ1bmN0aW9uIG1vZHVsZXNUb0RvbShsaXN0LCBvcHRpb25zKSB7XG4gIHZhciBpZENvdW50TWFwID0ge307XG4gIHZhciBpZGVudGlmaWVycyA9IFtdO1xuICBmb3IgKHZhciBpID0gMDsgaSA8IGxpc3QubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgaXRlbSA9IGxpc3RbaV07XG4gICAgdmFyIGlkID0gb3B0aW9ucy5iYXNlID8gaXRlbVswXSArIG9wdGlvbnMuYmFzZSA6IGl0ZW1bMF07XG4gICAgdmFyIGNvdW50ID0gaWRDb3VudE1hcFtpZF0gfHwgMDtcbiAgICB2YXIgaWRlbnRpZmllciA9IFwiXCIuY29uY2F0KGlkLCBcIiBcIikuY29uY2F0KGNvdW50KTtcbiAgICBpZENvdW50TWFwW2lkXSA9IGNvdW50ICsgMTtcbiAgICB2YXIgaW5kZXhCeUlkZW50aWZpZXIgPSBnZXRJbmRleEJ5SWRlbnRpZmllcihpZGVudGlmaWVyKTtcbiAgICB2YXIgb2JqID0ge1xuICAgICAgY3NzOiBpdGVtWzFdLFxuICAgICAgbWVkaWE6IGl0ZW1bMl0sXG4gICAgICBzb3VyY2VNYXA6IGl0ZW1bM10sXG4gICAgICBzdXBwb3J0czogaXRlbVs0XSxcbiAgICAgIGxheWVyOiBpdGVtWzVdXG4gICAgfTtcbiAgICBpZiAoaW5kZXhCeUlkZW50aWZpZXIgIT09IC0xKSB7XG4gICAgICBzdHlsZXNJbkRPTVtpbmRleEJ5SWRlbnRpZmllcl0ucmVmZXJlbmNlcysrO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhCeUlkZW50aWZpZXJdLnVwZGF0ZXIob2JqKTtcbiAgICB9IGVsc2Uge1xuICAgICAgdmFyIHVwZGF0ZXIgPSBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKTtcbiAgICAgIG9wdGlvbnMuYnlJbmRleCA9IGk7XG4gICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoaSwgMCwge1xuICAgICAgICBpZGVudGlmaWVyOiBpZGVudGlmaWVyLFxuICAgICAgICB1cGRhdGVyOiB1cGRhdGVyLFxuICAgICAgICByZWZlcmVuY2VzOiAxXG4gICAgICB9KTtcbiAgICB9XG4gICAgaWRlbnRpZmllcnMucHVzaChpZGVudGlmaWVyKTtcbiAgfVxuICByZXR1cm4gaWRlbnRpZmllcnM7XG59XG5mdW5jdGlvbiBhZGRFbGVtZW50U3R5bGUob2JqLCBvcHRpb25zKSB7XG4gIHZhciBhcGkgPSBvcHRpb25zLmRvbUFQSShvcHRpb25zKTtcbiAgYXBpLnVwZGF0ZShvYmopO1xuICB2YXIgdXBkYXRlciA9IGZ1bmN0aW9uIHVwZGF0ZXIobmV3T2JqKSB7XG4gICAgaWYgKG5ld09iaikge1xuICAgICAgaWYgKG5ld09iai5jc3MgPT09IG9iai5jc3MgJiYgbmV3T2JqLm1lZGlhID09PSBvYmoubWVkaWEgJiYgbmV3T2JqLnNvdXJjZU1hcCA9PT0gb2JqLnNvdXJjZU1hcCAmJiBuZXdPYmouc3VwcG9ydHMgPT09IG9iai5zdXBwb3J0cyAmJiBuZXdPYmoubGF5ZXIgPT09IG9iai5sYXllcikge1xuICAgICAgICByZXR1cm47XG4gICAgICB9XG4gICAgICBhcGkudXBkYXRlKG9iaiA9IG5ld09iaik7XG4gICAgfSBlbHNlIHtcbiAgICAgIGFwaS5yZW1vdmUoKTtcbiAgICB9XG4gIH07XG4gIHJldHVybiB1cGRhdGVyO1xufVxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAobGlzdCwgb3B0aW9ucykge1xuICBvcHRpb25zID0gb3B0aW9ucyB8fCB7fTtcbiAgbGlzdCA9IGxpc3QgfHwgW107XG4gIHZhciBsYXN0SWRlbnRpZmllcnMgPSBtb2R1bGVzVG9Eb20obGlzdCwgb3B0aW9ucyk7XG4gIHJldHVybiBmdW5jdGlvbiB1cGRhdGUobmV3TGlzdCkge1xuICAgIG5ld0xpc3QgPSBuZXdMaXN0IHx8IFtdO1xuICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgaWRlbnRpZmllciA9IGxhc3RJZGVudGlmaWVyc1tpXTtcbiAgICAgIHZhciBpbmRleCA9IGdldEluZGV4QnlJZGVudGlmaWVyKGlkZW50aWZpZXIpO1xuICAgICAgc3R5bGVzSW5ET01baW5kZXhdLnJlZmVyZW5jZXMtLTtcbiAgICB9XG4gICAgdmFyIG5ld0xhc3RJZGVudGlmaWVycyA9IG1vZHVsZXNUb0RvbShuZXdMaXN0LCBvcHRpb25zKTtcbiAgICBmb3IgKHZhciBfaSA9IDA7IF9pIDwgbGFzdElkZW50aWZpZXJzLmxlbmd0aDsgX2krKykge1xuICAgICAgdmFyIF9pZGVudGlmaWVyID0gbGFzdElkZW50aWZpZXJzW19pXTtcbiAgICAgIHZhciBfaW5kZXggPSBnZXRJbmRleEJ5SWRlbnRpZmllcihfaWRlbnRpZmllcik7XG4gICAgICBpZiAoc3R5bGVzSW5ET01bX2luZGV4XS5yZWZlcmVuY2VzID09PSAwKSB7XG4gICAgICAgIHN0eWxlc0luRE9NW19pbmRleF0udXBkYXRlcigpO1xuICAgICAgICBzdHlsZXNJbkRPTS5zcGxpY2UoX2luZGV4LCAxKTtcbiAgICAgIH1cbiAgICB9XG4gICAgbGFzdElkZW50aWZpZXJzID0gbmV3TGFzdElkZW50aWZpZXJzO1xuICB9O1xufTsiLCJcInVzZSBzdHJpY3RcIjtcblxudmFyIG1lbW8gPSB7fTtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBnZXRUYXJnZXQodGFyZ2V0KSB7XG4gIGlmICh0eXBlb2YgbWVtb1t0YXJnZXRdID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgdmFyIHN0eWxlVGFyZ2V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih0YXJnZXQpO1xuXG4gICAgLy8gU3BlY2lhbCBjYXNlIHRvIHJldHVybiBoZWFkIG9mIGlmcmFtZSBpbnN0ZWFkIG9mIGlmcmFtZSBpdHNlbGZcbiAgICBpZiAod2luZG93LkhUTUxJRnJhbWVFbGVtZW50ICYmIHN0eWxlVGFyZ2V0IGluc3RhbmNlb2Ygd2luZG93LkhUTUxJRnJhbWVFbGVtZW50KSB7XG4gICAgICB0cnkge1xuICAgICAgICAvLyBUaGlzIHdpbGwgdGhyb3cgYW4gZXhjZXB0aW9uIGlmIGFjY2VzcyB0byBpZnJhbWUgaXMgYmxvY2tlZFxuICAgICAgICAvLyBkdWUgdG8gY3Jvc3Mtb3JpZ2luIHJlc3RyaWN0aW9uc1xuICAgICAgICBzdHlsZVRhcmdldCA9IHN0eWxlVGFyZ2V0LmNvbnRlbnREb2N1bWVudC5oZWFkO1xuICAgICAgfSBjYXRjaCAoZSkge1xuICAgICAgICAvLyBpc3RhbmJ1bCBpZ25vcmUgbmV4dFxuICAgICAgICBzdHlsZVRhcmdldCA9IG51bGw7XG4gICAgICB9XG4gICAgfVxuICAgIG1lbW9bdGFyZ2V0XSA9IHN0eWxlVGFyZ2V0O1xuICB9XG4gIHJldHVybiBtZW1vW3RhcmdldF07XG59XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0QnlTZWxlY3RvcihpbnNlcnQsIHN0eWxlKSB7XG4gIHZhciB0YXJnZXQgPSBnZXRUYXJnZXQoaW5zZXJ0KTtcbiAgaWYgKCF0YXJnZXQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJDb3VsZG4ndCBmaW5kIGEgc3R5bGUgdGFyZ2V0LiBUaGlzIHByb2JhYmx5IG1lYW5zIHRoYXQgdGhlIHZhbHVlIGZvciB0aGUgJ2luc2VydCcgcGFyYW1ldGVyIGlzIGludmFsaWQuXCIpO1xuICB9XG4gIHRhcmdldC5hcHBlbmRDaGlsZChzdHlsZSk7XG59XG5tb2R1bGUuZXhwb3J0cyA9IGluc2VydEJ5U2VsZWN0b3I7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbi8qIGlzdGFuYnVsIGlnbm9yZSBuZXh0ICAqL1xuZnVuY3Rpb24gaW5zZXJ0U3R5bGVFbGVtZW50KG9wdGlvbnMpIHtcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic3R5bGVcIik7XG4gIG9wdGlvbnMuc2V0QXR0cmlidXRlcyhlbGVtZW50LCBvcHRpb25zLmF0dHJpYnV0ZXMpO1xuICBvcHRpb25zLmluc2VydChlbGVtZW50LCBvcHRpb25zLm9wdGlvbnMpO1xuICByZXR1cm4gZWxlbWVudDtcbn1cbm1vZHVsZS5leHBvcnRzID0gaW5zZXJ0U3R5bGVFbGVtZW50OyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcyhzdHlsZUVsZW1lbnQpIHtcbiAgdmFyIG5vbmNlID0gdHlwZW9mIF9fd2VicGFja19ub25jZV9fICE9PSBcInVuZGVmaW5lZFwiID8gX193ZWJwYWNrX25vbmNlX18gOiBudWxsO1xuICBpZiAobm9uY2UpIHtcbiAgICBzdHlsZUVsZW1lbnQuc2V0QXR0cmlidXRlKFwibm9uY2VcIiwgbm9uY2UpO1xuICB9XG59XG5tb2R1bGUuZXhwb3J0cyA9IHNldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlczsiLCJcInVzZSBzdHJpY3RcIjtcblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaikge1xuICB2YXIgY3NzID0gXCJcIjtcbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIkBzdXBwb3J0cyAoXCIuY29uY2F0KG9iai5zdXBwb3J0cywgXCIpIHtcIik7XG4gIH1cbiAgaWYgKG9iai5tZWRpYSkge1xuICAgIGNzcyArPSBcIkBtZWRpYSBcIi5jb25jYXQob2JqLm1lZGlhLCBcIiB7XCIpO1xuICB9XG4gIHZhciBuZWVkTGF5ZXIgPSB0eXBlb2Ygb2JqLmxheWVyICE9PSBcInVuZGVmaW5lZFwiO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwiQGxheWVyXCIuY29uY2F0KG9iai5sYXllci5sZW5ndGggPiAwID8gXCIgXCIuY29uY2F0KG9iai5sYXllcikgOiBcIlwiLCBcIiB7XCIpO1xuICB9XG4gIGNzcyArPSBvYmouY3NzO1xuICBpZiAobmVlZExheWVyKSB7XG4gICAgY3NzICs9IFwifVwiO1xuICB9XG4gIGlmIChvYmoubWVkaWEpIHtcbiAgICBjc3MgKz0gXCJ9XCI7XG4gIH1cbiAgaWYgKG9iai5zdXBwb3J0cykge1xuICAgIGNzcyArPSBcIn1cIjtcbiAgfVxuICB2YXIgc291cmNlTWFwID0gb2JqLnNvdXJjZU1hcDtcbiAgaWYgKHNvdXJjZU1hcCAmJiB0eXBlb2YgYnRvYSAhPT0gXCJ1bmRlZmluZWRcIikge1xuICAgIGNzcyArPSBcIlxcbi8qIyBzb3VyY2VNYXBwaW5nVVJMPWRhdGE6YXBwbGljYXRpb24vanNvbjtiYXNlNjQsXCIuY29uY2F0KGJ0b2EodW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KEpTT04uc3RyaW5naWZ5KHNvdXJjZU1hcCkpKSksIFwiICovXCIpO1xuICB9XG5cbiAgLy8gRm9yIG9sZCBJRVxuICAvKiBpc3RhbmJ1bCBpZ25vcmUgaWYgICovXG4gIG9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0oY3NzLCBzdHlsZUVsZW1lbnQsIG9wdGlvbnMub3B0aW9ucyk7XG59XG5mdW5jdGlvbiByZW1vdmVTdHlsZUVsZW1lbnQoc3R5bGVFbGVtZW50KSB7XG4gIC8vIGlzdGFuYnVsIGlnbm9yZSBpZlxuICBpZiAoc3R5bGVFbGVtZW50LnBhcmVudE5vZGUgPT09IG51bGwpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbiAgc3R5bGVFbGVtZW50LnBhcmVudE5vZGUucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50KTtcbn1cblxuLyogaXN0YW5idWwgaWdub3JlIG5leHQgICovXG5mdW5jdGlvbiBkb21BUEkob3B0aW9ucykge1xuICBpZiAodHlwZW9mIGRvY3VtZW50ID09PSBcInVuZGVmaW5lZFwiKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHVwZGF0ZTogZnVuY3Rpb24gdXBkYXRlKCkge30sXG4gICAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHt9XG4gICAgfTtcbiAgfVxuICB2YXIgc3R5bGVFbGVtZW50ID0gb3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQob3B0aW9ucyk7XG4gIHJldHVybiB7XG4gICAgdXBkYXRlOiBmdW5jdGlvbiB1cGRhdGUob2JqKSB7XG4gICAgICBhcHBseShzdHlsZUVsZW1lbnQsIG9wdGlvbnMsIG9iaik7XG4gICAgfSxcbiAgICByZW1vdmU6IGZ1bmN0aW9uIHJlbW92ZSgpIHtcbiAgICAgIHJlbW92ZVN0eWxlRWxlbWVudChzdHlsZUVsZW1lbnQpO1xuICAgIH1cbiAgfTtcbn1cbm1vZHVsZS5leHBvcnRzID0gZG9tQVBJOyIsIlwidXNlIHN0cmljdFwiO1xuXG4vKiBpc3RhbmJ1bCBpZ25vcmUgbmV4dCAgKi9cbmZ1bmN0aW9uIHN0eWxlVGFnVHJhbnNmb3JtKGNzcywgc3R5bGVFbGVtZW50KSB7XG4gIGlmIChzdHlsZUVsZW1lbnQuc3R5bGVTaGVldCkge1xuICAgIHN0eWxlRWxlbWVudC5zdHlsZVNoZWV0LmNzc1RleHQgPSBjc3M7XG4gIH0gZWxzZSB7XG4gICAgd2hpbGUgKHN0eWxlRWxlbWVudC5maXJzdENoaWxkKSB7XG4gICAgICBzdHlsZUVsZW1lbnQucmVtb3ZlQ2hpbGQoc3R5bGVFbGVtZW50LmZpcnN0Q2hpbGQpO1xuICAgIH1cbiAgICBzdHlsZUVsZW1lbnQuYXBwZW5kQ2hpbGQoZG9jdW1lbnQuY3JlYXRlVGV4dE5vZGUoY3NzKSk7XG4gIH1cbn1cbm1vZHVsZS5leHBvcnRzID0gc3R5bGVUYWdUcmFuc2Zvcm07IiwiLy8gVGhlIG1vZHVsZSBjYWNoZVxudmFyIF9fd2VicGFja19tb2R1bGVfY2FjaGVfXyA9IHt9O1xuXG4vLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcblx0dmFyIGNhY2hlZE1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF07XG5cdGlmIChjYWNoZWRNb2R1bGUgIT09IHVuZGVmaW5lZCkge1xuXHRcdHJldHVybiBjYWNoZWRNb2R1bGUuZXhwb3J0cztcblx0fVxuXHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuXHR2YXIgbW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXSA9IHtcblx0XHRpZDogbW9kdWxlSWQsXG5cdFx0Ly8gbm8gbW9kdWxlLmxvYWRlZCBuZWVkZWRcblx0XHRleHBvcnRzOiB7fVxuXHR9O1xuXG5cdC8vIEV4ZWN1dGUgdGhlIG1vZHVsZSBmdW5jdGlvblxuXHRfX3dlYnBhY2tfbW9kdWxlc19fW21vZHVsZUlkXShtb2R1bGUsIG1vZHVsZS5leHBvcnRzLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblxuXHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuXHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG59XG5cbi8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG5fX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBfX3dlYnBhY2tfbW9kdWxlc19fO1xuXG4iLCIvLyBnZXREZWZhdWx0RXhwb3J0IGZ1bmN0aW9uIGZvciBjb21wYXRpYmlsaXR5IHdpdGggbm9uLWhhcm1vbnkgbW9kdWxlc1xuX193ZWJwYWNrX3JlcXVpcmVfXy5uID0gKG1vZHVsZSkgPT4ge1xuXHR2YXIgZ2V0dGVyID0gbW9kdWxlICYmIG1vZHVsZS5fX2VzTW9kdWxlID9cblx0XHQoKSA9PiAobW9kdWxlWydkZWZhdWx0J10pIDpcblx0XHQoKSA9PiAobW9kdWxlKTtcblx0X193ZWJwYWNrX3JlcXVpcmVfXy5kKGdldHRlciwgeyBhOiBnZXR0ZXIgfSk7XG5cdHJldHVybiBnZXR0ZXI7XG59OyIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdClcblx0XHRzY3JpcHRVcmwgPSBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnNyYztcblx0aWYgKCFzY3JpcHRVcmwpIHtcblx0XHR2YXIgc2NyaXB0cyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpO1xuXHRcdGlmKHNjcmlwdHMubGVuZ3RoKSBzY3JpcHRVcmwgPSBzY3JpcHRzW3NjcmlwdHMubGVuZ3RoIC0gMV0uc3JjXG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIl9fd2VicGFja19yZXF1aXJlX18uYiA9IGRvY3VtZW50LmJhc2VVUkkgfHwgc2VsZi5sb2NhdGlvbi5ocmVmO1xuXG4vLyBvYmplY3QgdG8gc3RvcmUgbG9hZGVkIGFuZCBsb2FkaW5nIGNodW5rc1xuLy8gdW5kZWZpbmVkID0gY2h1bmsgbm90IGxvYWRlZCwgbnVsbCA9IGNodW5rIHByZWxvYWRlZC9wcmVmZXRjaGVkXG4vLyBbcmVzb2x2ZSwgcmVqZWN0LCBQcm9taXNlXSA9IGNodW5rIGxvYWRpbmcsIDAgPSBjaHVuayBsb2FkZWRcbnZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG5cdDE3OTogMFxufTtcblxuLy8gbm8gY2h1bmsgb24gZGVtYW5kIGxvYWRpbmdcblxuLy8gbm8gcHJlZmV0Y2hpbmdcblxuLy8gbm8gcHJlbG9hZGVkXG5cbi8vIG5vIEhNUlxuXG4vLyBubyBITVIgbWFuaWZlc3RcblxuLy8gbm8gb24gY2h1bmtzIGxvYWRlZFxuXG4vLyBubyBqc29ucCBmdW5jdGlvbiIsIl9fd2VicGFja19yZXF1aXJlX18ubmMgPSB1bmRlZmluZWQ7IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc3RhcnRHYW1lKHBsYXllciwgQUkpIHtcblxuICAvLyBzZWxlY3QgdGhlIGNvbnRhaW5lcnMgb2YgZWFjaCBib2FyZFxuICBjb25zdCBwbGF5ZXJCb2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXItYm9hcmQnKVxuICBjb25zdCBBSUJvYXJkID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ0FJLWJvYXJkJylcbiAgY29uc3QgcGFnZVRpdGxlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3BhZ2UtdGl0bGUnKVxuICBwYWdlVGl0bGUuY2xhc3NMaXN0LmFkZCgnbW9iaWxlLWhpZGRlbicpXG5cblxuICAvLyBoaWRlIHByZS1nYW1lIHRpdGxlcywgc2hvdyBBSSBib2FyZFxuICBjb25zdCBwbGFjZVNoaXBzVGl0bGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcucGxheWVyID4gaDEnKVxuICBjb25zdCBjaGFuZ2VEaXJlY3Rpb25CdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZGlyZWN0aW9uJylcbiAgY29uc3QgbGVuZ3RoSW5kaWNhdG9yID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2xlbmd0aC1pbmRpY2F0b3InKVxuICBjb25zdCBBSVNpZGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjQUktcGxheWVyJylcbiAgcGxhY2VTaGlwc1RpdGxlLmNsYXNzTGlzdC5hZGQoJ2hpZGRlbicpXG4gIGNoYW5nZURpcmVjdGlvbkJ0bi5jbGFzc0xpc3QuYWRkKCdoaWRkZW4nKVxuICBsZW5ndGhJbmRpY2F0b3IuY2xhc3NMaXN0LmFkZCgnaGlkZGVuJylcbiAgQUlTaWRlLmNsYXNzTGlzdC5yZW1vdmUoJ2hpZGRlbicpXG5cbiAgLy8gcmVzZXQgdGhlIHBsYXllciBib2FyZFxuICBwbGF5ZXJCb2FyZC5pbm5lckhUTUwgPSBcIlwiXG5cbiAgLy8gcmVuZGVyIHRoZSBwbGF5ZXIgYm9hcmRcbiAgZm9yKGxldCBpID0gMDsgaSA8IHBsYXllci5ib2FyZC5sZW5ndGg7IGkrKykge1xuICAgIGNvbnN0IGJveCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgYm94LmlkID0gYHAke2l9YFxuICAgIGJveC5jbGFzc0xpc3QuYWRkKCdib3gnKVxuICAgIC8vIHNob3dzIHNoaXBzIG9uIHRoZSBib2FyZFxuICAgIGlmKHBsYXllci5ib2FyZFtpXS5zaGlwKSBib3guY2xhc3NMaXN0LmFkZCgnY29udGFpbi1zaGlwJylcbiAgICBwbGF5ZXJCb2FyZC5hcHBlbmQoYm94KVxuICB9XG5cbiAgLy8gcmVuZGVyIHRoZSBBSSBib2FyZFxuICBmb3IobGV0IGkgPSAwOyBpIDwgQUkuYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIGJveC5pZCA9IEFJLmJvYXJkW2ldLmNvb3JkaW5hdGVzIC8vIHNldCB0aGUgaWQgb2YgdGhlIGJveCB0byBpdCdzIGNvb3JkaW5hdGVzXG4gICAgYm94LmNsYXNzTGlzdC5hZGQoJ0FJLWJveCcsICdib3gnKVxuXG4gICAgLy8gd2hlbiBib3ggaXMgY2xpY2tlZFxuICAgIGJveC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIC8vIGRvIG5vdGhpbmcgaWYgaXQncyBhbHJlYWR5IGF0dGFja2VkXG4gICAgICBpZihBSS5ib2FyZFtpXS5hdHRhY2tlZCkgcmV0dXJuXG4gICAgICAvLyBpZiBub3QsIHNob290IEFJIGF0IGxvY2F0aW9uXG4gICAgICBwbGF5ZXIuc2hvb3QoQUksIEFJLmJvYXJkW2ldLmNvb3JkaW5hdGVzKVxuICAgICAgLy8gaWYgc2hpcCBnb3QgaGl0XG4gICAgICBpZihBSS5ib2FyZFtpXS5zaGlwKSB7XG4gICAgICAgIGJveC5jbGFzc0xpc3QuYWRkKCdzaGlwLWhpdCcpXG4gICAgICAgIC8vIGlmIHNoaXAgc3Vua1xuICAgICAgICBpZihBSS5ib2FyZFtpXS5zaGlwLmlzU3Vuaykge1xuICAgICAgICAgIEFJQm9hcmQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJ3JlZCdcbiAgICAgICAgICBBSVN0YXRlLnN0eWxlLmNvbG9yID0gJ3JlZCdcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIEFJQm9hcmQuc3R5bGUuYmFja2dyb3VuZENvbG9yID0gJyMyMzg5ZGEnXG4gICAgICAgICAgICBBSVN0YXRlLnN0eWxlLmNvbG9yID0gJyNmZmYnXG4gICAgICAgICAgfSwgNTApXG4gICAgICAgICAgLy8gbWFyayBhZGphY2VudCBhcyBhdHRhY2tlZFxuICAgICAgICAgIGNvbnN0IHNoaXBDb29yZHMgPSBBSS5ib2FyZFtpXS5zaGlwLnNoaXBDb29yZGluYXRlc1xuICAgICAgICAgIHNoaXBDb29yZHMuZm9yRWFjaChjb29yZHMgPT4ge1xuICAgICAgICAgICAgY29uc3QgYWRqYWNlbnRCb3hlcyA9IEFJLmdhbWVCb2FyZC5nZXRBZGphY2VudEJveGVzKGNvb3JkcylcbiAgICAgICAgICAgIGFkamFjZW50Qm94ZXMuZm9yRWFjaChhZGphY2VudCA9PiB7XG4gICAgICAgICAgICAgIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGFkamFjZW50LmNvb3JkaW5hdGVzKS5jbGFzc0xpc3QuYWRkKCdhdHRhY2tlZCcpXG4gICAgICAgICAgICAgIGFkamFjZW50LmF0dGFja2VkID0gdHJ1ZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIC8vIGNoZWNrIGlmIGdhbWUgaXMgb3ZlclxuICAgICAgICAgIGlzR2FtZU92ZXIoKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgICBlbHNlIGJveC5jbGFzc0xpc3QuYWRkKCdhdHRhY2tlZCcpXG5cbiAgICAgIC8vIHRoZW4gQUkgc2hvb3RzIGJhY2sgYXQgcmFuZG9tIGxvY2F0aW9uXG4gICAgICBjb25zdCBBSUhpdCA9IHBsYXllci5ib2FyZC5pbmRleE9mKEFJLnNob290KHBsYXllcikpXG4gICAgICBjb25zdCB0YXJnZXRCb3ggPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKGAjcGxheWVyLWJvYXJkID4gI3Ake0FJSGl0fWApXG4gICAgICAvLyBpZiBzaGlwIGdvdCBoaXRcbiAgICAgIGlmKHBsYXllci5ib2FyZFtBSUhpdF0uc2hpcCkge1xuICAgICAgICB0YXJnZXRCb3guY2xhc3NMaXN0LmFkZCgnc2hpcC1oaXQnKSBcbiAgICAgICAgLy8gaWYgc2hpcCBzdW5rXG4gICAgICAgIGlmKHBsYXllci5ib2FyZFtBSUhpdF0uc2hpcC5pc1N1bmspIHtcbiAgICAgICAgICBwbGF5ZXJCb2FyZC5zdHlsZS5iYWNrZ3JvdW5kQ29sb3IgPSAncmVkJ1xuICAgICAgICAgIHBsYXllclN0YXRlLnN0eWxlLmNvbG9yID0gJ3JlZCdcbiAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgIHBsYXllckJvYXJkLnN0eWxlLmJhY2tncm91bmRDb2xvciA9ICcjMjM4OWRhJ1xuICAgICAgICAgICAgcGxheWVyU3RhdGUuc3R5bGUuY29sb3IgPSAnI2ZmZidcbiAgICAgICAgICB9LCA1MClcbiAgICAgICAgICAvLyBtYXJrIGFkamFjZW50IGFzIGF0dGFja2VkXG4gICAgICAgICAgY29uc3Qgc2hpcENvb3JkcyA9IHBsYXllci5ib2FyZFtBSUhpdF0uc2hpcC5zaGlwQ29vcmRpbmF0ZXNcbiAgICAgICAgICBzaGlwQ29vcmRzLmZvckVhY2goY29vcmRzID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGFkamFjZW50Qm94ZXMgPSBwbGF5ZXIuZ2FtZUJvYXJkLmdldEFkamFjZW50Qm94ZXMoY29vcmRzKVxuICAgICAgICAgICAgYWRqYWNlbnRCb3hlcy5mb3JFYWNoKGFkamFjZW50ID0+IHtcbiAgICAgICAgICAgICAgLy8gZmluZCB0aGUgY29ycmVjdCBib3ggaW4gdGhlIGFycmF5IGNvcnJlc3BvbmRpbmcgdG8gdGhlIGNvb3JkXG4gICAgICAgICAgICAgIGNvbnN0IGN1cnJlbnRCb3ggPSBwbGF5ZXIuYm9hcmQuZmluZChpdGVtID0+IGl0ZW0uY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGFkamFjZW50LmNvb3JkaW5hdGVzW2luZGV4XSkpXG4gICAgICAgICAgICAgIC8vIGdldCB0aGUgaW5kZXggb2YgdGhpcyBib3hcbiAgICAgICAgICAgICAgY29uc3QgY3VycmVudEJveEluZGV4ID0gcGxheWVyLmJvYXJkLmluZGV4T2YoY3VycmVudEJveClcbiAgICAgICAgICAgICAgLy8gdXNlIHNlbGVjdG9yIHRvIHNlbGVjdCB0aGUgYm94IHdpdGggdGhlIGluZGV4IGFzIGl0J3MgaWRcbiAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoYHAke2N1cnJlbnRCb3hJbmRleH1gKS5jbGFzc0xpc3QuYWRkKCdhdHRhY2tlZCcpXG4gICAgICAgICAgICAgIGFkamFjZW50LmF0dGFja2VkID0gdHJ1ZVxuICAgICAgICAgICAgfSlcbiAgICAgICAgICB9KVxuICAgICAgICAgIC8vIGNoZWNrIGlmIGdhbWUgaXMgb3ZlclxuICAgICAgICAgIGlzR2FtZU92ZXIoKVxuICAgICAgICB9XG4gICAgICB9IFxuICAgICAgZWxzZSB0YXJnZXRCb3guY2xhc3NMaXN0LmFkZCgnYXR0YWNrZWQnKVxuICAgICAgdXBkYXRlU2hpcHNEZXRhaWxzKClcbiAgICB9KVxuICAgIEFJQm9hcmQuYXBwZW5kKGJveClcbiAgfVxuXG4gIC8vIGFkZCBwbGF5ZXIgZGV0YWlsczpcbiAgY29uc3QgcGxheWVyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNwbGF5ZXItZGV0YWlscyBoMScpXG4gIGNvbnN0IEFJTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJyNBSS1kZXRhaWxzIGgxJylcbiAgY29uc3QgcGxheWVyU3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjcGxheWVyLWRldGFpbHMgcCcpXG4gIGNvbnN0IEFJU3RhdGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcjQUktZGV0YWlscyBwJylcbiAgcGxheWVyTmFtZS50ZXh0Q29udGVudCA9IHBsYXllci5uYW1lXG4gIHBsYXllck5hbWUuY2xhc3NMaXN0LmFkZCgnbW9iaWxlLWhpZGRlbicpXG4gIEFJTmFtZS50ZXh0Q29udGVudCA9IEFJLm5hbWVcbiAgQUlOYW1lLmNsYXNzTGlzdC5hZGQoJ21vYmlsZS1oaWRkZW4nKVxuICB1cGRhdGVTaGlwc0RldGFpbHMoKVxuXG5cbiAgZnVuY3Rpb24gdXBkYXRlU2hpcHNEZXRhaWxzKCkge1xuICAgIHBsYXllclN0YXRlLnRleHRDb250ZW50ID0gYFNoaXBzIGFsaXZlOiAke3BsYXllci5nYW1lQm9hcmQuc2hpcHMubGVuZ3RoIC0gcGxheWVyLmdhbWVCb2FyZC5zdW5rU2hpcHMubGVuZ3RofWBcbiAgICBBSVN0YXRlLnRleHRDb250ZW50ID0gYFNoaXBzIGFsaXZlOiAke0FJLmdhbWVCb2FyZC5zaGlwcy5sZW5ndGggLSBBSS5nYW1lQm9hcmQuc3Vua1NoaXBzLmxlbmd0aH1gXG4gIH1cblxuICBmdW5jdGlvbiBpc0dhbWVPdmVyKCkge1xuICAgIGNvbnN0IG92ZXJsYXkgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcub3ZlcmxheScpXG4gICAgY29uc3Qgd2lubmVyT3ZlcmxheSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW5uZXItb3ZlcmxheScpXG4gICAgY29uc3Qgd2lubmVyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoJy53aW5uZXItb3ZlcmxheSA+IGgxJylcblxuICAgIC8vIGlmIHBsYXllciBoYXMgbm8gbW9yZSBzaGlwcyBhbGl2ZVxuICAgIGlmKHBsYXllci5nYW1lQm9hcmQuc2hpcHMubGVuZ3RoID09PSBwbGF5ZXIuZ2FtZUJvYXJkLnN1bmtTaGlwcy5sZW5ndGgpIHtcbiAgICAgIC8vIGNvbXB1dGVyIHdpbnNcbiAgICAgIG92ZXJsYXkuc3R5bGUuZGlzcGxheSA9ICdibG9jaydcbiAgICAgIHdpbm5lck5hbWUudGV4dENvbnRlbnQgPSAnQ29tcHV0ZXIgd29uISdcbiAgICAgIHdpbm5lck92ZXJsYXkuc3R5bGUuZGlzcGxheSA9ICdmbGV4J1xuICAgIH1cbiAgICAvLyBpZiBjb21wdXRlciBoYXMgbm8gbW9yZSBzaGlwcyBhbGl2ZVxuICAgIGVsc2UgaWYoQUkuZ2FtZUJvYXJkLnNoaXBzLmxlbmd0aCA9PT0gQUkuZ2FtZUJvYXJkLnN1bmtTaGlwcy5sZW5ndGgpIHtcbiAgICAgIC8vIHBsYXllciB3aW5zXG4gICAgICBvdmVybGF5LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snXG4gICAgICB3aW5uZXJOYW1lLnRleHRDb250ZW50ID0gJ1BsYXllciB3b24hJ1xuICAgICAgd2lubmVyT3ZlcmxheS5zdHlsZS5kaXNwbGF5ID0gJ2ZsZXgnXG4gICAgfVxuICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gU2hpcChsZW4sIGlkID0gbnVsbCkge1xuICBjb25zdCBsZW5ndGggPSBsZW5cbiAgY29uc3Qgc2hpcENvb3JkaW5hdGVzID0gW11cbiAgbGV0IGhpdHMgPSAwXG4gIGxldCBpc1N1bmsgPSBmYWxzZVxuICByZXR1cm4ge1xuICAgIGdldCBsZW5ndGgoKSB7XG4gICAgICByZXR1cm4gbGVuZ3RoXG4gICAgfSxcblxuICAgIGdldCBzaGlwQ29vcmRpbmF0ZXMoKSB7XG4gICAgICByZXR1cm4gc2hpcENvb3JkaW5hdGVzXG4gICAgfSxcbiAgICBcbiAgICBnZXQgaWQoKSB7XG4gICAgICByZXR1cm4gaWRcbiAgICB9LFxuXG4gICAgZ2V0IGhpdHMoKSB7XG4gICAgICByZXR1cm4gaGl0c1xuICAgIH0sXG5cbiAgICBnZXQgaXNTdW5rKCkge1xuICAgICAgcmV0dXJuIGlzU3Vua1xuICAgIH0sXG5cbiAgICBhZGRDb29yZGluYXRlcyhjb29yZCkge1xuICAgICAgc2hpcENvb3JkaW5hdGVzLnB1c2goY29vcmQpXG4gICAgfSxcblxuICAgIGhpdCgpIHtcbiAgICAgIGhpdHMrK1xuICAgICAgaWYoaGl0cyA9PT0gbGVuZ3RoKSBpc1N1bmsgPSB0cnVlXG4gICAgfVxuICB9XG59IiwiaW1wb3J0IFNoaXAgZnJvbSBcIi4vU2hpcFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEdhbWVCb2FyZCgpIHtcbiAgbGV0IGJvYXJkID0gW11cbiAgbGV0IHNoaXBzID0gW11cbiAgbGV0IHN1bmtTaGlwcyA9IFtdXG4gIGxldCB0b3RhbEhpdHMgPSAwXG4gIGxldCBncmlkU2l6ZSA9IDEwMFxuICAvLyBpbml0aWFsaXplIGNvb3JkaW5hdGVzIGF0IDEsMVxuICBsZXQgeCA9IDFcbiAgbGV0IHkgPSAxXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBncmlkU2l6ZTsgaSsrKSB7XG4gICAgLy8gbWFrZSBlYWNoIGJveCBhbiBvYmplY3QgY29udGFpbmluZyBkYXRhXG4gICAgbGV0IGJveCA9IHtcbiAgICAgIFwiY29vcmRpbmF0ZXNcIjogW3gseV0sXG4gICAgICBcInNoaXBcIjogbnVsbCxcbiAgICAgIFwiYXR0YWNrZWRcIjogZmFsc2UsXG4gICAgICBcImF2YWlsYWJsZVwiOiB0cnVlXG4gICAgfVxuICAgIC8vIGFkZCBvYmplY3QgdG8gZ2FtZUJvYXJkIGFycmF5XG4gICAgYm9hcmQucHVzaChib3gpXG4gICAgXG4gICAgLy8gaW5jcmVtZW50IHggYW5kIHkgY29vcmRpbmF0ZXNcbiAgICB4KytcbiAgICBpZih4ID4gMTApIHtcbiAgICAgIHggPSAxXG4gICAgICB5KytcbiAgICB9XG5cbiAgfVxuXG4gIHJldHVybiB7XG4gICAgZ2V0IGJvYXJkKCkge1xuICAgICAgcmV0dXJuIGJvYXJkXG4gICAgfSxcblxuICAgIGdldCBzdW5rU2hpcHMoKSB7XG4gICAgICByZXR1cm4gc3Vua1NoaXBzXG4gICAgfSxcblxuICAgIGdldCB0b3RhbEhpdHMoKSB7XG4gICAgICByZXR1cm4gdG90YWxIaXRzXG4gICAgfSxcblxuICAgIGdldCBzaGlwcygpIHtcbiAgICAgIHJldHVybiBzaGlwc1xuICAgIH0sXG5cbiAgICBwbGFjZVNoaXAoY29vcmRzLCBkaXJlY3Rpb24sIGxlbiwgaWQgPSBudWxsKSB7XG4gICAgICAvLyBjaGVjayBpZiBzaGlwIHN0YXlzIHdpdGhpbiBib3VuZGFyaWVzXG4gICAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcgJiYgY29vcmRzWzBdICsgbGVuID4gMTEpIHJldHVybiAnc2hpcCBleGNlZWRpbmcgYm91bmRhcmllcydcbiAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ2Rvd24nICYmIGNvb3Jkc1sxXSArIGxlbiA+IDExKSByZXR1cm4gJ3NoaXAgZXhjZWVkaW5nIGJvdW5kYXJpZXMnXG5cbiAgICAgIGxldCBjb29yZHNDb3B5ID0gWy4uLmNvb3Jkc11cblxuICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGlmKGkgIT09IDApIHtcbiAgICAgICAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcpIGNvb3Jkc0NvcHlbMF0rK1xuICAgICAgICAgIGVsc2UgY29vcmRzQ29weVsxXSArK1xuICAgICAgICB9XG4gICAgICAgIGxldCBjaG9zZW5Mb2NhdGlvbiA9IGJvYXJkLmZpbmQoYm94ID0+IGJveC5jb29yZGluYXRlcy5ldmVyeSgoY29vcmQsIGluZGV4KSA9PiBjb29yZCA9PT0gY29vcmRzQ29weVtpbmRleF0pKVxuICAgICAgICBpZighY2hvc2VuTG9jYXRpb24pIHJldHVybiAnTm8gc3VjaCBjb29yZGluYXRlcydcbiAgICAgICAgaWYoIWNob3NlbkxvY2F0aW9uLmF2YWlsYWJsZSkgcmV0dXJuICdTb21lIG9mIHRoZSBzcGFjZSBpcyB1bmF2YWlsYWJsZSdcbiAgICAgIH1cblxuICAgICAgLy8gY3JlYXRlcyB0aGUgc2hpcFxuICAgICAgY29uc3QgYmF0dGxlc2hpcCA9IG5ldyBTaGlwKGxlbiwgaWQpXG4gICAgICBzaGlwcy5wdXNoKGJhdHRsZXNoaXApXG5cbiAgICAgIC8vIGFkZCB0aGUgc2hpcCBjb29yZGluYXRlcyB0byB0aGUgc2hpcCBvYmplY3RcbiAgICAgIGxldCBjb29yZGluYXRlc0NvcHkgPSBbLi4uY29vcmRzXVxuICAgICAgZm9yKGxldCBpID0gMDsgaSA8IGxlbjsgaSsrKSB7XG4gICAgICAgIGxldCBjdXJyZW50Q29vcmRzID0gWy4uLmNvb3JkaW5hdGVzQ29weV1cblxuICAgICAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcpIGNvb3JkaW5hdGVzQ29weVswXSsrXG4gICAgICAgIGVsc2UgY29vcmRpbmF0ZXNDb3B5WzFdKytcblxuICAgICAgICBiYXR0bGVzaGlwLmFkZENvb3JkaW5hdGVzKGN1cnJlbnRDb29yZHMpXG4gICAgICB9XG5cbiAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBsZW47IGkrKykge1xuICAgICAgICAvLyBza2lwcyBzdGF0ZW1lbnQgb24gZmlyc3Qgcm91bmQgdG8gYWRkIHRoZSBjaG9zZW4gY29vcmRpbmF0ZXNcbiAgICAgICAgaWYoaSAhPT0gMCkge1xuICAgICAgICAgIC8vIGNvbnRpbnVlIG1vdmluZyBpbiB0aGUgY2hvc2VuIGRpcmVjdGlvblxuICAgICAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0JykgY29vcmRzWzBdKytcbiAgICAgICAgICBlbHNlIGNvb3Jkc1sxXSsrXG4gICAgICAgIH1cblxuICAgICAgICAvLyBtYWtlIGFuIGFycmF5IGNvbnRhaW5pbmcgYWxsIG9mIHRoZSBhZGphY2VudCBsb2NhdGlvbnNcbiAgICAgICAgbGV0IFthLCBiXSA9IGNvb3JkcztcbiAgICAgICAgbGV0IGFkamFjZW50TG9jYXRpb25zID0gW1xuICAgICAgICAgIFthIC0gMSwgYl0sXG4gICAgICAgICAgW2EgKyAxLCBiXSxcbiAgICAgICAgICBbYSAtIDEsIGIgKyAxXSxcbiAgICAgICAgICBbYSAtIDEsIGIgLSAxXSxcbiAgICAgICAgICBbYSArIDEsIGIgKyAxXSxcbiAgICAgICAgICBbYSArIDEsIGIgLSAxXSxcbiAgICAgICAgICBbYSwgYiArIDFdLFxuICAgICAgICAgIFthLCBiIC0gMV1cbiAgICAgICAgXTtcblxuICAgICAgICBsZXQgY2hvc2VuTG9jYXRpb24gPSBib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuICAgICAgICBjaG9zZW5Mb2NhdGlvbi5zaGlwID0gYmF0dGxlc2hpcFxuICAgICAgICBjaG9zZW5Mb2NhdGlvbi5zaGlwLmNvb3JkaW5hdGVzID0gY2hvc2VuTG9jYXRpb24uY29vcmRpbmF0ZXNcblxuICAgICAgICAvLyBzZXQgc2hpcCBib3hlcyBhbmQgYWRqYWNlbnQgYm94ZXMgdW5hdmFpbGFibGVcbiAgICAgICAgY2hvc2VuTG9jYXRpb24uYXZhaWxhYmxlID0gZmFsc2VcbiAgICAgICAgYWRqYWNlbnRMb2NhdGlvbnMuZm9yRWFjaChsb2NhdGlvbiA9PiB7XG4gICAgICAgICAgbGV0IGN1cnJlbnQgPSBib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGxvY2F0aW9uW2luZGV4XSkpXG4gICAgICAgICAgaWYoY3VycmVudCkgY3VycmVudC5hdmFpbGFibGUgPSBmYWxzZVxuICAgICAgICB9KVxuICAgICAgfVxuICAgIH0sXG5cbiAgICByZWNlaXZlQXR0YWNrKGNvb3Jkcykge1xuICAgICAgY29uc3QgY2hvc2VuTG9jYXRpb24gPSBib2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuICAgICAgLy8gaWYgdGhlIGxvY2F0aW9uIGlzIG91dCBvZiBib3VuZGFyaWVzIG9yIHdhcyBhbHJlYWR5IGF0dGFja2VkXG4gICAgICBpZihjaG9zZW5Mb2NhdGlvbiA9PT0gdW5kZWZpbmVkIHx8IGNob3NlbkxvY2F0aW9uLmF0dGFja2VkKSByZXR1cm5cbiAgICBcbiAgICAgIC8vIG1hcmsgbG9jYXRpb24gYXMgYXR0YWNrZWRcbiAgICAgIGNob3NlbkxvY2F0aW9uLmF0dGFja2VkID0gdHJ1ZVxuICAgICAgdG90YWxIaXRzKytcbiAgICAgIC8vIGhpdCBzaGlwIGlmIHByZXNlbnRcbiAgICAgIGlmKGNob3NlbkxvY2F0aW9uLnNoaXApIHtcbiAgICAgICAgY2hvc2VuTG9jYXRpb24uc2hpcC5oaXQoKVxuICAgICAgICAvLyBpZiBzaGlwIHN1bmssIGFkZCB0byBzdW5rU2hpcHNcbiAgICAgICAgaWYoY2hvc2VuTG9jYXRpb24uc2hpcC5pc1N1bmspIHtcbiAgICAgICAgICBzdW5rU2hpcHMucHVzaChjaG9zZW5Mb2NhdGlvbi5zaGlwKVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIC8vIHJldHVybiB0aGUgYWRqYWNlbnQgbG9jYXRpb25zXG4gICAgZ2V0QWRqYWNlbnRCb3hlcyhjb29yZHMpIHtcbiAgICAgIGNvbnN0IFthLCBiXSA9IGNvb3JkcztcbiAgICAgIGNvbnN0IGFkamFjZW50TG9jYXRpb25zID0gW1xuICAgICAgICBbYSAtIDEsIGJdLFxuICAgICAgICBbYSArIDEsIGJdLFxuICAgICAgICBbYSAtIDEsIGIgKyAxXSxcbiAgICAgICAgW2EgLSAxLCBiIC0gMV0sXG4gICAgICAgIFthICsgMSwgYiArIDFdLFxuICAgICAgICBbYSArIDEsIGIgLSAxXSxcbiAgICAgICAgW2EsIGIgKyAxXSxcbiAgICAgICAgW2EsIGIgLSAxXVxuICAgICAgXTtcbiAgICAgIGNvbnN0IGFkamFjZW50Qm94ZXMgPSBhZGphY2VudExvY2F0aW9ucy5tYXAobG9jYXRpb24gPT4ge1xuICAgICAgICBjb25zdCBhZGphY2VudEJveCA9IHRoaXMuYm9hcmQuZmluZChib3ggPT4gYm94LmNvb3JkaW5hdGVzLmV2ZXJ5KChjb29yZCwgaW5kZXgpID0+IGNvb3JkID09PSBsb2NhdGlvbltpbmRleF0pKTtcbiAgICAgICAgcmV0dXJuIGFkamFjZW50Qm94O1xuICAgICAgfSk7XG4gICAgICByZXR1cm4gYWRqYWNlbnRCb3hlcy5maWx0ZXIoYm94ID0+IGJveCAhPT0gdW5kZWZpbmVkKTtcbiAgICB9LFxuICAgIFxuICAgIGhhc0FybWVkU2hpcHMoKSB7XG4gICAgICBsZXQgYXJtZWRTaGlwcyA9IGZhbHNlXG4gICAgICBzaGlwcy5mb3JFYWNoKHNoaXAgPT4ge1xuICAgICAgICBpZighc2hpcC5pc1N1bmspIGFybWVkU2hpcHMgPSB0cnVlXG4gICAgICB9KVxuICAgICAgcmV0dXJuIGFybWVkU2hpcHNcbiAgICB9XG4gIH1cbn0iLCJcbiAgICAgIGltcG9ydCBBUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbmplY3RTdHlsZXNJbnRvU3R5bGVUYWcuanNcIjtcbiAgICAgIGltcG9ydCBkb21BUEkgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZURvbUFQSS5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydEZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0QnlTZWxlY3Rvci5qc1wiO1xuICAgICAgaW1wb3J0IHNldEF0dHJpYnV0ZXMgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zZXRBdHRyaWJ1dGVzV2l0aG91dEF0dHJpYnV0ZXMuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRTdHlsZUVsZW1lbnQgZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRTdHlsZUVsZW1lbnQuanNcIjtcbiAgICAgIGltcG9ydCBzdHlsZVRhZ1RyYW5zZm9ybUZuIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVUYWdUcmFuc2Zvcm0uanNcIjtcbiAgICAgIGltcG9ydCBjb250ZW50LCAqIGFzIG5hbWVkRXhwb3J0IGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgXG4gICAgICBcblxudmFyIG9wdGlvbnMgPSB7fTtcblxub3B0aW9ucy5zdHlsZVRhZ1RyYW5zZm9ybSA9IHN0eWxlVGFnVHJhbnNmb3JtRm47XG5vcHRpb25zLnNldEF0dHJpYnV0ZXMgPSBzZXRBdHRyaWJ1dGVzO1xuXG4gICAgICBvcHRpb25zLmluc2VydCA9IGluc2VydEZuLmJpbmQobnVsbCwgXCJoZWFkXCIpO1xuICAgIFxub3B0aW9ucy5kb21BUEkgPSBkb21BUEk7XG5vcHRpb25zLmluc2VydFN0eWxlRWxlbWVudCA9IGluc2VydFN0eWxlRWxlbWVudDtcblxudmFyIHVwZGF0ZSA9IEFQSShjb250ZW50LCBvcHRpb25zKTtcblxuXG5cbmV4cG9ydCAqIGZyb20gXCIhIS4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2Rpc3QvY2pzLmpzIS4vc3R5bGVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi93aW5uZXItb3ZlcmxheS5jc3NcIjtcbiAgICAgIFxuICAgICAgXG5cbnZhciBvcHRpb25zID0ge307XG5cbm9wdGlvbnMuc3R5bGVUYWdUcmFuc2Zvcm0gPSBzdHlsZVRhZ1RyYW5zZm9ybUZuO1xub3B0aW9ucy5zZXRBdHRyaWJ1dGVzID0gc2V0QXR0cmlidXRlcztcblxuICAgICAgb3B0aW9ucy5pbnNlcnQgPSBpbnNlcnRGbi5iaW5kKG51bGwsIFwiaGVhZFwiKTtcbiAgICBcbm9wdGlvbnMuZG9tQVBJID0gZG9tQVBJO1xub3B0aW9ucy5pbnNlcnRTdHlsZUVsZW1lbnQgPSBpbnNlcnRTdHlsZUVsZW1lbnQ7XG5cbnZhciB1cGRhdGUgPSBBUEkoY29udGVudCwgb3B0aW9ucyk7XG5cblxuXG5leHBvcnQgKiBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL3dpbm5lci1vdmVybGF5LmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsIlxuICAgICAgaW1wb3J0IEFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luamVjdFN0eWxlc0ludG9TdHlsZVRhZy5qc1wiO1xuICAgICAgaW1wb3J0IGRvbUFQSSBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlRG9tQVBJLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0Rm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9pbnNlcnRCeVNlbGVjdG9yLmpzXCI7XG4gICAgICBpbXBvcnQgc2V0QXR0cmlidXRlcyBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3NldEF0dHJpYnV0ZXNXaXRob3V0QXR0cmlidXRlcy5qc1wiO1xuICAgICAgaW1wb3J0IGluc2VydFN0eWxlRWxlbWVudCBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydFN0eWxlRWxlbWVudC5qc1wiO1xuICAgICAgaW1wb3J0IHN0eWxlVGFnVHJhbnNmb3JtRm4gZnJvbSBcIiEuLi8uLi9ub2RlX21vZHVsZXMvc3R5bGUtbG9hZGVyL2Rpc3QvcnVudGltZS9zdHlsZVRhZ1RyYW5zZm9ybS5qc1wiO1xuICAgICAgaW1wb3J0IGNvbnRlbnQsICogYXMgbmFtZWRFeHBvcnQgZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcmVwYXJlLWdhbWUuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9wcmVwYXJlLWdhbWUuY3NzXCI7XG4gICAgICAgZXhwb3J0IGRlZmF1bHQgY29udGVudCAmJiBjb250ZW50LmxvY2FscyA/IGNvbnRlbnQubG9jYWxzIDogdW5kZWZpbmVkO1xuIiwiXG4gICAgICBpbXBvcnQgQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5qZWN0U3R5bGVzSW50b1N0eWxlVGFnLmpzXCI7XG4gICAgICBpbXBvcnQgZG9tQVBJIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc3R5bGVEb21BUEkuanNcIjtcbiAgICAgIGltcG9ydCBpbnNlcnRGbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL2luc2VydEJ5U2VsZWN0b3IuanNcIjtcbiAgICAgIGltcG9ydCBzZXRBdHRyaWJ1dGVzIGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvc2V0QXR0cmlidXRlc1dpdGhvdXRBdHRyaWJ1dGVzLmpzXCI7XG4gICAgICBpbXBvcnQgaW5zZXJ0U3R5bGVFbGVtZW50IGZyb20gXCIhLi4vLi4vbm9kZV9tb2R1bGVzL3N0eWxlLWxvYWRlci9kaXN0L3J1bnRpbWUvaW5zZXJ0U3R5bGVFbGVtZW50LmpzXCI7XG4gICAgICBpbXBvcnQgc3R5bGVUYWdUcmFuc2Zvcm1GbiBmcm9tIFwiIS4uLy4uL25vZGVfbW9kdWxlcy9zdHlsZS1sb2FkZXIvZGlzdC9ydW50aW1lL3N0eWxlVGFnVHJhbnNmb3JtLmpzXCI7XG4gICAgICBpbXBvcnQgY29udGVudCwgKiBhcyBuYW1lZEV4cG9ydCBmcm9tIFwiISEuLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9kaXN0L2Nqcy5qcyEuL21lZGlhLXF1ZXJpZXMuY3NzXCI7XG4gICAgICBcbiAgICAgIFxuXG52YXIgb3B0aW9ucyA9IHt9O1xuXG5vcHRpb25zLnN0eWxlVGFnVHJhbnNmb3JtID0gc3R5bGVUYWdUcmFuc2Zvcm1Gbjtcbm9wdGlvbnMuc2V0QXR0cmlidXRlcyA9IHNldEF0dHJpYnV0ZXM7XG5cbiAgICAgIG9wdGlvbnMuaW5zZXJ0ID0gaW5zZXJ0Rm4uYmluZChudWxsLCBcImhlYWRcIik7XG4gICAgXG5vcHRpb25zLmRvbUFQSSA9IGRvbUFQSTtcbm9wdGlvbnMuaW5zZXJ0U3R5bGVFbGVtZW50ID0gaW5zZXJ0U3R5bGVFbGVtZW50O1xuXG52YXIgdXBkYXRlID0gQVBJKGNvbnRlbnQsIG9wdGlvbnMpO1xuXG5cblxuZXhwb3J0ICogZnJvbSBcIiEhLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvZGlzdC9janMuanMhLi9tZWRpYS1xdWVyaWVzLmNzc1wiO1xuICAgICAgIGV4cG9ydCBkZWZhdWx0IGNvbnRlbnQgJiYgY29udGVudC5sb2NhbHMgPyBjb250ZW50LmxvY2FscyA6IHVuZGVmaW5lZDtcbiIsImltcG9ydCBzdGFydEdhbWUgZnJvbSBcIi4vc3RhcnRHYW1lXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHByZXBhcmVHYW1lKHBsYXllciwgQUkpIHtcblxuICBjb25zdCBwbGF5ZXJCb2FyZCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCdwbGF5ZXItYm9hcmQnKVxuICBjb25zdCBsZW5ndGhJbmRpY2F0b3IgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnc2hpcC1sZW5ndGgnKVxuICBjb25zdCBzaGlwTGVucyA9IFs1LCA1LCAzLCAyLCAyLCAyLCAxXVxuICBsZXQgZGlyZWN0aW9uID0gJ3JpZ2h0J1xuICBsZXQgY3VycmVudFNoaXAgPSAwXG5cbiAgLy8gaGFuZGxlIGNoYW5naW5nIGRpcmVjdGlvblxuICBjb25zdCBkaXJlY3Rpb25UZXh0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ2RpcmVjdGlvbi10ZXh0JylcbiAgY29uc3Qgcm90YXRlQnRuID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcignLnJvdGF0ZScpXG4gIHJvdGF0ZUJ0bi5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICBpZiAoZGlyZWN0aW9uID09PSAncmlnaHQnKSBkaXJlY3Rpb24gPSAnZG93bidcbiAgICBlbHNlIGlmKGRpcmVjdGlvbiA9PT0gJ2Rvd24nKSBkaXJlY3Rpb24gPSAncmlnaHQnXG4gICAgZGlyZWN0aW9uVGV4dC50ZXh0Q29udGVudCA9IGRpcmVjdGlvblxuICB9KVxuXG4gIGZvcihsZXQgaSA9IDA7IGkgPCBwbGF5ZXIuYm9hcmQubGVuZ3RoOyBpKyspIHtcbiAgICBjb25zdCBib3ggPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKVxuICAgIGJveC5pZCA9IHBsYXllci5ib2FyZFtpXS5jb29yZGluYXRlc1xuICAgIGJveC5jbGFzc0xpc3QuYWRkKCdib3gnLCAncHJlLWdhbWUnKVxuICAgIC8vIHNob3cgc2hpcCBsb2NhdGlvbiBvbiBob3ZlclxuICAgIGJveC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZW92ZXInLCAoKSA9PiB7XG4gICAgICBhbGxCb3hlcy5mb3JFYWNoKHNxdWFyZSA9PiB7XG4gICAgICAgIHNxdWFyZS5jbGFzc0xpc3QucmVtb3ZlKCdoaWdobGlnaHQnKVxuICAgICAgICAvLyBnZXQgdGhlIHggYW5kIHRoZSB5IG9mIGhvdmVyZWQgYm94IGFuZCBvdGhlciBzcXVhcmVzXG4gICAgICAgIGNvbnN0IGhvdmVyZWRDb29yZHMgPSBib3guaWQuc3BsaXQoJywnKVxuICAgICAgICBjb25zdCBib3hYID0gK2hvdmVyZWRDb29yZHNbMF1cbiAgICAgICAgY29uc3QgYm94WSA9ICtob3ZlcmVkQ29vcmRzWzFdXG4gICAgICAgIGNvbnN0IHNxdWFyZUNvb3JkID0gc3F1YXJlLmlkLnNwbGl0KCcsJylcbiAgICAgICAgY29uc3Qgc3F1YXJlWCA9ICtzcXVhcmVDb29yZFswXVxuICAgICAgICBjb25zdCBzcXVhcmVZID0gK3NxdWFyZUNvb3JkWzFdXG5cbiAgICAgICAgLy8gaGlnaGxpZ2h0IHRoZSBzaGlwIHNpemUgaW4gdGhlIGNvcnJlY3QgZGlyZWN0aW9uXG4gICAgICAgIGlmKGRpcmVjdGlvbiA9PT0gJ3JpZ2h0Jykge1xuICAgICAgICAgIGlmKGJveFggPD0gc3F1YXJlWCAmJiBzcXVhcmVYIDwgYm94WCArIHNoaXBMZW5zW2N1cnJlbnRTaGlwXSAmJiBzcXVhcmVZID09PSBib3hZKSB7XG4gICAgICAgICAgICAvLyBpZiBzaGlwIGV4Y2VlZGluZyB0aGUgYm9hcmQgcmV0dXJuXG4gICAgICAgICAgICBpZihib3hYICsgc2hpcExlbnNbY3VycmVudFNoaXBdID4gMTEpIHJldHVyblxuICAgICAgICAgICAgLy8gZWxzZSBjb2xvciB0aGUgc3F1YXJlcyB0aGUgc2hpcCB3aWxsIHRha2VcbiAgICAgICAgICAgIHNxdWFyZS5jbGFzc0xpc3QuYWRkKCdoaWdobGlnaHQnKVxuICAgICAgICAgIH1cbiAgICAgICAgfSBlbHNlIGlmKGRpcmVjdGlvbiA9PT0gJ2Rvd24nKSB7XG4gICAgICAgICAgaWYoYm94WSA8PSBzcXVhcmVZICYmIHNxdWFyZVkgPCBib3hZICsgc2hpcExlbnNbY3VycmVudFNoaXBdICYmIHNxdWFyZVggPT09IGJveFgpIHtcbiAgICAgICAgICAgIC8vIGlmIHNoaXAgZXhjZWVkaW5nIHRoZSBib2FyZCByZXR1cm5cbiAgICAgICAgICAgIGlmKGJveFkgKyBzaGlwTGVuc1tjdXJyZW50U2hpcF0gPiAxMSkgcmV0dXJuXG4gICAgICAgICAgICAvLyBlbHNlIGNvbG9yIHRoZSBzcXVhcmVzIHRoZSBzaGlwIHdpbGwgdGFrZVxuICAgICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ2hpZ2hsaWdodCcpXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuICAgIH0pXG5cbiAgICAvLyBwbGFjZSB0aGUgc2hpcCBvbiBjbGlja1xuICAgIGJveC5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsICgpID0+IHtcbiAgICAgIC8vIGdldCBhbiBhcnJheSBvZiB0d28gbnVtYmVycyBhcyBjb29yZGluYXRlc1xuICAgICAgY29uc3QgaG92ZXJlZENvb3Jkc1N0cmluZyA9IGJveC5pZC5zcGxpdCgnLCcpXG4gICAgICBjb25zdCBob3ZlcmVkQ29vcmRzID0gW11cbiAgICAgIGhvdmVyZWRDb29yZHMucHVzaCgraG92ZXJlZENvb3Jkc1N0cmluZ1swXSlcbiAgICAgIGhvdmVyZWRDb29yZHMucHVzaCgraG92ZXJlZENvb3Jkc1N0cmluZ1sxXSlcbiAgICAgIFxuICAgICAgLy8gdHJ5IHRvIHBsYWNlIHNoaXBcbiAgICAgIHBsYXllci5wbGFjZVNoaXAoaG92ZXJlZENvb3JkcywgZGlyZWN0aW9uLCBzaGlwTGVuc1tjdXJyZW50U2hpcF0pXG4gICAgICAvLyBjaGVjayBpZiBzaGlwIHJlYWxseSBwbGFjZWRcbiAgICAgIGlmKHBsYXllci5nYW1lQm9hcmQuc2hpcHMubGVuZ3RoID4gY3VycmVudFNoaXApIHtcbiAgICAgICAgY3VycmVudFNoaXArK1xuICAgICAgICBsZW5ndGhJbmRpY2F0b3IudGV4dENvbnRlbnQgPSBzaGlwTGVuc1tjdXJyZW50U2hpcF1cbiAgICAgICAgLy8gaWYgaXQncyBwbGFjZWQsIGNoYW5nZWQgaGlnaGxpZ2h0ZWQgc3F1YXJlcyB0byBzaGlwIHNxdWFyZXNcbiAgICAgICAgY29uc3QgaGlnaGxpZ2h0ZWRTcXVhcmVzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLmhpZ2hsaWdodCcpXG4gICAgICAgIGhpZ2hsaWdodGVkU3F1YXJlcy5mb3JFYWNoKHNxdWFyZSA9PiB7XG4gICAgICAgICAgc3F1YXJlLmNsYXNzTGlzdC5hZGQoJ2NvbnRhaW4tc2hpcCcpXG4gICAgICAgIH0pXG4gICAgICB9XG4gICAgICBpZighc2hpcExlbnNbY3VycmVudFNoaXBdKSB7XG4gICAgICAgIC8vIGNyZWF0ZSBBSSBzaGlwcyBhbmQgc3RhcnQgZ2FtZVxuICAgICAgICBBSS5wbGFjZVNoaXAoMSkgXG4gICAgICAgIEFJLnBsYWNlU2hpcCgyKSBcbiAgICAgICAgQUkucGxhY2VTaGlwKDIpIFxuICAgICAgICBBSS5wbGFjZVNoaXAoMikgXG4gICAgICAgIEFJLnBsYWNlU2hpcCgzKSBcbiAgICAgICAgQUkucGxhY2VTaGlwKDUpIFxuICAgICAgICBBSS5wbGFjZVNoaXAoNSkgXG4gICAgICAgIHN0YXJ0R2FtZShwbGF5ZXIsIEFJKVxuICAgICAgfVxuICAgIH0pXG4gICAgcGxheWVyQm9hcmQuYXBwZW5kKGJveClcbiAgfVxuICBjb25zdCBhbGxCb3hlcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5wcmUtZ2FtZScpXG5cbiAgLy8gY3JlYXRlIHRoZSBzaGlwcyBtYW51YWxseSBmb3IgdGVzdGluZ1xuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxLDFdLCAncmlnaHQnLCAxKVxuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxLDNdLCAncmlnaHQnLCAyKVxuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxLDVdLCAncmlnaHQnLCAzKVxuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxLDddLCAncmlnaHQnLCA0KVxuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxLDldLCAncmlnaHQnLCA1KVxuICAvLyBwbGF5ZXIucGxhY2VTaGlwKFsxMCwxMF0sICdkb3duJywgNilcbiAgLy8gQUkucGxhY2VTaGlwKDEpIFxuICAvLyBBSS5wbGFjZVNoaXAoMikgXG4gIC8vIEFJLnBsYWNlU2hpcCgyKSBcbiAgLy8gQUkucGxhY2VTaGlwKDIpIFxuICAvLyBBSS5wbGFjZVNoaXAoMykgXG4gIC8vIEFJLnBsYWNlU2hpcCg1KSBcbiAgLy8gQUkucGxhY2VTaGlwKDUpIFxuXG4gIC8vIGdhbWVMb29wKHBsYXllciwgQUkpXG59IiwiaW1wb3J0IHByZXBhcmVHYW1lIGZyb20gXCIuL01vZHVsZXMvcHJlcGFyZUdhbWVcIjtcbmltcG9ydCBBSXBsYXllciBmcm9tIFwiLi9jb25zdHJ1Y3RvcnMvQUlwbGF5ZXJcIjtcbmltcG9ydCBQbGF5ZXIgZnJvbSBcIi4vY29uc3RydWN0b3JzL1BsYXllclwiO1xuaW1wb3J0ICcuL3N0eWxlcy9zdHlsZXMuY3NzJ1xuaW1wb3J0ICcuL3N0eWxlcy93aW5uZXItb3ZlcmxheS5jc3MnXG5pbXBvcnQgJy4vc3R5bGVzL3ByZXBhcmUtZ2FtZS5jc3MnXG5pbXBvcnQgJy4vc3R5bGVzL21lZGlhLXF1ZXJpZXMuY3NzJ1xuXG4vLyBjcmVhdGUgdGhlIHBsYXllcnNcbmNvbnN0IHBsYXllciA9IFBsYXllcigncGxheWVyJylcbmNvbnN0IEFJID0gQUlwbGF5ZXIoKVxuXG5wcmVwYXJlR2FtZShwbGF5ZXIsIEFJKVxuXG5jb25zdCBwbGF5QWdhaW4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcud2lubmVyLW92ZXJsYXkgPiBwJylcblxucGxheUFnYWluLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgKCkgPT4ge1xuICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKClcbn0pXG4iLCJpbXBvcnQgR2FtZUJvYXJkIGZyb20gXCIuL0dhbWVCb2FyZFwiXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIFBsYXllcihwbGF5ZXJOYW1lKSB7XG4gIGNvbnN0IG5hbWUgPSBwbGF5ZXJOYW1lXG4gIGNvbnN0IGdhbWVCb2FyZCA9IG5ldyBHYW1lQm9hcmQoKVxuXG4gIHJldHVybiB7XG4gICAgbmFtZSxcbiAgICBnYW1lQm9hcmQsXG4gICAgZ2V0IGJvYXJkKCkge1xuICAgICAgcmV0dXJuIGdhbWVCb2FyZC5ib2FyZFxuICAgIH0sXG5cbiAgICBwbGFjZVNoaXAoY29vcmQsIGRpcmVjdGlvbiwgbGVuKSB7XG4gICAgICByZXR1cm4gZ2FtZUJvYXJkLnBsYWNlU2hpcChjb29yZCwgZGlyZWN0aW9uLCBsZW4pXG4gICAgfSxcblxuICAgIHNob290KHRhcmdldCwgY29vcmQpIHtcbiAgICAgIHRhcmdldC5nYW1lQm9hcmQucmVjZWl2ZUF0dGFjayhjb29yZClcbiAgICB9XG4gIH1cbn0iLCJpbXBvcnQgR2FtZUJvYXJkIGZyb20gXCIuL0dhbWVCb2FyZFwiO1xuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBBSXBsYXllcigpIHtcbiAgY29uc3QgbmFtZSA9ICdBSSdcbiAgY29uc3QgZ2FtZUJvYXJkID0gbmV3IEdhbWVCb2FyZCgpXG4gIGxldCBsYXN0VHVybkhpdCA9IGZhbHNlXG4gIGxldCBzaGlwRGlyZWN0aW9uID0gJydcbiAgbGV0IGZpcnN0SGl0ID0gW11cbiAgbGV0IGxhc3RIaXQgPSBbXVxuXG4gIGZ1bmN0aW9uIGZpbmROZXh0QXR0YWNrKGRpcmVjdGlvbikge1xuICAgIGxldCBuZXh0QXR0YWNrID0gW11cbiAgICBpZihkaXJlY3Rpb24gPT09ICdyaWdodCcpIG5leHRBdHRhY2sgPSBbbGFzdEhpdFswXSArIDEsIGxhc3RIaXRbMV1dXG4gICAgaWYoZGlyZWN0aW9uID09PSAnbGVmdCcpIG5leHRBdHRhY2sgPSBbbGFzdEhpdFswXSAtIDEsIGxhc3RIaXRbMV1dXG4gICAgaWYoZGlyZWN0aW9uID09PSAndXAnKSBuZXh0QXR0YWNrID0gW2xhc3RIaXRbMF0sIGxhc3RIaXRbMV0gLSAxXVxuICAgIGlmKGRpcmVjdGlvbiA9PT0gJ2Rvd24nKSBuZXh0QXR0YWNrID0gW2xhc3RIaXRbMF0sIGxhc3RIaXRbMV0gKyAxXVxuICAgIHJldHVybiBuZXh0QXR0YWNrXG4gIH1cblxuICByZXR1cm4ge1xuICAgIG5hbWUsXG4gICAgZ2FtZUJvYXJkLFxuICAgIGdldCBib2FyZCgpIHtcbiAgICAgIHJldHVybiBnYW1lQm9hcmQuYm9hcmRcbiAgICB9LFxuXG4gICAgcGxhY2VTaGlwKGxlbikge1xuICAgICAgY29uc3QgaWQgPSBjcnlwdG8ucmFuZG9tVVVJRCgpXG4gICAgICAvLyBsaW1pdCB0aGUgYW1vdW50IG9mIGF0dGVtcHRzXG4gICAgICBsZXQgYXR0ZW1wdHMgPSAwXG4gICAgICB3aGlsZShhdHRlbXB0cyA8IDEwMDApIHtcbiAgICAgICAgYXR0ZW1wdHMrK1xuICAgICAgICAvLyBkZWNsYXJlIGVtcHR5IGNvb3JkcyBhcnJheVxuICAgICAgICBsZXQgY29vcmRzID0gW11cblxuICAgICAgICAvLyBnZW5lcmF0ZSByYW5kb20gY29vcmRpbmF0ZXNcbiAgICAgICAgY29uc3QgeCA9IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTApXG4gICAgICAgIGNvbnN0IHkgPSBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwKVxuXG4gICAgICAgIC8vIHB1c2ggdGhlbSB0byB0aGUgYXJyYXlcbiAgICAgICAgY29vcmRzLnB1c2goeClcbiAgICAgICAgY29vcmRzLnB1c2goeSlcblxuICAgICAgICAvLyBwaWNrIHJhbmRvbSBkaXJlY3Rpb25cbiAgICAgICAgY29uc3QgcG9zc2libGVEaXJlY3Rpb25zID0gWydyaWdodCcsICdkb3duJ11cbiAgICAgICAgY29uc3QgcmFuZG9tRGlyZWN0aW9uID0gcG9zc2libGVEaXJlY3Rpb25zW01hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHBvc3NpYmxlRGlyZWN0aW9ucy5sZW5ndGgpXVxuXG4gICAgICAgIC8vIHRyeSB0byBwbGFjZSBzaGlwXG4gICAgICAgIGdhbWVCb2FyZC5wbGFjZVNoaXAoY29vcmRzLCByYW5kb21EaXJlY3Rpb24sIGxlbiwgaWQpXG5cbiAgICAgICAgLy8gZ2V0IHRoZSBzaGlwIGxvY2F0aW9uIG9uIHRoZSBib2FyZFxuICAgICAgICBsZXQgbG9jYXRpb24gPSBnYW1lQm9hcmQuYm9hcmQuZmluZChib3ggPT4gYm94LmNvb3JkaW5hdGVzLmV2ZXJ5KChjb29yZCwgaW5kZXgpID0+IGNvb3JkID09PSBjb29yZHNbaW5kZXhdKSlcblxuICAgICAgICAvLyBjaGVjayBpZiBzaGlwIGlzIHByZXNlbnQgYXQgdGhlIGxvY2F0aW9uXG4gICAgICAgIGlmKGxvY2F0aW9uLnNoaXAgIT0gbnVsbCkge1xuICAgICAgICAgIC8vIGNoZWNrIGlmIGl0cyB0aGUgc2hpcCB3ZSBqdXN0IGNyZWF0ZWRcbiAgICAgICAgICBpZihsb2NhdGlvbi5zaGlwLmlkID09PSBpZCkge1xuICAgICAgICAgICAgcmV0dXJuXG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9XG4gICAgfSxcblxuICAgIHNob290KHRhcmdldCkge1xuICAgICAgLy8gc3RvcmUgdGhlIHRhcmdldCBib2FyZCBhcnJheSBhcyBhIHZhcmlhYmxlXG4gICAgICBjb25zdCB0YXJnZXRCb2FyZCA9IHRhcmdldC5nYW1lQm9hcmQuYm9hcmRcblxuICAgICAgLy8gY2hlY2sgaWYgbGFzdCB0dXJuIHdhcyBhIGhpdFxuICAgICAgaWYobGFzdFR1cm5IaXQpIHtcbiAgICAgICAgLy8gY2hlY2sgaWYgd2UgYWxyZWFkeSBrbm93IHRoZSBzaGlwIGRpcmVjdGlvblxuICAgICAgICBpZihzaGlwRGlyZWN0aW9uICE9PSAnJykge1xuICAgICAgICAgIC8vIGtlZXAgc2hvb3RpbmcgaW4gdGhlIHNhbWUgZGlyZWN0aW9uXG5cbiAgICAgICAgICBsZXQgc2hvdEZpcmVkID0gZmFsc2VcbiAgICAgICAgICBcbiAgICAgICAgICAvLyBmaW5kIG5leHQgdGFyZ2V0IGNvb3JkaW5hdGVzIHVzaW5nIHRoZSBkaXJlY3Rpb25cbiAgICAgICAgICBsZXQgbmV4dEF0dGFjayA9IGZpbmROZXh0QXR0YWNrKHNoaXBEaXJlY3Rpb24pXG5cbiAgICAgICAgICAvLyBmaW5kIHRoZSBsb2NhdGlvbiB3aXRoIHRoZSBjb3JyZWN0IGNvb3JkaW5hdGVzXG4gICAgICAgICAgbGV0IGxvY2F0aW9uID0gdGFyZ2V0Qm9hcmQuZmluZChib3ggPT4gYm94LmNvb3JkaW5hdGVzLmV2ZXJ5KChjb29yZCwgaW5kZXgpID0+IGNvb3JkID09PSBuZXh0QXR0YWNrW2luZGV4XSkpXG4gICAgICAgICAgLy8gY2hlY2sgaWYgbG9jYXRpb24gaXMgaW5zaWRlIHRoZSBib2FyZFxuICAgICAgICAgIGlmKGxvY2F0aW9uKSB7XG4gICAgICAgICAgICAvLyBpZiBsb2NhdGlvbiBpc24ndCBhdHRhY2tlZCwgYXR0YWNrIGl0XG4gICAgICAgICAgICBpZighbG9jYXRpb24uYXR0YWNrZWQpIHtcbiAgICAgICAgICAgICAgdGFyZ2V0LmdhbWVCb2FyZC5yZWNlaXZlQXR0YWNrKGxvY2F0aW9uLmNvb3JkaW5hdGVzKVxuICAgICAgICAgICAgICBsYXN0SGl0ID0gbG9jYXRpb24uY29vcmRpbmF0ZXNcbiAgICAgICAgICAgICAgc2hvdEZpcmVkID0gdHJ1ZVxuICAgICAgICAgICAgICAvLyBpZiBzaGlwIHdhcyBoaXQgaW4gdGhpcyBsb2NhdGlvbiwgcmV0dXJuXG4gICAgICAgICAgICAgIGlmKGxvY2F0aW9uLnNoaXApIHtcbiAgICAgICAgICAgICAgICBpZihsb2NhdGlvbi5zaGlwLmlzU3Vuaykge1xuICAgICAgICAgICAgICAgICAgbGFzdFR1cm5IaXQgPSBmYWxzZVxuICAgICAgICAgICAgICAgICAgc2hpcERpcmVjdGlvbiA9ICcnXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBsb2NhdGlvblxuICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgIC8vIGlmIGxvY2F0aW9uIGhhcyBubyBzaGlwLCBjb250aW51ZSB0byBjaGFuZ2UgZGlyZWN0aW9uXG4gICAgICAgICAgICB9XG4gICAgICAgICAgICAvLyBpZiBsb2NhdGlvbiBpcyBvdXRzaWRlIHRoZSBib2FyZCwgY29udGludWUgdG8gY2hhbmdlIGRpcmVjdGlvblxuICAgICAgICAgIH1cbiAgICAgICAgICBcbiAgICAgICAgICAvLyBpZiBpdCBpcyBhdHRhY2tlZCwgZmxpcCB0aGUgZGlyZWN0aW9uIHRvIHRoZSBvdGhlciBzaWRlIGFuZCBoaXQgaXRcbiAgICAgICAgICBpZihzaGlwRGlyZWN0aW9uID09PSAncmlnaHQnKSBzaGlwRGlyZWN0aW9uID0gJ2xlZnQnXG4gICAgICAgICAgZWxzZSBpZihzaGlwRGlyZWN0aW9uID09PSAnbGVmdCcpIHNoaXBEaXJlY3Rpb24gPSAncmlnaHQnXG4gICAgICAgICAgZWxzZSBpZihzaGlwRGlyZWN0aW9uID09PSAndXAnKSBzaGlwRGlyZWN0aW9uID0gJ2Rvd24nXG4gICAgICAgICAgZWxzZSBpZihzaGlwRGlyZWN0aW9uID09PSAnZG93bicpIHNoaXBEaXJlY3Rpb24gPSAndXAnXG4gICAgICAgICAgbGFzdEhpdCA9IGZpcnN0SGl0XG4gICAgICAgICAgaWYobG9jYXRpb24gJiYgIWxvY2F0aW9uLnNoaXApIHJldHVybiBsb2NhdGlvblxuXG5cbiAgICAgICAgICAvLyBpZiBubyBzaG90IHdhcyBmaXJlZCB0aGF0IHR1cm5cbiAgICAgICAgICBpZighc2hvdEZpcmVkKSB7XG4gICAgICAgICAgICAvLyBmaW5kIHRoZSBuZXcgbG9jYXRpb24gZm9yIGF0dGFja1xuICAgICAgICAgICAgbmV4dEF0dGFjayA9IGZpbmROZXh0QXR0YWNrKHNoaXBEaXJlY3Rpb24pXG4gICAgICAgICAgICBsb2NhdGlvbiA9IHRhcmdldEJvYXJkLmZpbmQoYm94ID0+IGJveC5jb29yZGluYXRlcy5ldmVyeSgoY29vcmQsIGluZGV4KSA9PiBjb29yZCA9PT0gbmV4dEF0dGFja1tpbmRleF0pKVxuICAgICAgICAgICAgLy8gYXR0YWNrIGl0XG4gICAgICAgICAgICB0YXJnZXQuZ2FtZUJvYXJkLnJlY2VpdmVBdHRhY2sobG9jYXRpb24uY29vcmRpbmF0ZXMpXG4gICAgICAgICAgICBsYXN0SGl0ID0gbG9jYXRpb24uY29vcmRpbmF0ZXNcbiAgICAgICAgICAgIHJldHVybiBsb2NhdGlvblxuICAgICAgICAgIH1cblxuXG5cbiAgICAgICAgLy8gaWYgd2UgZG9uJ3Qga25vdyB0aGUgZGlyZWN0aW9uLCBmaW5kIGl0XG4gICAgICAgIH0gZWxzZSB7XG4gICAgICAgICAgbGV0IGZpcnN0WCA9IGZpcnN0SGl0WzBdXG4gICAgICAgICAgbGV0IGZpcnN0WSA9IGZpcnN0SGl0WzFdXG4gICAgICAgICAgbGV0IGFkamFjZW50TG9jYXRpb25zID0gW1xuICAgICAgICAgICAgW2ZpcnN0WCArIDEsIGZpcnN0WV0sXG4gICAgICAgICAgICBbZmlyc3RYLCBmaXJzdFkgKyAxXSxcbiAgICAgICAgICAgIFtmaXJzdFggLSAxLCBmaXJzdFldLFxuICAgICAgICAgICAgW2ZpcnN0WCwgZmlyc3RZIC0gMV1cbiAgICAgICAgICBdXG4gICAgICAgICAgLy8gZ2V0IHRoZSBhZGphY2VudCBib3ggdGhhdCBpc24ndCBhdHRhY2tlZFxuICAgICAgICAgIGxldCBsb2NhdGlvblxuICAgICAgICAgIGZvcihsZXQgaSA9IDA7IGkgPCBhZGphY2VudExvY2F0aW9ucy5sZW5ndGg7IGkrKykge1xuICAgICAgICAgICAgbG9jYXRpb24gPSB0YXJnZXRCb2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGFkamFjZW50TG9jYXRpb25zW2ldW2luZGV4XSkpXG4gICAgICAgICAgICAvLyBicmVhayB0aGUgbG9vcCB3aGVuIGxvY2F0aW9uIHRoYXQgaXNuJ3QgYXR0YWNrIGZvdW5kXG4gICAgICAgICAgICBpZihsb2NhdGlvbiAmJiAhbG9jYXRpb24uYXR0YWNrZWQpIGJyZWFrXG4gICAgICAgICAgfVxuICAgICAgICAgIC8vIGF0dGFjayB0aGUgbG9jYXRpb25cbiAgICAgICAgICB0YXJnZXQuZ2FtZUJvYXJkLnJlY2VpdmVBdHRhY2sobG9jYXRpb24uY29vcmRpbmF0ZXMpXG5cbiAgICAgICAgICAvLyBpZiB0aGUgbG9jYXRpb24gaGFzIHNoaXAgKHdoaWNoIG1lYW5zIGl0J3MgYSBoaXQpXG4gICAgICAgICAgaWYobG9jYXRpb24uc2hpcCkge1xuXG4gICAgICAgICAgICAvLyBpZiB0aGUgc2hpcCBzdW5rLCBtYWtlIG5leHQgYXR0YWNrIHJhbmRvbVxuICAgICAgICAgICAgaWYobG9jYXRpb24uc2hpcC5pc1N1bmspIGxhc3RUdXJuSGl0ID0gZmFsc2VcblxuICAgICAgICAgICAgLy8gZWxzZSBzdG9yZSB0aGUgY29vcmRpbmF0ZXMgYXMgbGFzdCBoaXRcbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICBsYXN0SGl0ID0gbG9jYXRpb24uY29vcmRpbmF0ZXNcbiAgICAgICAgICAgICAgbGV0IGxhc3RYID0gbGFzdEhpdFswXVxuICAgICAgICAgICAgICBsZXQgbGFzdFkgPSBsYXN0SGl0WzFdXG5cbiAgICAgICAgICAgICAgLy8gZGV0ZXJtaW5lIHRoZSBjb3JyZWN0IGRpcmVjdGlvblxuICAgICAgICAgICAgICBpZihsYXN0WCA+IGZpcnN0WCkgc2hpcERpcmVjdGlvbiA9ICdyaWdodCdcbiAgICAgICAgICAgICAgZWxzZSBpZihsYXN0WCA8IGZpcnN0WCkgc2hpcERpcmVjdGlvbiA9ICdsZWZ0J1xuICAgICAgICAgICAgICBlbHNlIGlmKGxhc3RZIDwgZmlyc3RZKSBzaGlwRGlyZWN0aW9uID0gJ3VwJ1xuICAgICAgICAgICAgICBlbHNlIGlmKGxhc3RZID4gZmlyc3RZKSBzaGlwRGlyZWN0aW9uID0gJ2Rvd24nXG4gICAgICAgICAgICB9XG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBsb2NhdGlvblxuICAgICAgICB9XG4gICAgICB9XG5cbiAgICAgIC8vIGlmIGxhc3QgdGltZSB3YXNuJ3QgYSBoaXQsIHRha2UgYSByYW5kb20gc2hvdFxuICAgICAgd2hpbGUodHJ1ZSkge1xuICAgICAgICAvLyBkZWNsYXJlIGVtcHR5IGNvb3JkcyBhcnJheVxuICAgICAgICBsZXQgY29vcmRzID0gW11cblxuICAgICAgICAvLyBnZW5lcmF0ZSByYW5kb20gY29vcmRpbmF0ZXNcbiAgICAgICAgY29uc3QgeCA9IE1hdGguY2VpbChNYXRoLnJhbmRvbSgpICogMTApXG4gICAgICAgIGNvbnN0IHkgPSBNYXRoLmNlaWwoTWF0aC5yYW5kb20oKSAqIDEwKVxuXG4gICAgICAgIC8vIHB1c2ggdGhlbSB0byB0aGUgYXJyYXlcbiAgICAgICAgY29vcmRzLnB1c2goeClcbiAgICAgICAgY29vcmRzLnB1c2goeSlcblxuICAgICAgICAvLyBmaW5kIHRoZSBjb3JyZWN0IGxvY2F0aW9uIG9uIHRhcmdldCBib2FyZFxuICAgICAgICBsZXQgbG9jYXRpb24gPSB0YXJnZXRCb2FyZC5maW5kKGJveCA9PiBib3guY29vcmRpbmF0ZXMuZXZlcnkoKGNvb3JkLCBpbmRleCkgPT4gY29vcmQgPT09IGNvb3Jkc1tpbmRleF0pKVxuXG4gICAgICAgIC8vIGlmIHRoZSBsb2NhdGlvbiBpc24ndCBhdHRhY2tlZFxuICAgICAgICBpZighbG9jYXRpb24uYXR0YWNrZWQpIHtcbiAgICAgICAgICAvLyBhdHRhY2sgaXRcbiAgICAgICAgICB0YXJnZXQuZ2FtZUJvYXJkLnJlY2VpdmVBdHRhY2sobG9jYXRpb24uY29vcmRpbmF0ZXMpXG4gICAgICAgICAgLy8gaWYgdGhlcmUgaXMgYSBzaGlwIGF0IHRoZSBsb2NhdGlvblxuICAgICAgICAgIGlmKGxvY2F0aW9uLnNoaXApIHtcbiAgICAgICAgICAgIC8vIGlmIHNoaXAgc3Vuayh0aGUgc2hpcCB3aXRoIGxlbmd0aCBvZiAxKVxuICAgICAgICAgICAgaWYobG9jYXRpb24uc2hpcC5pc1N1bmspIHJldHVybiBsb2NhdGlvblxuXG4gICAgICAgICAgICAvLyBpZiBzaGlwIGRpZG4ndCBzaW5rXG4gICAgICAgICAgICAvLyBkZWNsYXJlIHRoaXMgdHVybiBhcyBhIGhpdFxuICAgICAgICAgICAgbGFzdFR1cm5IaXQgPSB0cnVlXG4gICAgICAgICAgICAvLyBzdG9yZSB0aGUgY29vcmRpbmF0ZXMgd2hlcmUgaXQgaGl0XG4gICAgICAgICAgICBmaXJzdEhpdCA9IGxvY2F0aW9uLmNvb3JkaW5hdGVzXG4gICAgICAgICAgfVxuICAgICAgICAgIHJldHVybiBsb2NhdGlvblxuICAgICAgICB9XG4gICAgICAgIC8vIGlmIGxvY2F0aW9uIGlzIGF0dGFja2VkLCByZXBlYXQgdG8gZ2V0IGFub3RoZXIgbG9jYXRpb25cbiAgICAgIH1cbiAgICB9XG4gIH1cbn0iXSwibmFtZXMiOlsiX19fQ1NTX0xPQURFUl9FWFBPUlRfX18iLCJwdXNoIiwibW9kdWxlIiwiaWQiLCJfX19DU1NfTE9BREVSX1VSTF9JTVBPUlRfMF9fXyIsIlVSTCIsIl9fX0NTU19MT0FERVJfVVJMX1JFUExBQ0VNRU5UXzBfX18iLCJleHBvcnRzIiwiY3NzV2l0aE1hcHBpbmdUb1N0cmluZyIsImxpc3QiLCJ0b1N0cmluZyIsInRoaXMiLCJtYXAiLCJpdGVtIiwiY29udGVudCIsIm5lZWRMYXllciIsImNvbmNhdCIsImxlbmd0aCIsImpvaW4iLCJpIiwibW9kdWxlcyIsIm1lZGlhIiwiZGVkdXBlIiwic3VwcG9ydHMiLCJsYXllciIsInVuZGVmaW5lZCIsImFscmVhZHlJbXBvcnRlZE1vZHVsZXMiLCJrIiwiX2siLCJ1cmwiLCJvcHRpb25zIiwiU3RyaW5nIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJ0ZXN0Iiwic2xpY2UiLCJoYXNoIiwibmVlZFF1b3RlcyIsInJlcGxhY2UiLCJjc3NNYXBwaW5nIiwiYnRvYSIsImJhc2U2NCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwiSlNPTiIsInN0cmluZ2lmeSIsImRhdGEiLCJzb3VyY2VNYXBwaW5nIiwic3R5bGVzSW5ET00iLCJnZXRJbmRleEJ5SWRlbnRpZmllciIsImlkZW50aWZpZXIiLCJyZXN1bHQiLCJtb2R1bGVzVG9Eb20iLCJpZENvdW50TWFwIiwiaWRlbnRpZmllcnMiLCJiYXNlIiwiY291bnQiLCJpbmRleEJ5SWRlbnRpZmllciIsIm9iaiIsImNzcyIsInNvdXJjZU1hcCIsInJlZmVyZW5jZXMiLCJ1cGRhdGVyIiwiYWRkRWxlbWVudFN0eWxlIiwiYnlJbmRleCIsInNwbGljZSIsImFwaSIsImRvbUFQSSIsInVwZGF0ZSIsIm5ld09iaiIsInJlbW92ZSIsImxhc3RJZGVudGlmaWVycyIsIm5ld0xpc3QiLCJpbmRleCIsIm5ld0xhc3RJZGVudGlmaWVycyIsIl9pIiwiX2luZGV4IiwibWVtbyIsImluc2VydCIsInN0eWxlIiwidGFyZ2V0Iiwic3R5bGVUYXJnZXQiLCJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJ3aW5kb3ciLCJIVE1MSUZyYW1lRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsImhlYWQiLCJlIiwiZ2V0VGFyZ2V0IiwiRXJyb3IiLCJhcHBlbmRDaGlsZCIsImVsZW1lbnQiLCJjcmVhdGVFbGVtZW50Iiwic2V0QXR0cmlidXRlcyIsImF0dHJpYnV0ZXMiLCJzdHlsZUVsZW1lbnQiLCJub25jZSIsInNldEF0dHJpYnV0ZSIsImluc2VydFN0eWxlRWxlbWVudCIsInN0eWxlVGFnVHJhbnNmb3JtIiwiYXBwbHkiLCJwYXJlbnROb2RlIiwicmVtb3ZlQ2hpbGQiLCJyZW1vdmVTdHlsZUVsZW1lbnQiLCJzdHlsZVNoZWV0IiwiY3NzVGV4dCIsImZpcnN0Q2hpbGQiLCJjcmVhdGVUZXh0Tm9kZSIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsIl9fd2VicGFja19tb2R1bGVzX18iLCJtIiwibiIsImdldHRlciIsImQiLCJhIiwiZGVmaW5pdGlvbiIsImtleSIsIm8iLCJPYmplY3QiLCJkZWZpbmVQcm9wZXJ0eSIsImVudW1lcmFibGUiLCJnZXQiLCJnIiwiZ2xvYmFsVGhpcyIsIkZ1bmN0aW9uIiwicHJvcCIsInByb3RvdHlwZSIsImhhc093blByb3BlcnR5IiwiY2FsbCIsInNjcmlwdFVybCIsImltcG9ydFNjcmlwdHMiLCJsb2NhdGlvbiIsImN1cnJlbnRTY3JpcHQiLCJzcmMiLCJzY3JpcHRzIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJwIiwiYiIsImJhc2VVUkkiLCJzZWxmIiwiaHJlZiIsIm5jIiwic3RhcnRHYW1lIiwicGxheWVyIiwiQUkiLCJwbGF5ZXJCb2FyZCIsImdldEVsZW1lbnRCeUlkIiwiQUlCb2FyZCIsImNsYXNzTGlzdCIsImFkZCIsInBsYWNlU2hpcHNUaXRsZSIsImNoYW5nZURpcmVjdGlvbkJ0biIsImxlbmd0aEluZGljYXRvciIsIkFJU2lkZSIsImlubmVySFRNTCIsImJvYXJkIiwiYm94Iiwic2hpcCIsImFwcGVuZCIsImNvb3JkaW5hdGVzIiwiYWRkRXZlbnRMaXN0ZW5lciIsImF0dGFja2VkIiwic2hvb3QiLCJpc1N1bmsiLCJiYWNrZ3JvdW5kQ29sb3IiLCJBSVN0YXRlIiwiY29sb3IiLCJzZXRUaW1lb3V0Iiwic2hpcENvb3JkaW5hdGVzIiwiZm9yRWFjaCIsImNvb3JkcyIsImdhbWVCb2FyZCIsImdldEFkamFjZW50Qm94ZXMiLCJhZGphY2VudCIsImlzR2FtZU92ZXIiLCJBSUhpdCIsImluZGV4T2YiLCJ0YXJnZXRCb3giLCJwbGF5ZXJTdGF0ZSIsImN1cnJlbnRCb3giLCJmaW5kIiwiZXZlcnkiLCJjb29yZCIsImN1cnJlbnRCb3hJbmRleCIsInVwZGF0ZVNoaXBzRGV0YWlscyIsInBsYXllck5hbWUiLCJBSU5hbWUiLCJ0ZXh0Q29udGVudCIsInNoaXBzIiwic3Vua1NoaXBzIiwib3ZlcmxheSIsIndpbm5lck92ZXJsYXkiLCJ3aW5uZXJOYW1lIiwiZGlzcGxheSIsIm5hbWUiLCJTaGlwIiwibGVuIiwiYXJndW1lbnRzIiwiaGl0cyIsImFkZENvb3JkaW5hdGVzIiwiaGl0IiwiR2FtZUJvYXJkIiwidG90YWxIaXRzIiwieCIsInkiLCJwbGFjZVNoaXAiLCJkaXJlY3Rpb24iLCJjb29yZHNDb3B5IiwiY2hvc2VuTG9jYXRpb24iLCJhdmFpbGFibGUiLCJiYXR0bGVzaGlwIiwiY29vcmRpbmF0ZXNDb3B5IiwiY3VycmVudENvb3JkcyIsImFkamFjZW50TG9jYXRpb25zIiwiY3VycmVudCIsInJlY2VpdmVBdHRhY2siLCJmaWx0ZXIiLCJoYXNBcm1lZFNoaXBzIiwiYXJtZWRTaGlwcyIsInNoaXBMZW5zIiwiY3VycmVudFNoaXAiLCJkaXJlY3Rpb25UZXh0IiwiYWxsQm94ZXMiLCJzcXVhcmUiLCJob3ZlcmVkQ29vcmRzIiwic3BsaXQiLCJib3hYIiwiYm94WSIsInNxdWFyZUNvb3JkIiwic3F1YXJlWCIsInNxdWFyZVkiLCJob3ZlcmVkQ29vcmRzU3RyaW5nIiwicXVlcnlTZWxlY3RvckFsbCIsInByZXBhcmVHYW1lIiwiUGxheWVyIiwibGFzdFR1cm5IaXQiLCJzaGlwRGlyZWN0aW9uIiwiZmlyc3RIaXQiLCJsYXN0SGl0IiwiZmluZE5leHRBdHRhY2siLCJuZXh0QXR0YWNrIiwiY3J5cHRvIiwicmFuZG9tVVVJRCIsImF0dGVtcHRzIiwiTWF0aCIsImNlaWwiLCJyYW5kb20iLCJwb3NzaWJsZURpcmVjdGlvbnMiLCJyYW5kb21EaXJlY3Rpb24iLCJmbG9vciIsInRhcmdldEJvYXJkIiwiZmlyc3RYIiwiZmlyc3RZIiwibGFzdFgiLCJsYXN0WSIsInNob3RGaXJlZCIsIkFJcGxheWVyIiwicmVsb2FkIl0sInNvdXJjZVJvb3QiOiIifQ==